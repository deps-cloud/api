// Code generated by go-bindata. (@generated) DO NOT EDIT.

// Package swagger generated by go-bindata.// sources:
// depscloud/api/v1beta/core.swagger.json
// depscloud/api/v1beta/manifest.swagger.json
// depscloud/api/v1beta/rpc.swagger.json
// graphstore/api/v1beta/graphstore.swagger.json
// v1alpha/deps/deps.swagger.json
// v1alpha/extractor/extractor.swagger.json
// v1alpha/schema/schema.swagger.json
// v1alpha/store/store.swagger.json
// v1alpha/tracker/tracker.swagger.json
package swagger

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"net/http"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}


type assetFile struct {
	*bytes.Reader
	name            string
	childInfos      []os.FileInfo
	childInfoOffset int
}

type assetOperator struct{}

// Open implement http.FileSystem interface
func (f *assetOperator) Open(name string) (http.File, error) {
	var err error
	if len(name) > 0 && name[0] == '/' {
		name = name[1:]
	}
	content, err := Asset(name)
	if err == nil {
		return &assetFile{name: name, Reader: bytes.NewReader(content)}, nil
	}
	children, err := AssetDir(name)
	if err == nil {
		childInfos := make([]os.FileInfo, 0, len(children))
		for _, child := range children {
			childPath := filepath.Join(name, child)
			info, errInfo := AssetInfo(filepath.Join(name, child))
			if errInfo == nil {
				childInfos = append(childInfos, info)
			} else {
				childInfos = append(childInfos, newDirFileInfo(childPath))
			}
		}
		return &assetFile{name: name, childInfos: childInfos}, nil
	} else {
		// If the error is not found, return an error that will
		// result in a 404 error. Otherwise the server returns
		// a 500 error for files not found.
		if strings.Contains(err.Error(), "not found") {
			return nil, os.ErrNotExist
		}
		return nil, err
	}
}

// Close no need do anything
func (f *assetFile) Close() error {
	return nil
}

// Readdir read dir's children file info
func (f *assetFile) Readdir(count int) ([]os.FileInfo, error) {
	if len(f.childInfos) == 0 {
		return nil, os.ErrNotExist
	}
	if count <= 0 {
		return f.childInfos, nil
	}
	if f.childInfoOffset+count > len(f.childInfos) {
		count = len(f.childInfos) - f.childInfoOffset
	}
	offset := f.childInfoOffset
	f.childInfoOffset += count
	return f.childInfos[offset : offset+count], nil
}

// Stat read file info from asset item
func (f *assetFile) Stat() (os.FileInfo, error) {
	if len(f.childInfos) != 0 {
		return newDirFileInfo(f.name), nil
	}
	return AssetInfo(f.name)
}

// newDirFileInfo return default dir file info
func newDirFileInfo(name string) os.FileInfo {
	return &bindataFileInfo{
		name:    name,
		size:    0,
		mode:    os.FileMode(2147484068), // equal os.FileMode(0644)|os.ModeDir
		modTime: time.Time{}}
}

// AssetFile return a http.FileSystem instance that data backend by asset
func AssetFile() http.FileSystem {
	return &assetOperator{}
}

var _depscloudApiV1betaCoreSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xc1\x6e\x83\x30\x0c\x86\xef\x3c\x85\x95\xed\x58\x95\xad\xbb\xf5\xb6\xc3\x9e\x62\x9a\xa6\x00\x86\xb9\x82\x38\x72\x4c\x27\x54\xf1\xee\x53\x28\x6a\xd3\xaa\xa8\x95\x76\x02\xf9\xff\x7e\x3b\x3f\x38\x87\x0c\xc0\x84\x5f\xdb\x34\x28\x66\x0b\x66\xb3\x7e\x31\xab\x58\x23\x57\xb3\xd9\x42\xd4\x01\x8c\x92\xb6\x18\xf5\x0a\x7d\x28\x5b\xee\xab\xdc\x7a\xca\xf7\xaf\x05\xaa\xcd\x4b\x16\x5c\x7b\x61\xe5\xc9\x0b\x60\xf6\x28\x81\xd8\x45\xc7\xfc\x0a\x8e\x15\x02\xaa\xc9\x00\xc6\x69\x42\xc9\x2e\xf4\x1d\x06\xb3\x85\xcf\xa3\xcb\x7a\xdf\x52\x69\x95\xd8\xe5\xbb\xc0\x2e\xb2\x5f\x13\xeb\x85\xab\xbe\x7c\x90\xb5\xfa\x13\xc1\xc3\x71\x4c\x85\x35\x39\x8a\x5c\x38\xe7\x99\x0e\x5b\xf4\xf5\xbb\x1b\x4e\xc5\x18\x73\xf0\x53\x4a\x2e\x76\x58\xea\x1c\xe6\x88\x7b\x14\x25\x0c\x09\x3d\xf3\xdf\xbd\xb4\x17\xd5\xa4\x4f\x50\x21\xd7\x98\x93\x34\xae\xce\xde\xbd\x6d\x7b\xbc\x63\x5c\xa5\x5a\xcd\xd2\x59\x8d\x6a\x31\x28\x26\x4d\xb3\xf4\x39\x8f\x30\xd2\x3b\xa5\x0e\x3f\x44\x58\xfe\x13\x11\xaf\x1a\x3c\x9c\xaf\xe4\x6a\x31\x1e\x39\xc5\xb8\x70\x0b\xf9\xc8\xe9\xdb\xe6\x76\xd7\x0e\x43\xb0\xcd\xbd\xef\x76\xd3\x5a\xa1\x5a\x6a\xc3\x92\xd5\x8a\xd8\xe1\xf2\x44\xa4\xd8\x5d\xf3\x00\xe6\x59\xb0\x8e\x8e\xa7\x3c\xd9\xad\x3c\x5d\xa9\x84\x1f\x97\xfe\x53\xbc\x07\xd9\x98\xfd\x05\x00\x00\xff\xff\x99\x98\xd1\x23\x81\x03\x00\x00")

func depscloudApiV1betaCoreSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_depscloudApiV1betaCoreSwaggerJson,
		"depscloud/api/v1beta/core.swagger.json",
	)
}

func depscloudApiV1betaCoreSwaggerJson() (*asset, error) {
	bytes, err := depscloudApiV1betaCoreSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "depscloud/api/v1beta/core.swagger.json", size: 897, mode: os.FileMode(420), modTime: time.Unix(1599106431, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _depscloudApiV1betaManifestSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x4d\x6f\xe3\x36\x13\xbe\xfb\x57\x0c\xf4\xbe\xc7\xc2\xde\xa6\xb7\xdc\x16\xe8\x16\xe8\x61\x81\xa2\xdb\x5b\x11\x24\x34\x39\xb2\xb8\x95\x48\x2d\x67\x98\xac\x51\xe4\xbf\x17\xa4\x68\x9b\x92\x65\x5b\x8e\xbd\xd8\x04\x58\x03\x01\x62\x89\x33\x7c\xe6\xe3\x99\x19\xd2\xff\xce\x00\x0a\x7a\x12\xab\x15\xba\xe2\x16\x8a\x9b\xf9\xbb\xe2\xa7\xf0\x4c\x9b\xd2\x16\xb7\x10\xde\x03\x14\xac\xb9\xc6\xf0\x5e\x61\x4b\xb2\xb6\x5e\x2d\x44\xab\x17\x8f\x3f\x2f\x91\xc5\xa2\x11\x46\x97\x48\x3c\x6f\x9d\x65\x1b\xe5\x01\x8a\x47\x74\xa4\xad\x09\x52\xe9\x5f\x30\x96\x81\x90\x8b\x19\xc0\x73\xdc\x45\x5a\x43\xbe\x41\x2a\x6e\xe1\xef\x4e\x4a\xb4\x6d\xad\xa5\x60\x6d\xcd\xe2\x33\x59\x13\xd6\xde\xc5\xb5\xad\xb3\xca\xcb\x89\x6b\x05\x57\xb4\x83\x3f\x04\xba\x7b\x15\xd6\x5a\xe2\xec\x7b\xf0\x87\x6f\x1a\xe1\xd6\x01\xf9\x27\xb6\x0e\x41\x48\x89\x2d\x13\x04\xa7\xb8\x26\x6e\x08\x62\x69\x3d\x83\xd2\x24\xed\x23\x3a\x54\xb0\x51\x0e\xa5\xae\x91\x40\x18\x05\x6d\xb0\x9b\x98\x80\x2b\x6c\xe6\xc9\x31\x71\x0b\xdb\xa2\x8b\x7a\x7e\x57\x61\x9b\x8f\x49\x36\x6c\x27\x56\xf8\x09\xdd\xa3\x96\x78\x1f\x77\xcf\xc5\x1c\x52\x6b\x0d\x21\xf5\x00\x03\x14\x37\xef\xde\x0d\x1e\x41\x08\x16\x49\xa7\x5b\x4e\x51\x78\x0f\xe4\xa5\x44\xa2\xd2\xd7\xb0\xd1\x94\xa3\xea\x8c\x97\x15\x36\x62\x4f\x19\x40\xf1\x7f\x87\x65\xd0\xf3\xbf\x85\xc2\x52\x1b\x1d\xf4\x52\x72\x6d\x44\xfa\x67\xd2\x59\xf4\x24\x9f\xb3\x6f\xcf\xf9\x66\x85\xc2\x52\xf8\x9a\x4f\x03\x37\xe0\x0d\x7e\x6d\x51\x32\x2a\x40\xe7\xac\xdb\xe2\xbf\x14\xbe\xf3\x86\x75\x83\x1f\x82\xd2\x23\xb8\x67\x23\x16\x14\xad\x70\xa2\x41\x46\xb7\xcb\xc9\xee\x33\x30\xc7\x88\x26\x92\x67\x69\xd5\x7a\x88\x57\x9b\x43\x6f\x1c\x7e\xf1\xda\x61\xc8\x0f\x76\x1e\xaf\x19\xa6\x2f\x1e\x89\xa7\x58\x7b\x97\x59\xcb\x62\x35\xb4\xf3\x40\xde\xee\x34\xdf\xcd\x72\x8d\xc9\x77\xfb\x74\x5c\xe0\x57\x76\x42\xf2\x64\x5a\x7e\xe8\xd6\x43\x2b\x1c\x21\x01\xf9\x50\x09\x50\x65\xd4\x73\xc8\xde\x19\x02\x62\x61\x94\x70\xe1\x41\xeb\x90\xd0\x70\xa4\x1d\x81\x2d\xb7\x8c\xa5\x29\xd4\x4c\x5b\x6a\x6b\x36\xec\x4c\x4f\xde\x04\x3f\x13\xd6\x1f\x0c\x4d\x9f\x57\xcb\xd0\x6d\xa0\xae\xce\xd1\xbd\x04\x3e\x9f\xa6\x8d\x60\x59\x4d\x26\xe9\xc7\xb0\x1a\xa2\x0c\x52\xa2\x26\x57\x82\xe1\x09\x23\x63\xad\x63\x48\xc4\xd7\x66\x05\xd2\x1a\x46\xc3\x50\x3a\x3b\xa9\x57\xee\x13\x32\x6e\xf8\x26\xe8\x18\x91\xfe\x20\x63\xfa\xbc\x5a\x32\xa6\x30\x7d\x47\x2a\x6e\x27\xe5\x0c\xdc\x6e\xae\x8d\xf3\xf6\xd2\x97\xef\xcd\x3a\x67\x25\xaf\xdb\xe8\x40\xbb\xfc\x8c\x59\x7f\x0a\xcb\x5b\x74\xac\x07\x7c\x88\xeb\xef\xbd\xab\x87\x2c\xd9\xe8\x21\x76\xda\xac\x8a\xd1\xa0\x3e\x8a\xda\xe3\x09\xc1\x5e\x16\x77\x13\x74\x8c\xe2\x9a\x33\xc3\x9f\x47\x6b\x50\x2f\xdf\x2e\x30\x11\x07\x0a\x26\xdb\x27\xad\x3a\x68\x9e\x36\x8c\xe1\xdc\x74\xc0\x3e\x6d\xf8\x97\x9b\x71\xad\x0d\x12\x89\xd5\x29\xbf\x8d\x8a\x2a\x64\xa1\xeb\xbd\x8a\xb6\x11\x15\xce\x89\x3e\x37\x0a\xcd\xd8\x0c\xd7\x1f\x4c\xfc\x3c\xa5\xc6\x19\x3d\x1a\xa7\xd1\xe6\x75\x41\xbc\x08\x43\xb5\xe0\x97\xc5\x2c\xb4\x9a\xfb\xd4\x4e\x0e\x3a\x6a\x80\x24\xbe\x13\x4a\x45\x37\x88\xfa\x8f\x71\x5c\x47\x21\x8c\x7a\x69\x6b\xe9\xa0\x48\xf7\x5d\x05\x68\xa4\x68\xc9\xd7\x82\x91\x20\x95\xb2\x26\xc0\x87\xd2\xba\x70\x7c\x84\x87\x24\xf1\x00\xdb\x7e\x38\x2f\x8e\xc5\x20\x15\xfc\x0b\x82\xb0\x69\xfc\xf7\xb1\x77\x7f\xab\x8c\xdb\x94\xda\x6e\xaf\xdf\x74\x8d\x97\xba\xb4\xb3\x7c\xe8\xd3\xf4\x54\x09\x16\x67\x3b\x75\x83\xee\x57\x6c\xd1\x28\x34\xf2\xa2\x7a\x9b\x1a\xdc\xe4\x92\x39\xb0\xf3\xaf\x0a\x21\xa8\x08\x47\x98\x60\x84\xda\x82\x9a\x1f\xa8\xd1\xdd\xf5\x4b\xa0\x04\xb1\x13\xda\x0c\x67\x88\x73\x77\xdf\xdc\xe7\xec\x14\x82\x48\x27\x30\xc1\xc1\xd5\xb6\xf6\x99\x2f\x87\x78\x48\xda\xf6\x1a\xf9\x74\x84\x88\xa7\x2c\xe8\x20\x04\xb4\x4f\x95\x96\x15\x70\xa5\x29\x73\x24\xe8\x2d\x0b\xd5\xfc\x54\x8f\x1a\x49\xe0\x0b\x92\xa3\x16\x66\xe5\x4f\xf7\x86\x53\x06\x6e\xd4\x80\x20\xb2\x52\x8b\x30\x0a\x3e\x69\xae\x62\xc6\xf4\xae\xaa\x0e\x05\x69\x4d\x8c\xcd\x85\x28\x32\x8f\x36\xc2\x88\x55\xac\x69\xd0\xa9\x1e\x41\xa6\xe9\x28\x22\xeb\x9d\x9c\x32\xa8\x9c\x42\xa5\x15\x1a\xd6\x65\x48\xd7\x4e\x27\x78\x57\xc7\x73\xc7\x64\xef\x5c\x99\xc2\x8d\x55\xbe\x1e\x8b\x95\xa6\x49\x70\x76\x77\xad\xd7\xa0\x75\x1f\xd4\xf6\xe2\x04\x15\x2c\xd7\xd3\x31\x6d\x63\xbf\xdf\x44\xbf\x51\xef\xc8\xaa\xf3\x39\xb5\x20\xf3\x7a\x8e\x39\x35\x89\x63\xd6\x9e\xea\x48\x79\x4d\xd8\xf9\x91\x40\x44\x4d\xf0\x54\xd9\x5d\x2e\x52\x6f\xf3\x03\x5d\x28\x3b\x8e\x7c\xaf\xe1\xaa\x7f\xb5\xfe\xe2\x78\x5e\x65\x88\xca\x1d\x32\x65\x84\x8a\xeb\x4f\xf7\xfa\xfc\x6c\x7e\xd1\xf8\xc4\xb2\x42\x75\xff\x0a\x3d\x76\xc6\x84\x34\xc9\x67\xbd\x7b\xe5\x0b\x5c\xf6\xc2\x43\x68\x57\x1b\xce\x16\xfb\x47\x1b\xf5\x12\xb9\x37\x36\x17\xe7\xc1\x01\x0a\x5f\xc6\x7e\xc9\xea\xff\x7c\x75\x2c\xca\xd3\x99\x31\x0e\x64\x2c\xf9\x84\x59\x0f\x13\x70\xd3\x8e\x1f\xa2\xd8\x48\x06\xce\xc2\xdf\xf3\xec\xbf\x00\x00\x00\xff\xff\xf2\xfe\xb1\xf7\xc3\x1c\x00\x00")

func depscloudApiV1betaManifestSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_depscloudApiV1betaManifestSwaggerJson,
		"depscloud/api/v1beta/manifest.swagger.json",
	)
}

func depscloudApiV1betaManifestSwaggerJson() (*asset, error) {
	bytes, err := depscloudApiV1betaManifestSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "depscloud/api/v1beta/manifest.swagger.json", size: 7363, mode: os.FileMode(420), modTime: time.Unix(1599106431, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _depscloudApiV1betaRpcSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x4d\x6f\xdb\x38\x13\xbe\xe7\x57\x0c\xf4\xbe\xc7\xc0\xee\x76\x6f\xbd\x65\xb1\x8b\xee\x02\x59\xa0\x48\xda\xd3\xa6\x30\x46\xd4\x48\x66\x23\x91\x2a\x39\x4a\xea\x0d\xfc\xdf\x17\xa4\x64\x5b\x92\x25\x7f\xc9\x49\x63\xc4\x3e\xd9\x26\x39\x9a\x19\x3e\xf3\x70\x66\xa8\xa7\x0b\x80\xc0\x3e\x62\x92\x90\x09\x3e\x40\xf0\x7e\xf4\x2e\xb8\x74\xff\x49\x15\xeb\xe0\x03\xb8\x71\x80\x80\x25\xa7\xe4\xc6\x23\xca\xad\x48\x75\x11\x8d\x31\x97\xe3\x87\x5f\x42\x62\x1c\x9b\x5c\x8c\x72\xa3\x59\xfb\xa5\x00\xc1\x03\x19\x2b\xb5\x72\x0b\xaa\xaf\xa0\x34\x83\x25\x0e\x2e\x00\xe6\xfe\x01\x42\x2b\x5b\x64\x64\x83\x0f\xf0\x4f\xb9\x0a\xf3\x3c\x95\x02\x59\x6a\x35\xfe\x66\xb5\x72\x73\xbf\xfa\xb9\xb9\xd1\x51\x21\x76\x9c\x8b\x3c\xb5\x2b\xcd\x17\x3a\x66\x3a\x2a\x52\x5a\x0d\x00\x04\x09\x71\xed\x27\x40\xa0\x73\x32\x5e\xe4\x5f\x91\x53\xfd\x6f\xbf\xe4\x96\xcc\x83\x14\x34\xb9\x96\x96\x2b\xfb\xfc\x64\x43\x36\xd7\xca\x36\x44\xfa\x81\xf7\xef\xde\xb5\xfe\x02\xe7\x37\x2b\x8c\xcc\xb9\xf2\xca\x15\xd8\x42\x08\xb2\x36\x2e\x52\x58\x48\x1a\xd5\xc4\xfb\x45\x56\x4c\x29\xc3\x35\x61\x00\xc1\xff\x0d\xc5\x4e\xce\xff\xc6\x11\xc5\x52\x49\x27\xd7\x56\xa6\x3a\x45\x4b\xd5\xed\x4d\x25\x39\x68\xac\x9f\xd7\x7e\xcd\xeb\x8f\x0c\x22\x8a\xb1\x48\x79\xbb\xfa\x0a\x0a\x45\x3f\x72\x12\x4c\x11\x90\x31\xda\x2c\xad\x18\x6a\x84\x29\x14\xcb\x8c\xfe\x70\x42\x37\xe8\x7d\xd1\x61\x41\x90\xa3\xc1\x8c\x98\xcc\x0a\x29\xe5\xa7\x65\x8e\xc2\xcc\xa3\x39\x47\x43\x8a\xdb\x1a\x4b\x6f\xe3\xf7\x82\xcc\xac\x3d\x64\xe8\x7b\x21\x0d\x39\x78\xc4\x98\x5a\x6a\x0d\xf3\x2c\xf7\x72\x2d\x1b\xa9\x92\xa0\xcf\xcf\xbd\xda\x24\x34\xb1\xf2\xdf\x35\x17\x0e\x57\x48\x2a\x26\x17\xe1\xad\xe1\x58\x9b\x0c\xb9\x9a\xf0\xeb\xfb\x83\x14\x66\x7d\x4f\xea\x45\x5c\xb8\xfc\xfe\xb5\xb6\xe5\x8c\x49\x7b\xb3\x9b\x81\xbb\x12\xf1\xf5\xa2\x2e\xa8\x32\xb0\x4d\x10\xe3\xa7\xf2\xcb\x28\x45\x95\x14\x98\xd0\x7c\xf9\x8f\x33\x7b\x3e\x8e\x28\x27\x15\x91\x12\x72\x3f\x36\xf9\x6c\xd0\x71\x21\xa6\x0b\x42\xf9\x48\xfc\x7b\x5d\xd6\x29\x70\x4b\x5d\xe1\x33\xb9\x54\x9f\x9e\xe8\x68\xe1\xa8\xad\x7a\xcb\xea\xcf\x53\x82\xc5\x54\x40\x6b\xb5\x90\xe8\xec\x7f\x94\x3c\x05\x9e\x12\x54\xe2\xba\x23\xcd\x1d\x7a\x1b\x02\x8d\x4d\x71\x5c\xaa\xaa\x45\xc4\x0e\x76\xb9\x69\xa0\x63\x6f\x46\xed\xe0\x06\x6d\x20\x95\xa1\x41\x33\x7b\x09\xb3\x76\xa6\x8f\x76\xa4\x3e\x17\x83\xf0\xd1\xf8\x83\x4f\x8b\x3d\xf8\xcc\x1d\x8b\xcf\x99\x3b\xb6\xd8\x75\xe6\x8e\x06\x77\x58\x5d\x18\x31\xb4\x8c\xb9\xad\x84\x9c\x02\x67\xf8\x6a\x06\x15\x26\x14\x55\x6a\x9f\xb9\xa3\xfa\x9c\xb9\x63\x8b\x5d\x27\xc6\x1d\x07\x95\x2d\x07\x10\x42\x19\x47\x27\xd9\xd7\x38\x53\xc0\xb9\xaf\xf1\x76\xfb\x1a\x8d\xc0\xdd\x93\x20\xc6\x4f\xe5\x97\x51\x61\xd2\xf9\x21\xdd\xd0\x75\xd6\xa8\x9a\x8c\x27\x43\x1e\x55\x1a\x71\xee\x8d\xee\xc4\x21\x2b\xb8\x6c\x39\x69\xaf\xa0\xc4\x34\x94\x51\xe7\xac\xfe\x64\xf4\x83\x8c\xc8\x7c\xb9\xb9\x7e\x1d\x79\x43\x65\xcc\xbd\x54\xd1\x0e\x79\x83\x9b\xe6\xf2\x86\x72\xd5\x25\xf0\x2c\x97\x02\xd3\x74\x06\x86\x72\x6d\x25\x6b\x33\x73\x49\x04\x1a\x96\x31\x0a\xf7\x73\x04\x9f\xa7\xd2\xc2\x23\x5a\xb8\xa7\x9c\xef\x94\x25\xe7\x70\x26\x88\x8d\xce\x7c\x06\xf2\xe5\xe6\x1a\xd0\x82\x9d\x59\xa6\xcc\x42\x2a\xef\x09\x3e\x4a\xfe\xb3\x08\x01\x55\xe4\xbe\x5e\x63\x08\x3a\x8e\xc9\x80\xd5\x19\xdd\xa9\x85\x7c\xb0\x45\x9e\x6b\xc3\x3d\xd9\xca\xeb\xa6\xa3\xe5\x85\x4f\x0d\xc8\xab\xeb\x19\x7f\x6d\x14\x16\xf1\x95\x9a\xd5\xc9\x68\xa1\x9e\x0e\xbf\x91\x58\x1d\x64\x6e\x7a\x4e\x86\x65\x8b\x60\xfc\xfc\x89\x83\x6a\x8b\x76\xfa\xcc\xac\x07\xc6\x03\xa6\x05\x6d\x59\xd8\x60\x82\xd5\xe9\x12\xce\xb8\x66\xf8\xbc\x93\x87\x1b\x31\x3b\xc0\x44\x6a\x09\xd8\xd9\x3e\xa1\xa3\x5e\xf3\xba\xce\xcf\xfe\xd3\xb3\x2e\x35\x23\x6b\x5d\x75\x71\x80\x42\x11\x31\xca\x74\xed\x88\x58\x2c\x45\x63\xb0\x09\xe7\x40\xba\x88\x59\x67\xde\x6e\x92\xac\x43\xaa\x9b\x15\x37\xed\xd3\x2d\x1b\xc2\x6c\xf0\x6e\x25\x26\x17\x93\xe7\xf1\xfc\x94\x39\x7f\x26\xd1\x03\x36\xd5\x6b\x65\x19\xb9\xe8\xdd\xd8\xd3\xc3\xc4\x86\x4b\x8f\x01\xd8\xe8\xb9\x41\x3a\xaa\xc1\x2d\xcd\x87\x58\x3d\x88\x98\xcb\x44\xb3\x6d\xe5\x26\x9d\xcb\xf4\xac\x1b\x25\x14\x25\x34\x89\x90\xdb\x29\xd3\x91\xdd\x56\xaa\x70\x0c\xe7\xf1\x51\x01\xc3\xaf\x18\x2e\x1b\x12\xec\xc1\xf0\x79\x66\xb3\x1b\x6a\x0f\xb2\xbc\xdd\x9e\x18\x60\xf9\x7a\x5f\xe7\xf9\x2c\x2f\xd5\x3e\xd0\xf2\xe3\x6d\xb6\xa2\x1f\x3c\xa9\xd5\xde\x07\x1c\x23\x2f\x83\x97\x01\x40\x39\x22\x42\x8e\xe0\xae\x17\x01\xd9\xa1\xe8\x6a\x86\xe5\x5b\x3b\x83\x4a\xaf\x1d\x0a\xb5\x66\x60\x0f\xa6\xa1\x7d\x7c\xd7\xde\xee\xd3\xf3\xdd\x60\xc0\x2d\xaf\x5e\xf6\x28\x2a\x0f\xbd\x96\xe9\xf4\x73\xd5\xf6\x18\xf2\xf0\x5d\xee\x4e\x3a\x9f\x9d\x62\x48\xfd\x89\x7c\xcb\x85\x7e\x0c\xa3\xc8\x6f\x1f\xa6\x9f\xba\x1d\xda\xa5\x7f\x7d\x5b\x1b\xd2\x96\xaf\xaa\x5e\x7b\x45\x40\x68\xc5\x28\x15\xac\x9e\x02\x19\x31\x3a\x14\x02\x86\xba\x60\x6f\x22\x29\x96\x3c\xeb\xa8\xe5\x97\x9b\xbd\xd6\xf5\x2a\x77\x00\xa4\x82\xe5\x4b\xb1\x20\x2d\x20\x24\xa4\xc8\x48\x01\x86\x72\x43\x96\x14\x57\x9e\x8b\x01\xd5\x66\x5f\x76\x01\xf1\x38\x79\xf8\xea\x8d\xdc\x21\xa0\x58\xbc\xcc\xbb\x37\x20\xab\x85\x13\xa1\x95\x65\x83\x52\xb5\xfb\xa8\x87\x6a\xb2\x12\x08\x9e\x07\x28\x82\x70\xe6\xf5\xc9\x8d\x76\xae\xe9\x51\xc8\x0a\x9d\x1f\xe3\xe0\xdb\x15\x95\x1d\x26\x94\x2a\x00\x32\x3c\x4e\xa5\x28\x9d\x68\xe8\x7b\x41\xd6\xf9\x75\x81\x2e\x0b\x8a\x28\xa2\xe8\x6d\x47\x5b\x3b\x14\xa0\x1c\x0f\xc9\x56\x6e\x4b\x7d\x44\xd9\xa9\xcc\x21\x24\x7e\x24\x52\xc0\x8f\xba\xf2\xa2\x1d\xc1\x6f\x24\xb0\xb0\x74\xa7\x3c\xa5\x49\x0b\x42\x1a\x51\xa4\x68\x1a\x6b\x2f\x81\x0d\x2e\x15\x77\x4a\x87\x68\x3d\xb4\x29\x95\x2a\x71\xbb\x11\xc9\x38\x96\xa2\x48\xb9\x33\x64\x6f\x09\x8d\x98\xde\x94\xbb\x38\x24\x5e\x05\x2a\x41\xbd\xed\xcc\x50\xeb\x94\x50\xf5\xb6\x25\xab\xe1\x4d\x29\xf2\x24\x5e\xef\x26\x1e\x50\x2a\x34\x7b\x38\xab\xbe\xc6\xbe\xe2\xbb\x4a\xcf\x2e\xd9\x6c\x27\x3a\x3e\xa6\xe0\x2a\x05\xde\x53\x6a\x4f\xc9\xb8\x29\xad\x58\x40\x63\x78\xe2\x6f\xd6\xe0\xb5\x55\xdf\x26\x2e\x7f\x62\xe9\xb4\x43\xa9\xdd\x83\xa8\x9f\xdc\xfa\xe8\xc4\xe2\xeb\xd1\xe9\x14\xda\x05\xc3\xab\x11\x7f\x7f\x37\x2c\x71\x78\xbd\x77\x7b\x9d\xfb\xba\xfd\x4e\xab\xfb\x38\xde\x72\x29\xfb\x96\x73\x89\xab\x6a\xef\x9b\x99\xfb\x32\x59\xb7\x2e\x4b\xd7\x46\x26\x52\x39\xe7\x81\x54\xa5\x0b\xa5\x56\x15\x10\xa4\x12\x69\x11\x91\xbd\xbc\x53\x61\xc1\x3e\x45\xd3\x0c\xa9\xcc\xa4\x73\x33\xeb\xcb\x15\x94\xa4\x4b\xf0\x54\x54\x43\x93\x24\xdb\x9d\x39\xd4\x6b\xd6\x57\x5e\x7b\x32\x9a\x84\x78\x73\xc6\x5f\x86\xc2\x40\x2d\x4a\x21\x50\x58\xef\x57\xc8\x3c\xff\x40\xfd\x54\xf0\x5b\xb4\xab\x4e\xc7\x2d\x82\xaa\xe2\x78\x97\x07\x9f\x66\x64\x2d\xb6\x5e\x6a\xb5\x47\x78\xd5\x81\xbc\x4b\x9a\x8e\x8b\x4a\xad\x0c\x94\xa6\x23\xfd\xdb\x03\x17\xf3\x8b\xff\x02\x00\x00\xff\xff\x42\x0b\xe7\x0d\xa7\x3a\x00\x00")

func depscloudApiV1betaRpcSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_depscloudApiV1betaRpcSwaggerJson,
		"depscloud/api/v1beta/rpc.swagger.json",
	)
}

func depscloudApiV1betaRpcSwaggerJson() (*asset, error) {
	bytes, err := depscloudApiV1betaRpcSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "depscloud/api/v1beta/rpc.swagger.json", size: 15015, mode: os.FileMode(420), modTime: time.Unix(1599106432, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _graphstoreApiV1betaGraphstoreSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x6d\x6f\xdb\x38\x12\xfe\x9e\x5f\x31\xa7\x3b\xa0\xc9\xad\x4f\x6e\xd3\xc3\x7d\xc8\x22\xc0\x15\xbb\xed\x6e\x17\xdd\x6e\xd0\xa6\x9f\xaa\xa2\xa1\xa4\x91\xcd\xad\x44\xaa\x24\xe5\x54\x5b\xe4\xbf\x1f\x86\xa4\x2c\x59\xb1\xf3\x52\x27\x6d\x72\x65\x80\xa2\xb6\x45\x0d\x1f\xce\xdb\x33\x7c\x91\xfd\x79\x07\x20\xd2\xa7\x6c\x36\x43\x15\x1d\x40\xb4\x1f\x3f\x8c\x26\xf4\x19\x17\x85\x8c\x0e\x80\xae\x03\x44\x86\x9b\x12\xe9\xfa\x4c\xb1\x7a\xae\x8d\x54\x38\x65\x35\x9f\x2e\x1e\xa5\x68\xd8\xb4\xff\x34\xae\x95\x34\xd2\x8a\x00\x88\x16\xa8\x34\x97\x82\x6e\xf4\x2f\x41\x48\x03\x1a\x4d\xb4\x03\x70\x66\x3b\xca\xa4\xd0\x4d\x85\x3a\x3a\x80\xb7\xee\x2e\x56\xd7\x25\xcf\x98\xe1\x52\x4c\xff\xd4\x52\x50\xdb\x77\xb6\x6d\xad\x64\xde\x64\x57\x6c\xcb\xcc\x5c\xf7\x23\x58\x81\xba\xfc\x18\x20\x9a\xa1\x19\xbc\x25\x6d\x34\x55\xc5\x54\x4b\xa0\xdf\x68\xcc\xc1\x48\x28\xb9\x36\x90\x33\xc3\xe0\x94\x9b\x39\x17\x60\xe6\x08\x6e\xbc\x7e\xa8\xf6\x4e\x59\xa3\xb2\x50\x9e\xe7\x74\xf7\x2f\xd4\xd5\x6b\x6a\xf5\xfe\x05\xd7\x66\xd8\x52\xa1\xae\xa5\xd0\xa8\x57\xba\x06\x88\xf6\x1f\x3e\x1c\x7d\x04\x10\xe5\xa8\x33\xc5\x6b\xe3\x55\xf9\x04\x74\x93\x65\xa8\x75\xd1\x94\xd0\x49\x1a\x02\x71\xc3\xc8\xe6\x58\xb1\x73\xc2\x00\xa2\x7f\x28\x2c\x48\xce\xdf\xa7\x39\x16\x5c\x70\x92\xab\xbd\x7e\x08\xe8\x2b\x2f\x32\x5a\xb9\xf1\x6c\xf0\xee\x6c\xd8\x57\x94\x63\xc1\x9a\xd2\x5c\x8e\x5b\x40\x23\xf0\x53\x8d\x99\xc1\x1c\x50\x29\xa9\x96\xf0\xb7\x45\xaf\x1a\x61\x78\x85\x4f\x49\xe8\x05\xb8\x77\xd6\x8c\x20\xaa\x99\x62\x15\x1a\x54\xbd\x5f\xb9\xbf\xd1\x70\x04\xab\x6c\x0c\xd4\x4c\xa1\x30\x63\xc4\xdc\x8e\xf1\x63\x83\xaa\x1d\x5f\x52\xf8\xb1\xe1\x0a\xc9\x29\x0a\x56\x6a\x1c\x5d\x36\x6d\x6d\xe5\x6a\xa3\xb8\x98\x45\x9b\xf4\xbc\x11\xcd\x0c\xdf\x6b\xfe\xd7\x39\x15\x6e\x0f\x88\x0b\x83\x94\x17\x46\x97\x0b\xa9\x2a\x66\x7c\x83\xc7\xfb\x5f\x04\xd8\xc8\x0f\x28\xee\x8a\x0a\x3f\x70\x91\x7f\x15\x2c\xcb\xd7\xef\x06\xee\x67\xd8\x6c\xec\x78\x83\xd4\xd1\xdf\xff\x6e\x67\x34\xa2\x28\xc7\x12\x0d\x5e\x9a\xbd\x5c\x33\x97\xbf\x0a\x25\xab\x6b\x67\xaf\x9f\x5d\x3f\xf7\x21\x7f\x39\xa8\x21\x83\xf9\xbf\x0d\x0e\x9f\xca\xfc\x9c\x57\x3b\x87\x5f\x77\x65\xe0\xef\x46\x35\x63\x77\xdf\xce\x4e\x1f\x1b\xd4\xe6\x2a\xc3\xbd\x99\x88\xa9\x9b\xcb\xc9\x9e\x0b\x8d\xca\xd3\x3d\x17\x46\x5e\x3b\x5c\x8e\x9a\xfb\xc1\xf5\x47\x4d\xa0\xfa\xee\xef\xce\x06\x8a\x35\xd2\xd7\x89\x92\x9d\x81\xb6\x56\xeb\xe5\xe9\x67\xe2\x8d\x98\x78\xf2\xac\x7b\x8d\xed\xd9\x54\x20\x9f\xcd\x53\xa9\xf4\x94\x3e\xbb\x6e\x55\x6d\xc9\x75\xab\xb2\xfa\x65\xd7\xff\xfe\xbd\x08\xb8\x25\xdc\x10\x76\xfe\x6f\x43\xd8\x2d\xbd\x6d\x7d\xec\xd1\xd4\xee\x7a\xb1\xb7\x5d\x7d\xd8\x39\xfc\x2d\xa1\xd9\x58\x5e\xa7\xad\xc1\xeb\x62\x15\x32\xc7\x98\x92\x53\x4c\xbd\xbc\x6f\x54\x39\x96\x7f\xce\xe1\xdf\xbc\x7a\x31\x55\xa8\x65\xa3\x32\x04\x92\x03\x66\xce\x0c\x34\x82\x7f\x6c\xb0\x6c\x81\xe7\x28\x0c\x2f\x38\x6a\x1b\xa0\x24\x17\x64\xe1\x82\x15\x15\x67\x25\xff\x0b\xf3\x44\xd8\x99\x7f\x26\x4b\x48\x9b\xa2\x40\x05\x15\x6a\xcd\x66\x18\xc3\xf1\x9c\x6b\x70\x63\x85\xaa\xd1\x06\x32\x29\x0c\xe3\x02\x98\x81\x12\x99\x36\x89\x90\x02\x21\x89\xa6\x49\x04\xd9\x9c\x29\x96\x19\x54\x74\x1f\x42\xc9\xb4\x01\x8d\xb3\x0a\x85\xe9\x3a\x7d\xf3\xea\xc5\x03\x0d\xa4\x76\x27\x4e\x61\xad\x50\xa3\x30\x89\xa0\xcb\x45\x53\x96\x2d\x7c\x6c\x58\x49\x98\x73\x37\x22\x7f\xab\xc5\xbe\xcb\x34\x70\x91\x88\x13\x12\x31\x9d\x49\x39\x2b\xfd\xba\x45\xda\x14\xf1\xcf\x8d\x4b\x36\x27\x7b\x0e\x81\xbd\x5d\xcf\x65\x53\xe6\x90\x22\x10\x6c\xc8\x98\x90\x82\x67\xac\x04\x32\x56\x22\x76\x31\x9e\xc5\x13\x1a\x4c\x4e\x83\x4c\xa2\x38\x89\x80\x6b\xbb\xd8\xc1\xb2\x0c\x6b\x83\xf9\x5e\x9c\x88\x44\x3c\x17\x50\xd3\xf8\x78\x86\x13\x30\xc8\x2a\x0d\x8d\x6e\x18\x21\xae\x15\x66\xb2\xaa\x79\x89\x7d\xd9\x91\x72\xc1\x54\x0b\xac\x2c\x2d\x74\xed\x2c\x63\xe6\xd8\x26\x3e\xce\x81\x1b\xca\xa5\x8d\xb6\xd0\xe8\x1e\xd2\x2e\x7e\xb2\xda\x7a\x22\xda\x18\x7e\x95\xa7\xb8\x40\x35\x21\xac\xa4\x3b\x0d\xa7\x73\x9e\xcd\xed\x2d\x66\x8e\x89\xb0\x99\x00\xe1\x64\x6e\x4c\x7d\x32\x71\xff\xeb\x93\x09\x48\x05\x42\x82\xbb\x3a\x01\x32\x51\xc6\x04\x48\xeb\x39\x16\xb1\x46\x03\x4d\x0d\xcc\x62\x4b\xa8\x6c\x5a\xa0\x72\x10\x2b\x56\x6b\xa7\x6d\xdb\xa3\x91\x9d\x3b\xc0\x20\xa7\x00\xd3\x50\xc8\xb2\x94\xa7\xfa\x80\x94\xf3\x4f\x78\x5e\xf4\x5d\x92\x02\x6b\x25\x17\x3c\xc7\x7c\x89\x8a\x3e\x64\x5a\x37\x15\xe6\x31\xdd\xf0\x44\xc0\xaf\xc7\xc7\x47\xf0\xcb\xd3\x63\x90\xa2\x73\x0f\xe7\x17\x2d\xc7\x32\x07\x06\x6f\xc7\x26\x3e\x6e\x6b\x7c\xf7\xf6\x5d\x22\x00\x16\xac\x6c\xac\xe6\xbc\xa6\x5d\xf0\xd9\xb1\xfb\xc5\x26\x60\xc2\x65\x52\xd7\x5f\xbf\xde\xa4\x81\x29\x24\xd3\xc8\x53\xc7\x67\x19\xcb\xc8\x63\xa5\xfc\xd0\xd4\x94\x76\x9b\xd2\x68\x48\x19\xb1\x9d\x83\x46\x1d\xbe\x79\xf5\xc2\x4a\x9f\xb3\x85\x55\x7f\x35\xb0\x7b\xee\x0c\xcf\x3a\x30\xf4\x7a\x21\x79\x0e\x4c\xb4\x74\xaf\x13\x6d\xdd\x52\x61\x21\x15\x4e\xba\x96\x24\x80\x19\x9e\xf2\x92\x9b\x16\x04\x62\x6e\x75\x9e\x22\xd8\xd0\x50\x0b\x0a\x50\x20\x18\xd9\x9c\x89\x19\xda\xab\xd6\xa3\x62\xd8\x7d\xa3\x11\xfc\xf2\x1c\x0d\x84\x8c\x46\x4e\xef\xac\xc6\x04\x9b\x59\xe0\xa9\x42\xf6\x81\xbc\xdb\x4b\x88\xf7\xc8\x64\x2f\xa5\xc1\x03\x30\x14\xe1\x45\x23\x32\xe7\x1a\x84\xc1\x7b\x7f\xd6\x28\x85\xc2\x94\x2d\xb0\x05\xe3\x25\x4b\xcb\xa5\x9f\xca\xa2\xe0\x19\x67\xa5\xcf\x1c\x69\x53\x80\x42\xca\x07\x38\x01\x26\x72\x72\x6c\x2f\xa4\x21\x15\x92\xf7\xf6\x0e\x95\xe2\x8c\x0b\x41\x70\xa8\x74\x48\x04\x5d\x89\x9d\x9d\x59\xcd\x75\x9c\xc9\xca\xc6\xdb\x6b\xeb\x4a\x1a\xa4\x99\x3b\xd7\x14\x63\x3f\x87\x5d\x12\x3c\x47\xc0\xaa\x36\xad\xf7\xbd\x3d\xa8\xf8\x6c\x6e\x20\xc5\x44\xd8\xde\xa9\x17\xe0\x55\x5d\x22\x65\x22\x6b\x7f\xd0\x35\x66\xbc\xe0\x19\x68\xac\x98\x30\x3c\xd3\xe7\xea\x84\x6f\xb5\xa2\xd1\xb3\x80\x75\xf0\x4b\x28\xe0\x77\x8a\x96\x14\x81\x51\x38\xf0\x7c\x90\xd5\x61\x9c\xd4\x7d\x1e\x65\xa9\x5c\x60\xa7\x00\xef\x34\xb7\x37\xf8\x1b\x25\x48\x4b\xe6\x81\x20\x03\x41\x06\x82\x0c\x04\x19\x08\xf2\x3b\x25\xc8\x9e\x05\x02\x41\x8e\x54\x63\x64\xa0\xc7\x40\x8f\x81\x1e\x03\x3d\x06\x7a\xfc\x5e\xe9\xb1\xe3\x80\xef\x8b\x1c\x6f\x7f\x1b\xc5\xee\xa0\x7c\x93\xd3\x47\xf7\x63\x87\x24\x1c\x3f\xba\x3c\x36\xef\xce\xbe\x48\x38\x08\x75\x9f\x0e\x42\xdd\x7e\x76\xb3\xab\x8e\x7e\x93\xd8\xbd\x5e\xd9\x24\xfe\x86\xfb\xc3\xf7\x22\xf9\x85\xed\xe1\x2b\x66\xc0\xa5\x9f\xdd\x8d\x34\xd8\xb9\x7a\xd8\x1e\x0e\xd3\xfb\x30\xbd\x0f\xd3\xfb\x30\xbd\x0f\xd3\xfb\xbb\x3d\xbd\x0f\xdb\xc3\x61\x7b\x38\x10\x64\x20\xc8\x40\x90\x81\x20\x03\x41\x5e\xc8\x02\x81\x20\x47\xaa\x09\xdb\xc3\x81\x1e\x03\x3d\x06\x7a\x0c\xf4\xf8\xfd\xd2\x63\xd8\x1e\xee\xa5\xdd\xe4\x06\x8a\x91\xdd\xf6\x09\xbd\x5a\x7d\xc2\xce\xc8\x6f\xb8\x7f\xf2\x38\x6c\xa0\xfc\x3f\x6d\xa0\x78\x3f\xbb\x1b\xdb\x27\xce\xd5\xc3\xe6\x49\x28\x7e\x43\xf1\x1b\x8a\xdf\x50\xfc\x86\xe2\xf7\x6e\x17\xbf\x61\xf3\x24\x6c\x9e\x04\x82\x0c\x04\x19\x08\x32\x10\x64\x20\xc8\x0b\x59\x20\x10\xe4\x48\x35\x61\xf3\x24\xd0\x63\xa0\xc7\x40\x8f\x81\x1e\xbf\x5f\x7a\x0c\x9b\x27\xbd\xb4\x2f\xdb\x3c\x59\x7e\x77\xf8\x20\x5f\xf5\xdf\xf4\xdd\x79\xec\x13\xd1\x0e\x77\x4c\x3a\xe4\x32\xfd\x13\xb3\xfe\xa1\x25\x6a\x5e\xa3\x32\x7c\xb4\x9d\x11\x2d\x29\x7a\xb4\xc9\x71\x81\x06\x02\x7d\x07\xfa\x0e\xf4\x1d\xe8\x3b\xd0\xf7\x6d\xd0\xf7\xda\x9d\x4f\x47\xa2\xd7\x48\xd1\x23\x8a\xba\x28\x7d\xdf\x14\xf9\xee\x8c\x49\x70\xf8\x0d\xee\x2b\x3d\x9e\x3c\x11\xed\x49\x97\xc3\x35\x85\x07\x53\x29\x37\x8a\xfc\xf0\x82\xde\xbb\xf8\x67\xa5\xf4\x56\x03\x96\x08\x0a\x56\x9b\x30\x5c\x27\xe9\x85\x1c\xb3\xa4\x14\xb2\xec\x51\xe7\x34\x25\x4f\x6d\xdf\x3e\x57\x68\xd0\x4d\x5d\x4b\x65\xd3\x62\xcd\xb2\x0f\xd3\x46\xd0\x7f\x94\x0c\x5d\xb8\xeb\xce\x03\x5d\xf2\x96\x05\x34\xc6\x05\x4e\xe7\xc2\x9a\x22\x94\xe5\x39\x77\xfe\x0c\x33\x14\xa8\x98\xb1\x08\xcc\x5c\xe6\xba\xc3\x46\x32\xad\xfe\x08\xd1\xd3\x4f\x8c\x1c\x04\x1e\x1d\xc0\x11\x75\x48\x4e\xec\xfb\x66\xcb\xe1\x73\x01\x3f\xfd\xf0\x83\x6d\x4f\xca\x7d\x26\x25\x14\x52\xc2\x21\xc4\x71\xfc\xa3\xfb\x8c\x84\x32\xd1\xfa\x77\x4c\xb4\x31\x89\x7b\xa6\x64\xb5\x5b\x48\xb9\xe7\x3f\x8f\xe3\xd8\xbd\xe0\x05\xec\x52\xa3\x37\xb6\xab\x63\xb9\x9b\x34\x0f\x1f\xee\xff\x87\x9a\xee\xc1\x67\xd7\x66\xd0\xfc\x6c\x08\x75\xff\x12\xa8\xbf\xb1\x05\xbb\x0a\x56\x38\xb4\x5c\x43\x02\x2e\xc4\xc8\xf5\xee\x33\x29\xe3\xac\x64\x5a\x0f\xd1\x39\xb1\xd4\xc2\xa1\x18\xb4\xfa\x71\x00\x1b\x3a\xdc\x8f\x2f\xc1\x7d\xd4\x9a\xb9\x14\x4b\xe4\x4e\xfc\x33\x29\x77\xe3\x98\xf2\x96\xd7\xab\x43\xbd\xbb\xb7\xaa\x68\x3b\x80\xf3\xf8\xe9\xf2\x73\x07\xff\xe7\xa7\xaf\x7f\x7a\xf5\xfc\xe8\xf8\x8f\x57\x7b\x07\xdd\x08\x7a\x0b\x0c\xee\xf7\x12\x06\xc0\xff\x7d\x09\xf0\x5f\x64\x87\xd9\x82\x3e\x38\x04\x67\xcd\x3a\x8d\x9f\x49\xf9\x39\x8e\xe3\x33\x7f\x99\x89\x76\x42\xc4\x44\x6d\x6a\x97\xca\x7f\x67\x4a\xcf\x59\x49\x63\x1a\x60\x58\x0e\x62\xad\xc4\x4e\x1c\x2f\x46\xc2\xde\x88\xaa\x17\x67\x3b\xb3\x86\xb5\xad\xfe\x76\x08\x82\x97\xbd\xf9\x06\x7d\x58\x3b\x51\xdd\x64\xc7\xd6\x85\x4b\xc7\xe3\x90\xb6\x50\x8f\x03\xf7\x94\x97\x25\x5d\xf0\x07\x5c\x28\xdd\x27\xe2\xc1\x9a\x8c\x3e\xa5\xd2\xce\x2e\x4b\xc5\x44\x50\x0f\xa8\x7e\x58\x66\x0b\xca\x24\xa4\x55\xfa\xc0\x69\x36\x11\xcb\x68\x15\x65\xdb\xd5\x3b\xe7\xea\xc3\x25\xe1\x01\x2b\x0c\x3a\x2e\xb0\x65\xe7\x83\xe9\x83\x44\xf8\x54\xd1\x75\xe1\xaa\x28\xf4\xd6\x4c\xa2\x42\xca\x38\x65\xca\xa2\xfb\x34\x6d\xe3\xbf\x92\xc8\x8d\xc7\x15\x1f\xae\x30\xb2\xc2\x93\xc8\x5e\xb5\xee\x90\x88\xdf\x5e\xff\xf1\x32\x11\x87\x87\x87\x87\x4e\x5b\xf4\xbe\x2f\x64\x1d\xbf\x48\x72\x3a\x70\xe9\xd6\xd5\x29\x8d\xf6\xf9\x51\xe1\xac\x29\x99\x4a\xc4\xf9\x5b\xe8\x72\x8e\x7d\xd2\x9c\x00\x56\x29\xe6\x79\x9f\x3e\x27\x3e\xfb\x8a\x44\x0c\x72\x5c\x61\x01\x9f\xfc\x97\x20\x9f\xf8\x12\x71\x99\xe4\x87\x2a\x88\x3b\x67\x3e\xe8\x5c\x95\x94\x4d\xfe\xdb\xd7\x59\x05\x2f\xd1\x07\x6e\xe7\xdc\x47\xa8\xb4\x14\xbd\xcf\xf8\x09\x41\xc1\x95\x36\xef\xad\x86\x0e\xe1\xd1\x8f\xa3\xab\x64\x87\xee\xe2\xfe\x4a\x26\xa0\xa9\x6b\xd7\x38\x89\x2c\xea\x24\x3a\x80\x24\x5a\xe7\x37\xab\xc0\x62\x07\x25\x89\x26\xbd\x00\x0b\xe3\x25\xab\x9c\x90\xe6\xe1\xc3\xc7\x99\x83\x60\x5f\xe3\xa0\x25\x41\xda\xdc\x70\x00\xf1\x79\xe1\xcb\x8a\x55\xed\x3b\x3d\x72\x0d\xa7\x58\x96\xff\xfa\x20\xe4\xa9\xb0\x7e\x3b\x67\x9a\x66\x16\x8d\x36\xb2\x02\xe7\x1e\xab\xc6\x9d\x38\xa2\x1c\x59\xdc\x05\xcf\xa0\x1b\x32\xa9\x98\x01\x73\x06\x4d\xc4\x89\x75\x9d\xce\xa2\x73\x59\xe6\xce\x9c\x83\x9e\xec\xa4\xc6\x7b\x02\xf8\x99\x87\x77\x84\x44\x58\x31\x4b\x9b\xc3\x2e\xf9\x7f\x37\x94\x73\x95\x75\x37\x79\x7a\xf7\xf6\xdd\xde\xc1\x36\x76\x5a\x15\xb7\x62\x2a\x3b\x1e\x27\xe3\x51\xbc\xff\x68\x5f\x27\x91\xd7\x7a\xb4\x72\x6c\x71\xe5\xac\xda\x16\x73\x6c\x1c\x09\x58\x57\xbd\xad\x2d\xfb\x32\x99\x6f\xac\xfa\xd6\x7d\x59\xc7\xe6\xaf\xea\x18\x4a\xf5\xba\xff\x12\x40\x39\x1a\xc6\xcb\x73\x27\x22\xbb\x5b\x99\x52\x6c\x75\xa9\x25\xe2\x06\xab\x71\xfb\x8d\x87\x03\x87\x6b\x1a\xeb\x4f\x03\xae\x3d\x5e\xea\xed\xf4\xda\x28\x64\xd5\xd6\xd6\x9a\xa9\x3a\x7b\x7f\x3b\x9a\xa7\xf9\xc2\x2d\x89\xde\xc2\xa8\x16\x95\x36\xcc\x34\x1b\x0d\x7b\xff\x7c\x62\xdd\xef\xef\x6c\xe1\x14\x42\xe6\xe7\x0f\x02\xdf\xd4\x10\xfd\xb1\x5e\xf2\x8b\xf5\x23\x1c\x68\x1b\xf3\xd9\x6d\x03\x79\x9a\xcf\x36\x01\xb9\x6c\x66\xb7\xa2\x6f\x40\x91\xb1\x5a\x37\x25\x33\xa8\x01\xdd\xc4\x97\x58\xcb\x2e\x7b\x28\xac\xe4\xc2\xf2\x77\xf7\x5b\x5d\x39\x33\x2c\x65\xba\x9b\x4a\xae\xb7\xa4\x3f\x85\xbc\xd9\x94\x6b\xee\xb5\x03\xda\xc2\xf8\xf6\x10\xf1\x17\x44\x06\x8d\xec\xfd\x07\x6c\xb7\x98\xb8\xaf\x95\x6b\xe4\x6d\x48\xbd\x05\x91\xf6\xd7\x83\x46\x32\xaf\x11\xe5\x97\xba\x1b\x19\x56\xf7\xf5\x0c\x30\xad\x65\xc6\xfd\xda\x5a\x8a\xe6\x14\x51\x80\x0d\xdd\xb5\x3e\x45\xb7\x3f\xe3\xa5\xc1\xad\xf8\xe2\x4b\xbd\xe3\xc6\x95\xb3\xfc\xf5\xd2\x7e\x5c\x54\x25\x36\xfe\x39\x09\x85\x76\x31\xd2\x2f\xf0\x6a\x9e\xa3\xc2\x1c\x5c\x3e\x59\xa3\x9c\x95\xef\xa8\xdb\x26\x73\xe2\x27\xf3\x7e\xf0\x1d\x60\x5f\xa0\xa9\x90\x7c\xd7\x1b\x7c\x14\x0d\x43\x8b\xad\xe6\xde\x92\x6b\x83\xf9\xf2\x19\x0e\x9b\x69\xd7\x46\x44\xf7\x68\xc9\xb6\x54\x79\x35\xbf\x5e\xa7\xfa\xfb\xa3\xee\x4e\x57\x7d\xfe\xa1\xe9\x17\x8d\xde\xce\xc6\xec\x8e\x0b\xcd\xde\x6c\x8e\xaa\x25\x17\x86\xd8\xce\x48\xe0\xe6\x42\xdd\xeb\x1b\x2a\x57\xae\x6d\x83\x8b\x16\x89\xbb\x87\xad\x0a\x34\xd9\xdc\x8e\x6d\xf9\xc8\x96\x5d\x65\xb0\xe3\x9e\x80\xc2\x19\x53\x79\x89\xda\x7e\x9a\x73\x85\xfd\x82\xfe\x86\xa5\xed\xd1\x4f\xaa\xdd\x32\x54\xe1\x17\x3f\x32\xe4\xb6\xf8\x40\x91\x13\x52\x6b\xa4\x0d\x00\x57\x9e\x48\xfb\x2a\xf0\xac\x48\x66\xae\x88\xaf\x18\x33\xd8\x2d\x85\x89\x67\xca\x61\xb0\x5c\x65\x9c\x03\xda\x71\xa1\x30\x20\x9f\xd3\x39\x0a\x28\xb8\xb0\xeb\x0d\x4b\x35\x5c\x67\x2b\x61\x1c\x34\xab\x79\x8f\x3a\x5d\x30\xc5\xd1\xb4\xa4\xc5\x53\xd6\xea\x81\xb6\x33\x26\x20\x75\xdb\x6d\x98\x43\x53\x5f\x16\x95\x37\xc1\x85\xe7\xbf\x23\xf2\x16\xac\xb5\xcc\xe2\xdb\x25\xb6\xe5\x90\x41\xa1\x69\x94\xd0\x23\x6f\x5d\x16\xee\xf6\x84\xc5\x7a\xed\xad\xe6\xa1\xaf\x56\x5b\xdd\xc3\x5a\x96\x54\x35\xac\x65\x51\x18\x4e\x0a\x71\xe7\x05\xec\x93\xb3\x6b\x55\x3c\xf8\xe5\xcc\x30\xbf\xbd\x12\x90\x2d\x38\xbf\x57\xf6\xc5\x93\x5b\xf7\xe3\xba\x94\xd5\x96\x07\x31\x2e\x9c\xdd\x0e\x7f\xa3\xf6\x5a\x53\xdb\x63\xc5\x16\xa8\xf4\x55\x26\xc6\x97\xfa\x80\x3a\xe7\x46\x97\xdb\x74\x5c\xb3\xac\xb5\xa9\x3a\x0f\xee\x3a\x92\xc7\x0f\x39\x5f\x6a\xa5\xb1\x52\x86\xb3\xa0\x81\xd9\x80\x81\x71\x2d\x59\x09\x7e\xf0\xfe\xdc\x80\x4e\x44\x37\x97\xdc\x54\x37\xef\xd0\xbf\xb3\x9d\xff\x05\x00\x00\xff\xff\xa1\x18\xc1\x3a\x5a\x82\x00\x00")

func graphstoreApiV1betaGraphstoreSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_graphstoreApiV1betaGraphstoreSwaggerJson,
		"graphstore/api/v1beta/graphstore.swagger.json",
	)
}

func graphstoreApiV1betaGraphstoreSwaggerJson() (*asset, error) {
	bytes, err := graphstoreApiV1betaGraphstoreSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "graphstore/api/v1beta/graphstore.swagger.json", size: 33370, mode: os.FileMode(420), modTime: time.Unix(1599106433, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v1alphaDepsDepsSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xc1\x6e\x82\x40\x10\x86\xef\x3c\xc5\x64\xdb\xa3\x91\xd6\xde\xbc\xf5\xd0\xa7\x68\x1a\xb3\xc2\x80\x63\x60\x67\x33\x3b\xd8\x10\xc3\xbb\x37\x8b\x44\x57\x23\xd1\xa4\x17\x20\x33\xdf\xff\xcf\xfe\x30\x1c\x33\x00\x13\x7e\x6d\x5d\xa3\x98\x35\x98\xd5\xf2\xcd\x2c\x62\x8d\x5c\xc5\x66\x0d\xb1\x0f\x60\x94\xb4\xc1\xd8\x2f\xd1\x87\xa2\xe1\xae\xdc\x58\x4f\xf9\xe1\xdd\x36\x7e\x67\xf3\x58\x1d\x2f\x4b\x2f\xac\x3c\x3a\x00\x98\x03\x4a\x20\x76\x51\x37\x3d\x82\x63\x85\x80\x6a\x32\x80\x61\x9c\x53\xb0\x0b\x5d\x8b\xc1\xac\xe1\xfb\xa4\xb2\xde\x37\x54\x58\x25\x76\xf9\x3e\xb0\x8b\xec\xcf\xc8\x7a\xe1\xb2\x2b\x9e\x64\xad\xee\x22\x78\x3c\x8d\x29\xb1\x22\x47\x91\x0b\x97\x54\xe3\x61\xb7\x5d\xf5\xe9\xfa\x73\x31\x86\xed\xfd\x98\x95\xb7\x7b\x2c\x74\x0a\x73\xc2\x3d\x8a\x12\x86\x84\x9e\xf8\x4d\x27\xcd\x55\x35\xf1\x09\x2a\xe4\x6a\x73\x6e\x0d\x8b\x8b\xf6\x60\x9b\x0e\x1f\x08\x17\x69\xaf\x62\x69\xad\xc6\xee\xb6\x57\x4c\x4c\xb3\xf4\x3e\x8d\x30\xd2\x39\xa5\x16\xbf\x44\x58\xfe\x13\x11\x6f\x0c\x9e\xce\x57\x70\x39\x1b\x8f\x9c\x62\x5c\xbb\x99\x7c\xe4\xf4\x63\x75\xdf\xb5\xc5\x10\x6c\xfd\xe8\xbd\xdd\x95\x96\xa8\x96\x9a\x30\x27\xb5\x22\xb6\xbf\x3e\x11\x29\xb6\xb7\x3c\x80\x79\x15\xac\xa2\xe2\x25\x4f\x76\x2b\x4f\x57\x2a\xe1\x87\xb9\xef\x14\xff\x83\x6c\xc8\xfe\x02\x00\x00\xff\xff\xa6\xcd\x5e\xf0\x87\x03\x00\x00")

func v1alphaDepsDepsSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_v1alphaDepsDepsSwaggerJson,
		"v1alpha/deps/deps.swagger.json",
	)
}

func v1alphaDepsDepsSwaggerJson() (*asset, error) {
	bytes, err := v1alphaDepsDepsSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v1alpha/deps/deps.swagger.json", size: 903, mode: os.FileMode(420), modTime: time.Unix(1599106432, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v1alphaExtractorExtractorSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\xc1\x6e\xdb\x38\x10\xbd\xfb\x2b\x08\xee\x1e\x17\x71\x36\x7b\xcb\x2d\xc8\x66\x81\x3d\x04\x08\x16\xd8\x53\x11\x04\x13\x72\x24\x33\x90\x48\x66\x38\x4c\xe3\x16\xfe\xf7\x82\x8c\x6c\x4b\x8a\x95\xd8\x52\x5b\xb7\x40\x75\xa2\x44\xce\xe3\xbc\xe1\x9b\x19\xea\xf3\x4c\x08\x19\x3e\x42\x59\x22\xc9\x73\x21\xcf\x4e\x4e\xe5\x1f\xe9\x9b\xb1\x85\x93\xe7\x22\xcd\x0b\x21\xd9\x70\x85\x69\x5e\xa3\x0f\xaa\x72\x51\xdf\x81\x37\xf3\xa7\x3f\xa1\xf2\x0b\x98\xe3\x33\x13\x28\x76\xb4\x1d\x9d\x78\x72\xec\x32\x96\x10\xf2\x09\x29\x18\x67\x13\x42\x33\x14\xd6\xb1\x08\xc8\x72\x26\xc4\x2a\xef\xa8\x9c\x0d\xb1\xc6\x20\xcf\xc5\x87\x17\x2b\xf0\xbe\x32\x0a\xd8\x38\x3b\x7f\x08\xce\xa6\xb5\xb7\x79\xad\x27\xa7\xa3\xda\x73\x2d\xf0\x22\x6c\xa9\x6c\x9c\xd6\xe8\xd1\x6a\xb4\xca\x60\x58\xfb\xbd\x59\x96\xec\x5c\x68\xbf\x0b\x21\x9d\x47\xca\x3b\xfc\xab\x13\x93\xbf\xd7\x00\xcb\xab\x35\xeb\xbb\x66\xd4\xf0\xce\x56\x84\xc1\x3b\x1b\x30\x74\xc0\x84\x90\x67\xa7\xa7\xbd\x4f\x22\x05\x38\x28\x32\x9e\x9b\x68\x5d\x88\x10\x95\xc2\x10\x8a\x58\x89\x35\xd2\x49\x0b\x3e\x1b\x05\xb5\xc0\x1a\x5e\x81\x09\x21\x7f\x27\x2c\x12\xce\x6f\x73\x8d\x85\xb1\x26\xe1\x86\xed\x29\x35\xee\xfe\xd7\x00\xcb\x8e\xf9\xaa\xf5\xb6\x6a\xef\x28\x35\x16\x10\x2b\x7e\xdf\x7b\x2b\xa2\xc5\x67\x8f\x8a\x51\x0b\x24\x72\xb4\x21\x31\x95\x03\x45\xcb\xa6\xc6\xab\x04\xfa\x86\xdf\xb3\x1d\x0c\xa4\x07\x82\x1a\x19\x69\x2b\xa0\x97\xa7\x47\xc7\x42\x9d\x55\x7f\xef\xf4\xb2\xef\xaf\xb1\x43\x33\x84\x8f\xd1\x10\x26\x8d\x30\x45\xfc\xea\x67\xf5\x18\x31\xf0\x3e\x94\x6f\x5b\x94\x19\xca\x3e\xd9\x5d\x02\xde\xc2\xde\xce\xda\x70\x4d\xf4\x06\xb2\xa7\x06\x56\x8b\xc9\xb9\x73\x9d\x51\x7e\x92\xcc\xc9\xce\xfe\xca\x9b\xe6\xf9\x91\xf3\xa6\x39\xa9\xa3\x64\xcd\xa6\xb9\xb5\x3c\xdb\xb6\xa2\xd4\x4c\xb7\x68\xed\xfc\xe1\xa5\xcf\x01\x74\xf7\x0f\xd8\xea\x26\xa9\xef\x79\x24\x36\xbd\x94\x90\x8e\x4a\xb0\xe6\x13\x34\x02\xea\x24\xcb\x1a\x2b\x30\x19\x5b\xca\x9d\x07\x5b\x3b\x1d\x73\x83\x3f\xd8\xb2\x69\xe7\x97\xce\x06\x26\x30\xb6\x2f\xee\xbd\x40\x82\x72\xfe\x75\x96\xaf\x2d\x81\x08\xba\x62\x91\x86\xb1\xee\xaf\x7f\x63\xaf\x8e\x9e\x77\xd6\xb5\xee\x51\x5c\x83\x85\x12\x6b\xb4\xfc\x8f\xe9\x84\xe5\xe0\x83\xa9\xc0\x96\x11\xca\x51\xa1\x0d\xcb\xc0\x58\x8f\xb2\x74\x91\x14\xfe\x4f\xd5\x18\xe3\xa3\x6b\x69\x8c\x69\xbb\x1d\x4d\xd7\xd1\xee\x8a\xd2\x4b\xd7\x03\xd4\x35\xd4\xc3\x27\x08\x2b\x60\x2a\xc6\xa9\xf6\x8c\x88\x56\x61\x2a\xbc\x74\x96\xd1\xf2\x60\xb4\x7a\x8e\xe4\x39\xd0\x3a\xc7\x02\xaa\x9b\xdd\x6e\xbd\xe9\xc1\x50\x57\x89\x07\xe8\x74\xcf\xf0\x36\xad\x72\x42\x7c\xeb\x4e\x09\xf8\x4e\x9a\xea\xd5\x9d\x31\x0a\xeb\x74\xbb\x63\xe9\xab\xfb\xcb\x35\x3a\x64\xe3\xcb\xf9\xc0\x35\x6d\x92\x1e\x58\x2d\x50\xdf\x1c\x9b\x59\xfe\xad\xbe\x8f\xc5\x85\x9d\x74\x61\x48\xeb\xef\x0e\x49\xbc\x76\x99\x86\x2a\xbe\x57\xdf\x3b\x41\x28\x1c\xd5\xc0\xf9\xda\xb7\x64\x7c\x2f\x9b\x3b\x17\xd4\x09\x14\xb1\x07\xb0\x37\x3f\xe5\xf4\x20\x3d\x63\x19\x4b\xa4\x21\x7e\xc6\xf2\x5f\x67\x03\x6d\x11\x43\x18\x79\x11\xd0\xc8\x60\xaa\x6f\x56\x83\xda\x92\xda\x47\x89\xe9\x52\x3b\x5b\xcd\xbe\x04\x00\x00\xff\xff\xd5\xd5\x2f\xbd\x3b\x12\x00\x00")

func v1alphaExtractorExtractorSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_v1alphaExtractorExtractorSwaggerJson,
		"v1alpha/extractor/extractor.swagger.json",
	)
}

func v1alphaExtractorExtractorSwaggerJson() (*asset, error) {
	bytes, err := v1alphaExtractorExtractorSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v1alpha/extractor/extractor.swagger.json", size: 4667, mode: os.FileMode(420), modTime: time.Unix(1599106432, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v1alphaSchemaSchemaSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xc1\x6e\xfa\x30\x0c\xc6\xef\x7d\x0a\x2b\xff\xff\x11\xd1\x8d\xdd\xb8\xed\xb0\xa7\x98\x26\x14\x5a\xb7\x18\xb5\x49\x64\xbb\x4c\x15\xea\xbb\x4f\x29\x1d\x04\x44\x05\xd2\x4e\xa9\xec\xdf\xf7\x39\x5f\xeb\x1e\x33\x00\x23\xdf\xb6\xae\x91\xcd\x1a\xcc\x6a\xf9\x62\x16\xb1\x46\xae\xf2\x66\x0d\xb1\x0f\x60\x94\xb4\xc1\xd8\x2f\x31\x48\xd1\xf8\xae\xdc\xd8\x40\xf9\xe1\xd5\x36\x61\x67\x73\x29\x76\xd8\xfe\x1e\xcb\xc0\x5e\xfd\xe8\x02\x60\x0e\xc8\x42\xde\x45\xed\xf4\x08\xce\x2b\x08\xaa\xc9\x00\x86\x71\x56\xe1\x9d\x74\x2d\x8a\x59\xc3\xe7\x49\x65\x43\x68\xa8\xb0\x4a\xde\xe5\x7b\xf1\x2e\xb2\x5f\x23\x1b\xd8\x97\x5d\xf1\x24\x6b\x75\x17\xc1\xe3\x69\x4c\x89\x15\x39\x8a\x9c\x5c\x92\x8d\x97\xdd\x76\xd5\xbb\xeb\xcf\xc5\x18\xb8\x0f\x63\x5e\xbf\xdd\x63\xa1\x53\x98\x13\x1e\x90\x95\x50\x12\x7a\xe2\x37\x1d\x37\x57\xd5\xc4\x47\x94\xc9\xd5\xe6\xdc\x1a\x16\x17\xed\xc1\x36\x1d\x3e\x10\x2e\xd2\x5e\xe5\xb9\xb5\x1a\xbb\xdb\x5e\x31\x31\xcd\xd2\x73\x1a\x61\xb8\x73\x4a\x2d\x7e\x30\x7b\xfe\x4b\x44\xbc\x31\x78\x3a\x5f\xe1\xcb\xd9\x78\xe4\x14\xe3\xea\xcd\xe4\x23\xa7\x6f\xab\xfb\xae\x2d\x8a\xd8\xfa\xd1\x7b\xbb\x2b\x2d\x51\x2d\x35\x32\x27\xb5\xcc\xb6\xbf\xbe\x11\x29\xb6\xb7\x3c\x80\xf9\xcf\x58\x45\xc5\xbf\x3c\xd9\xad\x3c\x5d\xa9\x84\x1f\xe6\xbe\x53\xfc\x0f\xb2\x21\xfb\x09\x00\x00\xff\xff\x9b\xfc\xdd\x16\x8b\x03\x00\x00")

func v1alphaSchemaSchemaSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_v1alphaSchemaSchemaSwaggerJson,
		"v1alpha/schema/schema.swagger.json",
	)
}

func v1alphaSchemaSchemaSwaggerJson() (*asset, error) {
	bytes, err := v1alphaSchemaSchemaSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v1alpha/schema/schema.swagger.json", size: 907, mode: os.FileMode(420), modTime: time.Unix(1599106432, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v1alphaStoreStoreSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x41\x6f\xdb\x3c\x0c\xbd\xfb\x57\x08\xfa\xbe\x63\xd0\xac\xe9\x2d\xb7\x02\xed\x86\x0d\xc3\x56\x74\x03\x76\x18\x8a\x42\xb1\x68\x47\x9d\x2d\x09\x14\x95\x21\x28\xfc\xdf\x07\xc9\x89\xab\xa6\x76\xe3\x20\xc9\x25\x09\xc4\xf7\x1e\xf9\x44\x8a\x79\xce\x18\xe3\xee\xaf\x28\x4b\x40\x3e\x67\x7c\x76\xf1\x81\x4f\xc2\x99\xd2\x85\xe1\x73\x16\xe2\x8c\x71\x52\x54\x41\x88\x4b\xb0\x2e\xaf\x8c\x97\x8f\xc2\xaa\xe9\xea\x52\x54\x76\x29\xa6\x8e\x0c\x42\xfb\x79\x61\xd1\x90\x89\x1a\x8c\xf1\x15\xa0\x53\x46\x07\xe6\xe6\x27\xd3\x86\x98\x03\xe2\x19\x63\x4d\xcc\x94\x1b\xed\x7c\x0d\x8e\xcf\xd9\xef\x96\x25\xac\xad\x54\x2e\x48\x19\x3d\x7d\x72\x46\x07\xec\x43\xc4\x5a\x34\xd2\xe7\x23\xb1\x82\x96\x01\xf8\xdc\xa6\x91\x50\x28\xad\x02\xce\xbd\xf8\x8a\xc5\x2e\x7c\x71\xad\xd7\xdd\x61\xb0\xbb\xb6\xd1\xad\x59\x3c\x41\x4e\x1b\x33\x2d\xdc\x02\x92\x02\x97\xa0\x37\xf8\x47\x8f\xd5\xab\xd3\x44\xc7\x11\x2a\x5d\xf2\x2e\xd4\x4c\x5e\xb8\x2b\x51\x79\xd8\x43\x9c\xa4\xb1\xc2\x60\x2d\x28\x44\x17\x6b\x82\x44\x34\x4b\xbf\x37\x29\x38\x7a\x4d\xaa\x86\x5b\x44\x83\xc7\x58\x84\x1d\x81\xd1\xfe\x72\x23\x07\xed\x29\x4d\x10\x06\x6f\xc0\x9f\xd2\x74\x35\xeb\x57\xad\xc1\x39\x51\xee\xbb\xb7\x5e\xaa\x04\x12\xaa\x72\x43\x54\x81\x28\xd6\xaf\x2b\x52\x04\xf5\x2e\x9e\x31\xfe\x3f\x42\x11\x18\xff\x4d\x93\xd9\x9a\xa6\x23\x95\xe0\x9b\x3d\x7d\x8a\x8f\xe7\x06\x2a\x20\xb8\x07\x67\x8d\x76\xf0\x4e\xbb\xde\x52\x3f\x2a\x2d\x47\x10\xf7\xf6\xd9\x0a\x85\x67\xbb\x9b\x58\xe9\x27\x14\x76\xf9\x99\xa0\xbe\x13\x0a\x0f\xbe\xa2\x8e\x7d\x8c\xc9\x72\x2b\xf2\xb3\x25\x1e\x3c\x43\x7f\x2e\x4f\xf2\x62\x53\xc5\xd9\xc9\x15\xaf\x4e\xad\x08\x3a\x37\x32\x30\x77\x74\xc7\x34\xfb\x76\xcb\xed\x55\xee\x1a\x72\x23\x48\x9c\x6f\x19\x0e\x94\xd4\x33\x49\x3b\xb9\x38\x68\x5f\x77\x7f\x3a\xf1\xe4\xfe\xfa\x57\x52\x0a\xff\xf2\xe3\xfb\xb7\x6d\xfa\x87\x8e\x26\xa1\x10\xbe\x8a\xf5\x05\xfc\x3b\xc5\xc4\xc7\x70\xcc\x7e\x96\x6f\xb7\xe1\x98\xbe\xf4\xf7\x43\xf7\x2c\xed\x03\xd5\x86\x1b\xf0\x55\x39\x3a\xc5\xaa\xea\x5b\x3d\x67\x5a\x55\x07\xaf\xa9\x3b\x3f\xc6\x62\xb6\x65\x37\x59\x93\xfd\x0b\x00\x00\xff\xff\x74\x37\xef\xc2\x8b\x09\x00\x00")

func v1alphaStoreStoreSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_v1alphaStoreStoreSwaggerJson,
		"v1alpha/store/store.swagger.json",
	)
}

func v1alphaStoreStoreSwaggerJson() (*asset, error) {
	bytes, err := v1alphaStoreStoreSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v1alpha/store/store.swagger.json", size: 2443, mode: os.FileMode(420), modTime: time.Unix(1599106433, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v1alphaTrackerTrackerSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5b\x6f\xdb\x36\x14\x7e\xf7\xaf\x20\xb4\x3d\x16\x71\x96\xbd\xe5\xad\x58\x57\x60\xc0\x8a\x01\xcb\xf6\x34\x04\x06\x4d\x1d\xcb\x6c\x25\x92\xe1\x25\x9b\x57\xf8\xbf\x17\x92\xa8\x48\xd4\xcd\x96\x28\xdf\x50\x11\x08\x62\x9b\xe2\xd1\xb9\x7e\xe7\x13\xa9\xaf\x0b\x84\x02\xf5\x2f\x8e\x22\x90\xc1\x23\x0a\x1e\xee\xee\x83\x77\xe9\x6f\x94\x6d\x78\xf0\x88\xd2\x79\x84\x02\x4d\x75\x0c\xe9\x7c\x08\x42\x91\x98\x9b\x70\x85\x05\x5d\xbe\xfe\x84\x63\xb1\xc5\x4b\x2d\x31\xf9\x02\xb2\xf8\x7f\x27\x24\xd7\x3c\x93\x83\x50\xf0\x0a\x52\x51\xce\xd2\xd5\xf6\x23\x62\x5c\x23\x05\x3a\x58\x20\xb4\xcf\xee\x46\x38\x53\x26\x01\x15\x3c\xa2\x7f\xf2\x55\x58\x88\x98\x12\xac\x29\x67\xcb\xcf\x8a\xb3\xf4\xda\xe7\xec\x5a\x21\x79\x68\xc8\x91\xd7\x62\xbd\x55\xa5\x19\x6f\x0a\x47\x12\x8b\xed\xf2\x6b\x8c\x59\x64\x70\x04\xfb\x65\x08\x02\x58\x08\x8c\x50\x28\xaf\x47\x28\x88\x40\x57\xbe\x22\x14\x70\x01\x32\xbb\xd3\x6f\x61\x6a\xd1\x87\x62\xdd\xee\x09\xe4\x2b\x25\xb0\xfa\x9d\x2a\xfd\xa1\x2a\xed\x5d\xb9\x58\x82\x12\x9c\x29\xe7\x16\xd9\xc4\xc3\xfd\x7d\xed\x27\x94\xfa\x5a\x11\x49\x85\xb6\xce\x7b\x8f\x94\x21\x04\x94\xda\x98\x18\x15\x92\xee\x2a\xe2\xb3\x45\x8a\x6c\x21\xc1\x0d\x61\x08\x05\x3f\x4a\xd8\xa4\x72\x7e\x58\x86\xb0\xa1\x8c\xa6\x72\x55\x11\xb2\xba\xd6\x7f\x5a\xf9\x81\x23\x65\x5f\xf9\xb6\xaf\xde\x38\x08\x61\x83\x4d\xac\x0f\x1b\xc1\x90\x61\xf0\x9f\x00\xa2\x21\x44\x20\x25\x97\x6f\xb6\xf8\x9a\x22\x0d\xd3\x34\x81\x5f\x53\xa1\x3d\x7a\x2f\x5a\x2c\x08\x04\x96\x38\x01\x0d\xb2\x4c\xab\x7c\xd4\xcc\x61\x38\xc9\xea\xa0\xc8\x9c\xba\xce\x34\xb3\x32\x4d\xbb\xfa\x8c\x84\x17\x43\x25\xa4\x59\xa3\xa5\x81\xda\xac\xde\x89\x4c\xae\xd2\x92\xb2\x28\xe8\xf2\x73\x87\x36\x5c\x46\x98\xd1\xff\xb3\xbc\x6c\xd7\xe8\xc5\x80\xdc\xf5\xa8\xb4\xc1\xb1\x9a\x56\xa7\x84\x87\x26\xee\xf0\xcf\xc4\xda\xbc\x7d\x7e\xae\x44\x54\xe3\xa8\x1e\xcb\x66\xb5\x96\x62\x9e\x17\x55\x61\xd6\xc0\x23\x00\x43\x4f\x08\x17\xfa\x06\xc1\x42\xcf\x50\x51\x8c\x19\x2a\x66\xa8\xd8\xe2\x65\x6e\xcd\x20\x58\xf8\x94\x2d\xa9\x42\xc2\xed\x00\x41\xae\xfb\x0c\x02\x76\x74\xa4\xb8\xe8\x04\x00\x9f\x04\xa7\x4c\x43\x4a\xdc\x6b\xd3\x1b\x2e\x13\xac\xed\x05\x3f\x3f\x0c\x2d\x47\xc2\x0d\xd3\x57\xa1\xec\xd1\xd5\xea\x14\xd0\xd0\x4a\x5d\x26\x98\xe1\x28\xd3\xdf\xa3\x62\x3f\x59\x21\xb7\x53\xb8\xb9\xc2\x73\xe5\xda\xd1\x51\x0d\x46\xc6\xd7\xd2\x27\x53\x5f\x5c\x89\x2a\x5f\x28\x0b\xaf\xab\x61\xfb\x41\x80\xe2\x46\x12\xf0\x43\x80\xa7\x4c\xc6\x0d\x71\x78\xab\xf0\x8c\x00\x76\x8c\x22\xf0\xe7\xaf\xbd\x99\xc2\xe7\xe3\x34\x88\xa0\x6c\x15\x0f\x80\x82\xbc\x8e\x6e\x93\xbe\xe7\xba\xcf\x10\x60\xc7\x4c\xdf\x2f\x41\xdf\x9d\x02\x1a\x5a\xa9\x79\x36\x57\xeb\x55\x70\x35\xa4\x60\xff\xca\xd6\xdf\x44\xc5\x66\xaa\xce\xc5\x6a\x47\x47\x01\xac\x79\xd8\x48\xf2\x3c\xff\xdb\x66\xfa\x37\xdb\x46\xc6\xa9\x40\xd5\x17\x03\x4a\x1f\x63\xef\x34\x15\xf2\x76\x9e\x56\x51\xa9\x3c\xfd\x0a\x41\xa8\x72\x5b\x2b\x7f\xfc\x4b\x80\xe9\x8f\x34\x76\x98\x6f\x51\xf1\x7c\xfd\x19\x48\x89\x24\x81\x90\x69\x19\x69\x5a\xab\x8b\x92\x1f\xd5\xaa\xa5\xab\x87\x57\x63\xab\x76\x4a\x43\x32\x6a\x65\xe6\x91\xbf\x65\x3c\x66\xb1\x43\xa1\x46\xac\xb7\x74\x67\xc4\xca\xf2\x34\x74\xf0\xd2\x8e\x33\x4a\x67\x3d\x96\x12\xbb\x29\x1e\x50\x0d\x49\xfd\xfa\xce\xfc\xb5\xd8\xea\xa6\x4a\x3b\xa8\xef\x5b\xd1\x39\x3b\xfa\x5d\x9b\xcd\x7b\xb6\xf3\xc9\xa9\xf4\xfa\x95\x19\x17\xdc\x57\x1c\x9b\x43\xb1\x71\x3c\x54\xf6\xb0\xf5\x4e\x57\xaa\xab\xdd\x42\x07\xca\x3c\x4c\x84\x9a\x80\xa3\xed\x23\x3c\xec\x34\xaf\xad\x4b\x77\xf7\x68\x27\xa5\x41\xa9\x91\x45\x1c\x82\xc6\x34\x3e\x59\x4e\x56\x53\x6a\x40\x26\xda\x38\x3d\x69\x09\x38\xf1\x8e\x56\x24\x05\x59\x9d\xc6\xf3\x5b\xad\xc5\x89\x44\x7b\x04\x35\xd3\x4a\x69\xac\x4d\x67\x60\x6f\x2f\x27\xf2\x76\x9e\x23\x9b\xba\x54\xcf\xb3\x2d\x60\x45\x38\x53\x5a\x62\xca\xea\xd4\xec\xb8\xfe\x47\xb8\x98\xa2\x0f\x1c\xf3\xa4\xbd\x77\xc8\xf1\xe6\x68\x75\x7b\x62\x90\xd3\x8f\x8b\xc5\x60\x3c\xef\x18\xda\xc0\xfb\x7c\x50\x67\x11\x67\x75\xc1\x99\x39\x50\x8f\x1f\x9e\x1a\x9b\xaf\x43\xfd\x30\x92\x29\x0c\xc9\xe5\xca\xb2\x6c\xf3\xdb\xcb\x6e\xfb\x98\x50\x52\xac\xe2\x51\xe1\x3b\xce\x85\x43\x6f\xa2\x79\xb8\xe6\x8c\xcc\xb9\x11\xd9\x21\xed\xa9\xff\xfd\x9a\x09\x1c\xa0\x6f\xc5\xfc\xfa\xe1\xa4\x87\xed\xcd\xf7\x31\x26\x35\xdc\x2a\x6d\x15\xb6\x90\x3e\xd2\x68\xf7\x55\x0a\x0f\x9b\x45\x0f\x0e\x8c\x67\x93\xf9\xce\xe2\xf4\x24\xf5\xb4\x01\x72\x7a\xed\xb8\xc0\xd4\x36\xc9\xbf\x97\xc0\x34\x8f\x42\x4e\x10\x18\xdb\xfc\x7d\x02\x33\x09\x44\x9e\xd8\x58\x17\x26\x46\x1b\xed\xc2\x8c\x0f\x2a\x36\xf8\xf7\xc1\x48\x15\x94\x7d\x00\x03\x18\x52\x91\xc7\xd8\xed\xcf\x14\x1b\x07\xfd\x07\xf5\xac\xc7\xca\xb1\x7a\x0a\x2f\xf6\xd9\xfd\x04\x58\x92\xed\x04\xec\x90\x60\x46\xa0\x93\x24\xaf\x39\x8f\x01\xb3\xce\x6d\x31\x3b\xdd\xea\x83\x92\x5b\xfc\xd1\x60\xd3\xbd\xb5\xd0\x64\xbf\xbd\xf2\x53\xf2\x76\x9a\x3b\xd8\x06\xf4\xb1\xb9\x1d\x37\x36\x2f\x2c\x98\x0c\x94\x38\xa8\x22\x8a\xcc\xf0\x47\x3e\xd9\xc8\xae\xc3\x9e\x75\xf3\xf2\x40\x5e\x5c\x09\xe7\xbc\xcc\x56\xfa\x08\xed\xae\x87\xb1\x9e\x8f\x0c\x4c\xd4\x1f\xdd\x83\xb7\x2b\xeb\x13\xc5\x61\xdb\xc9\x9c\xd8\x7b\xc2\x37\xdc\x99\xee\x69\xb3\xcf\x69\x4e\x2a\x88\xb2\x68\xb2\xf6\xd3\xaa\x75\xfb\xd9\x95\x87\xda\x17\x3f\x25\xfc\xe5\x76\x76\x88\xfb\x22\xd2\x84\x40\xef\xad\x8c\x41\x94\xab\xd8\xef\x3f\x0f\x71\x5d\xa4\x7f\xfb\xc5\xb7\x00\x00\x00\xff\xff\x98\xf8\xeb\x6a\x5a\x3b\x00\x00")

func v1alphaTrackerTrackerSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_v1alphaTrackerTrackerSwaggerJson,
		"v1alpha/tracker/tracker.swagger.json",
	)
}

func v1alphaTrackerTrackerSwaggerJson() (*asset, error) {
	bytes, err := v1alphaTrackerTrackerSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v1alpha/tracker/tracker.swagger.json", size: 15194, mode: os.FileMode(420), modTime: time.Unix(1599106433, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"depscloud/api/v1beta/core.swagger.json":        depscloudApiV1betaCoreSwaggerJson,
	"depscloud/api/v1beta/manifest.swagger.json":    depscloudApiV1betaManifestSwaggerJson,
	"depscloud/api/v1beta/rpc.swagger.json":         depscloudApiV1betaRpcSwaggerJson,
	"graphstore/api/v1beta/graphstore.swagger.json": graphstoreApiV1betaGraphstoreSwaggerJson,
	"v1alpha/deps/deps.swagger.json":                v1alphaDepsDepsSwaggerJson,
	"v1alpha/extractor/extractor.swagger.json":      v1alphaExtractorExtractorSwaggerJson,
	"v1alpha/schema/schema.swagger.json":            v1alphaSchemaSchemaSwaggerJson,
	"v1alpha/store/store.swagger.json":              v1alphaStoreStoreSwaggerJson,
	"v1alpha/tracker/tracker.swagger.json":          v1alphaTrackerTrackerSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("nonexistent") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"depscloud": &bintree{nil, map[string]*bintree{
		"api": &bintree{nil, map[string]*bintree{
			"v1beta": &bintree{nil, map[string]*bintree{
				"core.swagger.json":     &bintree{depscloudApiV1betaCoreSwaggerJson, map[string]*bintree{}},
				"manifest.swagger.json": &bintree{depscloudApiV1betaManifestSwaggerJson, map[string]*bintree{}},
				"rpc.swagger.json":      &bintree{depscloudApiV1betaRpcSwaggerJson, map[string]*bintree{}},
			}},
		}},
	}},
	"graphstore": &bintree{nil, map[string]*bintree{
		"api": &bintree{nil, map[string]*bintree{
			"v1beta": &bintree{nil, map[string]*bintree{
				"graphstore.swagger.json": &bintree{graphstoreApiV1betaGraphstoreSwaggerJson, map[string]*bintree{}},
			}},
		}},
	}},
	"v1alpha": &bintree{nil, map[string]*bintree{
		"deps": &bintree{nil, map[string]*bintree{
			"deps.swagger.json": &bintree{v1alphaDepsDepsSwaggerJson, map[string]*bintree{}},
		}},
		"extractor": &bintree{nil, map[string]*bintree{
			"extractor.swagger.json": &bintree{v1alphaExtractorExtractorSwaggerJson, map[string]*bintree{}},
		}},
		"schema": &bintree{nil, map[string]*bintree{
			"schema.swagger.json": &bintree{v1alphaSchemaSchemaSwaggerJson, map[string]*bintree{}},
		}},
		"store": &bintree{nil, map[string]*bintree{
			"store.swagger.json": &bintree{v1alphaStoreStoreSwaggerJson, map[string]*bintree{}},
		}},
		"tracker": &bintree{nil, map[string]*bintree{
			"tracker.swagger.json": &bintree{v1alphaTrackerTrackerSwaggerJson, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
