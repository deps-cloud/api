// Code generated for package swagger by go-bindata DO NOT EDIT. (@generated)
// sources:
// depscloud/api/v1beta/core.swagger.json
// depscloud/api/v1beta/manifest.swagger.json
// depscloud/api/v1beta/rpc.swagger.json
// graphstore/api/v1beta/graphstore.swagger.json
// v1alpha/deps/deps.swagger.json
// v1alpha/extractor/extractor.swagger.json
// v1alpha/schema/schema.swagger.json
// v1alpha/store/store.swagger.json
// v1alpha/tracker/tracker.swagger.json
package swagger

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"net/http"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}


type assetFile struct {
	*bytes.Reader
	name            string
	childInfos      []os.FileInfo
	childInfoOffset int
}

type assetOperator struct{}

// Open implement http.FileSystem interface
func (f *assetOperator) Open(name string) (http.File, error) {
	var err error
	if len(name) > 0 && name[0] == '/' {
		name = name[1:]
	}
	content, err := Asset(name)
	if err == nil {
		return &assetFile{name: name, Reader: bytes.NewReader(content)}, nil
	}
	children, err := AssetDir(name)
	if err == nil {
		childInfos := make([]os.FileInfo, 0, len(children))
		for _, child := range children {
			childPath := filepath.Join(name, child)
			info, errInfo := AssetInfo(filepath.Join(name, child))
			if errInfo == nil {
				childInfos = append(childInfos, info)
			} else {
				childInfos = append(childInfos, newDirFileInfo(childPath))
			}
		}
		return &assetFile{name: name, childInfos: childInfos}, nil
	} else {
		// If the error is not found, return an error that will
		// result in a 404 error. Otherwise the server returns
		// a 500 error for files not found.
		if strings.Contains(err.Error(), "not found") {
			return nil, os.ErrNotExist
		}
		return nil, err
	}
}

// Close no need do anything
func (f *assetFile) Close() error {
	return nil
}

// Readdir read dir's children file info
func (f *assetFile) Readdir(count int) ([]os.FileInfo, error) {
	if len(f.childInfos) == 0 {
		return nil, os.ErrNotExist
	}
	if count <= 0 {
		return f.childInfos, nil
	}
	if f.childInfoOffset+count > len(f.childInfos) {
		count = len(f.childInfos) - f.childInfoOffset
	}
	offset := f.childInfoOffset
	f.childInfoOffset += count
	return f.childInfos[offset : offset+count], nil
}

// Stat read file info from asset item
func (f *assetFile) Stat() (os.FileInfo, error) {
	if len(f.childInfos) != 0 {
		return newDirFileInfo(f.name), nil
	}
	return AssetInfo(f.name)
}

// newDirFileInfo return default dir file info
func newDirFileInfo(name string) os.FileInfo {
	return &bindataFileInfo{
		name:    name,
		size:    0,
		mode:    os.FileMode(2147484068), // equal os.FileMode(0644)|os.ModeDir
		modTime: time.Time{}}
}

// AssetFile return a http.FileSystem instance that data backend by asset
func AssetFile() http.FileSystem {
	return &assetOperator{}
}

var _depscloudApiV1betaCoreSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xc1\x6e\x83\x30\x0c\x86\xef\x3c\x85\x95\xed\x58\x95\xad\xbb\xf5\xb6\xc3\x9e\x62\x9a\xa6\x00\x86\xb9\x82\x38\x72\x4c\x27\x54\xf1\xee\x53\x28\x6a\xd3\xaa\xa8\x95\x76\x02\xf9\xff\x7e\x3b\x3f\x38\x87\x0c\xc0\x84\x5f\xdb\x34\x28\x66\x0b\x66\xb3\x7e\x31\xab\x58\x23\x57\xb3\xd9\x42\xd4\x01\x8c\x92\xb6\x18\xf5\x0a\x7d\x28\x5b\xee\xab\xdc\x7a\xca\xf7\xaf\x05\xaa\xcd\x4b\x16\x5c\x7b\x61\xe5\xc9\x0b\x60\xf6\x28\x81\xd8\x45\xc7\xfc\x0a\x8e\x15\x02\xaa\xc9\x00\xc6\x69\x42\xc9\x2e\xf4\x1d\x06\xb3\x85\xcf\xa3\xcb\x7a\xdf\x52\x69\x95\xd8\xe5\xbb\xc0\x2e\xb2\x5f\x13\xeb\x85\xab\xbe\x7c\x90\xb5\xfa\x13\xc1\xc3\x71\x4c\x85\x35\x39\x8a\x5c\x38\xe7\x99\x0e\x5b\xf4\xf5\xbb\x1b\x4e\xc5\x18\x73\xf0\x53\x4a\x2e\x76\x58\xea\x1c\xe6\x88\x7b\x14\x25\x0c\x09\x3d\xf3\xdf\xbd\xb4\x17\xd5\xa4\x4f\x50\x21\xd7\x98\x93\x34\xae\xce\xde\xbd\x6d\x7b\xbc\x63\x5c\xa5\x5a\xcd\xd2\x59\x8d\x6a\x31\x28\x26\x4d\xb3\xf4\x39\x8f\x30\xd2\x3b\xa5\x0e\x3f\x44\x58\xfe\x13\x11\xaf\x1a\x3c\x9c\xaf\xe4\x6a\x31\x1e\x39\xc5\xb8\x70\x0b\xf9\xc8\xe9\xdb\xe6\x76\xd7\x0e\x43\xb0\xcd\xbd\xef\x76\xd3\x5a\xa1\x5a\x6a\xc3\x92\xd5\x8a\xd8\xe1\xf2\x44\xa4\xd8\x5d\xf3\x00\xe6\x59\xb0\x8e\x8e\xa7\x3c\xd9\xad\x3c\x5d\xa9\x84\x1f\x97\xfe\x53\xbc\x07\xd9\x98\xfd\x05\x00\x00\xff\xff\x99\x98\xd1\x23\x81\x03\x00\x00")

func depscloudApiV1betaCoreSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_depscloudApiV1betaCoreSwaggerJson,
		"depscloud/api/v1beta/core.swagger.json",
	)
}

func depscloudApiV1betaCoreSwaggerJson() (*asset, error) {
	bytes, err := depscloudApiV1betaCoreSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "depscloud/api/v1beta/core.swagger.json", size: 897, mode: os.FileMode(420), modTime: time.Unix(1622949604, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _depscloudApiV1betaManifestSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x4d\x6f\xe3\x36\x13\xbe\xfb\x57\x0c\xf4\xbe\xc7\xc2\xde\xa6\xb7\xdc\x16\xe8\x16\xe8\x61\x81\xa2\xdb\x5b\x11\x24\x34\x39\xb2\xb8\x95\x48\x2d\x67\x98\xac\x51\xe4\xbf\x17\xa4\x24\x9b\x92\x65\x4b\x8e\xbd\xd8\x04\x58\x03\x01\x62\x89\x33\x7c\xe6\xe3\x99\x19\xd2\xff\x2e\x00\x32\x7a\x12\x9b\x0d\xba\xec\x16\xb2\x9b\xe5\xbb\xec\xa7\xf0\x4c\x9b\xdc\x66\xb7\x10\xde\x03\x64\xac\xb9\xc4\xf0\x5e\x61\x4d\xb2\xb4\x5e\xad\x44\xad\x57\x8f\x3f\xaf\x91\xc5\xaa\x12\x46\xe7\x48\xbc\xac\x9d\x65\x1b\xe5\x01\xb2\x47\x74\xa4\xad\x09\x52\xed\xbf\x60\x2c\x03\x21\x67\x0b\x80\xe7\xb8\x8b\xb4\x86\x7c\x85\x94\xdd\xc2\xdf\x8d\x94\xa8\xeb\x52\x4b\xc1\xda\x9a\xd5\x67\xb2\x26\xac\xbd\x8b\x6b\x6b\x67\x95\x97\x33\xd7\x0a\x2e\x68\x0f\x7f\x08\x74\xff\x2a\xac\xb5\xc4\xc9\xf7\xe0\x0f\x5f\x55\xc2\x6d\x03\xf2\x4f\x6c\x1d\x82\x90\x12\x6b\x26\x08\x4e\x71\x55\xdc\x10\xc4\xda\x7a\x06\xa5\x49\xda\x47\x74\xa8\xa0\x53\x0e\xb9\x2e\x91\x40\x18\x05\x75\xb0\x9b\x98\x80\x0b\xac\x96\xad\x63\xe2\x16\xb6\x46\x17\xf5\xfc\xae\xc2\x36\x1f\x5b\xd9\xb0\x9d\xd8\xe0\x27\x74\x8f\x5a\xe2\x7d\xdc\x3d\x15\x73\x48\xb5\x35\x84\xd4\x03\x0c\x90\xdd\xbc\x7b\x37\x78\x04\x21\x58\x24\x9d\xae\xb9\x8d\xc2\x7b\x20\x2f\x25\x12\xe5\xbe\x84\x4e\x53\x8a\xaa\x31\x5e\x16\x58\x89\x03\x65\x00\xd9\xff\x1d\xe6\x41\xcf\xff\x56\x0a\x73\x6d\x74\xd0\x4b\xad\x6b\x23\xd2\x3f\x5b\x9d\x59\x4f\xf2\x39\xf9\xf6\x9c\x6e\x96\x29\xcc\x85\x2f\x79\x1a\xb8\x01\x6f\xf0\x6b\x8d\x92\x51\x01\x3a\x67\xdd\xf5\xf0\x3b\x6f\x58\x57\xf8\x21\x68\x3d\x01\x7c\x31\x62\x42\x56\x0b\x27\x2a\x64\x74\xfb\xa4\x6c\x3e\x03\x7b\x8c\xa8\x22\x7b\xd6\x56\x6d\x87\x78\xb5\x39\xf6\xc6\xe1\x17\xaf\x1d\x86\x04\x61\xe7\xf1\x9a\x71\xfa\xe2\x91\x78\x8e\xb5\x77\x89\xb5\x2c\x36\x43\x3b\x8f\x24\xee\x5e\xf3\xdd\x22\xd5\xd8\xfa\xee\x90\x8f\x2b\xfc\xca\x4e\x48\x9e\xcd\xcb\x0f\xcd\x7a\xa8\x85\x23\x24\x20\x1f\x4a\x01\xaa\x84\x7b\x0e\xd9\x3b\x43\x40\x2c\x8c\x12\x2e\x3c\xa8\x1d\x12\x1a\x8e\xbc\x23\xb0\xf9\x8e\xb2\x34\x87\x9b\xed\x96\xda\x9a\x8e\x9e\xed\x93\x37\x41\xd0\x16\xeb\x0f\x8a\x76\x9f\x57\x4b\xd1\x5d\xa4\xae\x4e\xd2\x83\x0c\x3e\x9f\xa7\x95\x60\x59\xcc\x66\xe9\xc7\xb0\x1a\xa2\x0c\x52\xcb\x4d\x2e\x04\xc3\x13\x46\xca\x5a\xc7\xd0\x32\x5f\x9b\x0d\x48\x6b\x18\x0d\x43\xee\xec\xac\x6e\x79\xc8\xc8\xb8\xe1\x9b\xe0\x63\x44\xfa\x83\x8d\xdd\xe7\xd5\xb2\xb1\x8d\xd3\x77\xe4\xe2\x6e\x58\x4e\xc0\xed\x47\xdb\x38\x72\xaf\x7d\xfe\xde\x6c\x53\x5a\xf2\xb6\x8e\x0e\xb4\xeb\xcf\x98\x74\xa8\xb0\xbc\x46\xc7\x7a\x40\x88\xb8\xfe\xde\xbb\x72\x48\x93\x4e\x0f\xb1\xd3\x66\x93\x8d\x06\xf5\x51\x94\x1e\x27\x04\x7b\x69\xdc\x0c\xd1\x31\x8a\x5b\x4e\x0c\x7f\x1e\x2d\x42\xbd\x7c\xbb\xc0\x44\x1c\x28\x98\x6d\x9f\xb4\xea\xa8\x79\xda\x30\x86\xa3\xd3\x11\xfb\xb4\xe1\x5f\x6e\xc6\xb5\x56\x48\x24\x36\x53\x7e\x1b\x15\x55\xc8\x42\x97\x07\x25\xad\x13\x15\xce\x89\x3e\x37\x32\xcd\x58\x0d\xd7\x1f\x4d\xfc\x34\xa5\xc6\x19\x3d\x1a\xa7\xd1\xee\x75\x41\xbc\x08\x43\xb5\xe0\x97\xc5\x2c\xf4\x9a\xfb\xb6\x9f\x1c\x75\xd4\x00\x49\x7c\x27\x94\x8a\x6e\x10\xe5\x1f\xe3\xb8\x4e\x42\x38\x56\xf7\xc8\x7a\x27\xcf\x23\xd8\x62\xa0\x65\x58\xe3\xfb\x8e\x06\x34\x52\xd4\xe4\x4b\xc1\x48\xd0\x16\xc2\x2a\x18\x0f\xb9\x75\xe1\xfc\x09\x0f\xad\xc4\x03\xec\xda\xe9\x32\x3b\x15\xc1\xb6\x37\x5d\x10\xc2\x6e\x6e\xb8\x8f\xad\xff\x5b\xe5\x6b\x57\xa8\x9b\xbd\x7e\xd3\x25\x4e\xa4\xed\xa4\x4b\x1b\xcb\x87\x3e\x6d\x9f\x2a\xc1\xe2\x6c\xa7\x76\xe8\x7e\xc5\x1a\x8d\x42\x23\x2f\xaa\xd6\x6d\x7b\x9c\x5d\x70\x07\x76\xfe\x55\x20\x04\x15\xe1\x08\x14\x8c\x50\x3b\x50\xcb\x23\x15\xbe\xb9\xbf\x09\x84\x22\x76\x42\x9b\xe1\x08\x72\xee\xee\xdd\x85\xd0\x5e\x21\x88\xf6\x04\x27\x38\xb8\xda\x96\x3e\xf1\xe5\x10\x0f\x49\x5b\x5f\x23\x9f\x4e\xd0\x78\xca\x82\x06\x42\x40\xfb\x54\x68\x59\x00\x17\x9a\x12\x47\x82\xde\xb1\x50\x2d\xa7\x3a\xdc\x48\x02\x5f\x90\x1c\xa5\x30\x1b\x3f\xdd\x59\xa6\x0c\xec\xd4\x80\x20\xb2\x52\x8b\x30\x49\x3e\x69\x2e\x62\xc6\xf4\xee\xba\x8e\x05\x69\x4b\x8c\xd5\x85\x28\x12\x8f\x56\xc2\x88\x4d\xac\x69\xd0\xa8\x1e\x41\xa6\xe9\x24\xa2\xb9\x55\x78\x0a\x95\x56\x68\x58\xe7\x21\x5d\x1b\x9d\xe0\x5d\x19\x8f\x2d\xb3\xbd\x73\x65\x0a\x57\x56\xf9\x72\x2c\x56\x9a\x66\xc1\xd9\x5f\xd6\x5e\x83\xd6\x7d\x50\xbb\x8b\x17\x54\xb0\xde\xce\xc7\xb4\x8b\xfd\x61\x0b\xfe\x46\xbd\x23\xa9\xce\xe7\xd4\x82\xc4\xeb\x29\xe6\xb6\x49\x9c\xb2\x76\xaa\x23\xa5\x35\x61\xef\x47\x02\x11\x35\xc1\x53\x61\xf7\xb9\x48\xbd\xcd\x8f\x74\xa1\xe4\x30\xf3\xbd\x46\xb3\xfe\xdd\xfc\x8b\xe3\x39\x6b\x04\x9b\xf6\xef\xde\x21\x73\x46\xa8\xb8\x7e\xba\xd7\xa7\x47\xfb\x8b\xc6\x27\x96\x05\xaa\xfb\x57\xe8\xb1\x33\x26\xa4\x59\x3e\xeb\xdd\x4b\x5f\xe0\xb2\x17\x1e\x61\x9b\xda\x70\xb6\xd8\x3f\xda\xa8\x97\xc8\xbd\xb1\xb9\x38\x0d\x0e\x50\xf8\x32\xf6\x53\x58\xff\xf7\xaf\x53\x51\x9e\xcf\x8c\x71\x20\x63\xc9\x27\xcc\x76\x98\x80\x5d\x3b\x7e\x88\x62\x23\x19\xb8\x08\x7f\xcf\x8b\xff\x02\x00\x00\xff\xff\x31\x36\x75\xf4\x04\x1d\x00\x00")

func depscloudApiV1betaManifestSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_depscloudApiV1betaManifestSwaggerJson,
		"depscloud/api/v1beta/manifest.swagger.json",
	)
}

func depscloudApiV1betaManifestSwaggerJson() (*asset, error) {
	bytes, err := depscloudApiV1betaManifestSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "depscloud/api/v1beta/manifest.swagger.json", size: 7428, mode: os.FileMode(420), modTime: time.Unix(1622949604, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _depscloudApiV1betaRpcSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xdf\x6f\xdb\xbe\x11\x7f\xcf\x5f\x71\xd0\xf6\xb0\x7d\x11\x38\x5d\xf7\x56\x60\x0f\x19\x36\x7c\x37\x20\x03\x8a\xa4\x7d\x5a\x0a\xe3\x44\x9d\x64\x36\x12\xa9\x92\xa7\xa4\x5e\x91\xff\x7d\x20\x25\xd9\x92\x2c\xf9\x97\x94\xb4\x46\xec\x27\xdb\x24\x4f\x77\xc7\xcf\x7d\x78\x77\xb4\x7f\x5c\x00\x04\xf6\x09\x93\x84\x4c\xf0\x01\x82\xf7\xb3\x77\xc1\xa5\xfb\x4e\xaa\x58\x07\x1f\xc0\x8d\x03\x04\x2c\x39\x25\x37\x1e\x51\x6e\x45\xaa\x8b\xe8\x0a\x73\x79\xf5\xf8\x97\x90\x18\xaf\x4c\x2e\x66\xb9\xd1\xac\xfd\x52\x80\xe0\x91\x8c\x95\x5a\xb9\x05\xd5\x5b\x50\x9a\xc1\x12\x07\x17\x00\xcf\xfe\x01\x42\x2b\x5b\x64\x64\x83\x0f\xf0\xdf\x72\x15\xe6\x79\x2a\x05\xb2\xd4\xea\xea\xab\xd5\xca\xcd\xfd\xe2\xe7\xe6\x46\x47\x85\xd8\x73\x2e\xf2\xc2\xae\x35\xaf\x75\x4c\x51\x25\x05\x26\xb4\x1e\x02\x08\x12\xe2\xc6\x47\x80\x40\xe7\x64\xbc\xd0\x7f\x47\x4e\xf9\x9b\x6a\xd1\x1d\x99\x47\x29\x68\x7e\x23\x2d\x57\x36\xfa\xe9\x86\x6c\xae\x95\x6d\x09\xf5\x03\xef\xdf\xbd\xeb\x7c\x05\xce\x77\x56\x18\x99\x73\xe5\x99\x6b\xb0\x85\x10\x64\x6d\x5c\xa4\x50\x4b\x9a\x35\xc4\xfb\x45\x56\x2c\x28\xc3\x0d\x61\x00\xc1\x1f\x0d\xc5\x4e\xce\x1f\xae\x22\x8a\xa5\x92\x4e\xae\xad\xcc\x75\x8a\xd6\xca\xdb\xdb\x4a\x76\xd0\x92\xf0\xdc\xf8\xf4\xdc\x7c\x68\x10\x51\x8c\x45\xca\xbb\x0d\x50\x50\x28\xfa\x9e\x93\x60\x8a\x80\x8c\xd1\x66\x3a\x3b\x4c\xa1\x58\x66\xf4\x4f\x27\x75\x8b\xe2\x17\x3d\x26\x04\x39\x1a\xcc\x88\xc9\xac\x01\x53\xbe\x3a\xf6\x28\xcc\x3c\xa8\x73\x34\xa4\xb8\xab\xb1\xf4\x46\x7e\x2b\xc8\x2c\xbb\x43\x86\xbe\x15\xd2\x90\xc3\x48\x8c\xa9\xa5\xce\x30\x2f\x73\x2f\xd7\xb2\x91\x2a\x09\x86\x1c\x3d\xa8\x4d\x42\x73\x2b\xff\x47\xd3\x2b\x24\x15\x93\x0b\xf4\xce\x70\xac\x4d\x86\x5c\x4d\xf8\xeb\xfb\xa3\x14\x66\xfd\x40\xea\x55\x5c\xb8\x7a\xff\xa5\xb1\xe5\x8c\x49\x77\xb3\xbb\xd1\xbb\x16\xf2\xe5\xa2\x29\xaa\x32\x71\xc5\x14\x99\x8e\x8a\xf4\x30\x9e\xf8\x8f\x5f\x72\x92\x2c\x51\xaa\x7e\xe6\x88\xd5\xeb\xcc\x11\x6f\x89\x23\x5a\x91\x7b\x20\x43\x5c\xfd\x28\xdf\xcc\xea\xdc\xe2\x79\xf5\x8d\x33\xfb\x6f\xbf\xfd\xf6\x7c\x15\x51\x4e\x2a\x22\x25\xe4\x61\x8c\xf2\xc9\xa0\xcb\x9c\x30\xad\x49\xe5\x77\xe2\x7f\x34\x65\x9d\x02\xbf\x34\x15\x3e\x13\x4c\xfd\x1a\x88\x90\x0e\x96\xba\xaa\x77\xcc\xfe\xb4\x20\xa8\xa7\x02\x5a\xab\x85\x44\xe7\x80\x27\xc9\x0b\xe0\x05\x41\x25\xae\x3f\xda\x5c\x8e\xbc\x25\xd8\xd8\x14\xd3\xd2\x55\x23\x2a\xf6\xb0\xcb\x4d\x03\x1d\x7b\x33\x1a\x79\x3e\x68\x03\xa9\x0c\x0d\x9a\xe5\x6b\x98\xb5\x37\x85\x74\x43\xf5\x05\x59\x84\x27\xe3\x10\x3e\x2d\x06\xe1\x33\x7f\xac\x5e\x67\xfe\xd8\x61\xd7\x99\x3f\xba\xfc\x61\x75\x61\xc4\xd8\x92\xe6\xae\x12\x72\x0a\xbc\xe1\x2b\x1b\x54\x98\x50\x54\xa9\x7d\xe6\x8f\xfa\x75\xe6\x8f\x1d\x76\x9d\x18\x7f\x1c\x55\xc2\x1c\xc1\x08\x65\x20\x9d\x64\x93\xe3\xcc\x01\xe7\x26\x07\xbc\xdd\x26\x47\x2b\x72\x0f\x64\x88\x63\xda\xa1\x9b\x4c\x51\x75\x19\x4f\x86\x30\xaa\xdc\xe1\xdc\x1c\xdd\x8f\x37\x4a\xac\xcc\x1e\xa4\x8a\xf6\x38\x5f\xdd\x34\x77\xbe\x96\xab\x2e\x81\x97\xb9\x14\x98\xa6\x4b\x30\x94\x6b\x2b\x59\x9b\xa5\x3b\x6c\xd1\xb0\x8c\x51\xb8\x8f\x33\xf8\xb4\x90\x16\x9e\xd0\xc2\x03\xe5\x7c\xaf\x2c\x39\x1d\x99\x20\x36\x3a\xf3\x27\xf5\xe7\xdb\x1b\x40\x0b\x76\x69\x99\x32\x0b\xa9\x7c\x20\xf8\x5d\xf2\xbf\x8a\x10\x50\x45\xee\xed\x0d\x86\xa0\xe3\x98\x0c\x58\x9d\xd1\xbd\xaa\xe5\x83\x2d\xf2\x5c\x1b\x1e\x38\xd5\x5f\x9f\xf8\x2a\x77\x16\x26\xdd\xe1\xcd\x6b\x28\x1f\x00\x25\x71\x39\x14\x7d\x34\xfa\x51\x46\x64\x3e\xdf\xde\xbc\x8e\x3d\x13\xb3\xd0\xea\x7e\xb8\x81\xe5\xf5\x6d\xae\xbf\x65\x0e\x8b\xf8\x5a\x2d\x9b\x84\x54\xab\xa7\xc3\xaf\x24\xd6\xe7\x97\x9b\x9e\x93\x61\xd9\x21\x19\x3f\x7f\xee\xdc\xdb\xa1\x9e\x21\x33\x9b\xb1\xf1\x88\x69\x41\x3b\x16\xb6\xd8\x60\x7d\xa8\x84\x4b\x6e\x18\xfe\xdc\x4b\xbf\xad\xb0\x1d\x61\x22\x75\x04\xec\x6d\x9f\xd0\xd1\xa0\x79\x7d\xc7\xe6\xf0\xa1\xd9\x94\x9a\x91\xb5\xae\xaa\x38\x42\xa1\x88\x18\x65\xba\x71\x4c\xd4\x4b\xd1\x18\x6c\xc3\x39\x90\x8e\x01\x36\xd9\xb7\x9f\x27\x9b\x90\xea\x27\xc6\x6d\xfb\x74\xc7\x86\x30\x1b\xbd\x5b\x89\xc9\xc5\xfc\x65\x3c\xbf\x60\xce\x5f\x48\xf4\x88\x4d\xf5\x5a\x59\x46\x2e\x06\x37\xf6\xf4\x30\xb1\xe5\xd6\x63\x04\x36\x06\xae\x90\x26\x35\xb8\xa3\xf9\x18\xab\x47\x11\x73\x99\x6c\x76\xad\xdc\xa6\x73\x99\xa2\xf5\xa3\x84\xa2\x84\xe6\x11\x72\x37\x6b\x9a\xd8\x6d\xa5\x0a\x53\x38\x8f\x27\x05\x0c\xff\xc2\x70\xa9\x7f\x9b\x31\xc6\xce\x2a\x5d\xda\xfb\x20\xde\xd1\xea\xc9\x8d\x4e\x0c\x66\x99\xcb\xa7\xea\xd6\xd6\xac\xe7\xb8\x5e\xe9\xb5\x91\x8c\xad\x1a\x62\x86\x72\x43\xd6\xed\x00\x60\xaf\x5c\x97\xb0\xc1\xd3\x42\x8a\x05\x3c\x11\x2c\xf0\x91\x00\x61\x15\xe8\x4b\x48\x0c\xe6\x8b\xea\xe1\x1d\xc7\xf5\xfe\xb2\x6b\x8c\x17\xe9\x3b\xcf\x1b\x95\xeb\x11\x6c\xdc\xf7\xdb\xba\x17\xc0\xdb\x0a\x33\x87\xa3\x6d\xb8\xa4\x1b\x4d\x56\x2f\x6c\x74\x4b\xed\x51\x96\x77\x9b\x60\x23\x2c\xdf\xec\x1e\xbe\x9c\xe5\xa5\xda\x47\x5a\x3e\xdd\x66\x4f\x10\x26\xaf\x83\x97\x11\x40\x99\x10\x21\x13\xb8\xeb\x55\x40\x76\x2c\xba\xda\x61\xf9\xd6\x32\x9e\xd2\x6b\xc7\x42\xad\x1d\xd8\xa3\x69\xe8\x10\xdf\x75\xb7\xfb\xf4\x7c\x37\x1a\x70\xe9\x66\xe6\x05\x47\x64\x4e\x7b\x5d\xfe\xf5\xfa\x79\xe2\xb4\x6d\xe8\x86\x6e\x20\x53\x09\x69\xb8\x6c\xec\xb8\xd0\x8f\x61\x14\xf9\xed\xc3\xf4\x63\xbf\x43\xfb\xf4\x6f\x6e\x6b\x4b\xda\xea\x7f\x14\x37\x5e\x11\x10\x5a\x31\x4a\x05\xeb\xa7\x40\x46\x8c\x0e\x85\x80\xa1\x2e\xd8\x9b\x48\x8a\x25\x2f\x0f\x4a\x45\xcb\x1d\x00\xa9\x60\xf5\x8f\x0d\x90\x2e\x1b\x4d\x48\x91\x91\x62\x9d\xa2\x56\x9e\x8b\x01\xd5\x76\x5f\xf6\x01\x71\x9a\xaa\xaf\x8c\x96\x63\x01\x71\x0d\x86\x62\x32\xa4\x04\x01\xeb\x12\x13\x6b\x4c\xae\x8a\xa1\xda\x25\x7f\xaa\xff\x91\xa2\x0d\x84\x06\x95\x58\xfc\x79\x00\x2c\xd5\xc4\xb9\xd0\xca\xb2\x41\xa9\xba\x1d\xfd\x43\x61\x5b\x3f\x79\x2d\x10\x3c\x3f\x50\x04\xe1\xb2\xae\x41\x9c\xcb\x06\x14\xb2\x42\xe7\x53\x1c\x88\xfb\xa2\xb5\xc7\x84\x52\x05\x40\xae\xaa\x17\xa7\xb4\xa1\x6f\x05\x59\xe7\xec\x1a\x75\x16\x14\x51\x44\xd1\xdb\x8e\xc2\x6e\x88\x40\x39\x1e\x92\xad\xdc\x96\xfa\x48\xb3\x0b\x99\x43\x48\xfc\x44\xa4\x80\x9f\x74\xe5\x45\x3b\x83\xbf\x93\xc0\xc2\xd2\xbd\xf2\x54\x27\x2d\x08\x69\x44\x91\xa2\x69\xad\xbd\x04\x36\xb8\x52\xdc\x29\x1d\xa2\xf5\x1c\x4c\xa9\xab\x39\xa5\x85\x48\xc6\xb1\x14\x45\xca\xbd\xa1\x7c\x47\x68\xc4\xe2\xb6\xdc\xc5\x31\x71\x2c\x50\x09\x1a\x6c\xaa\x87\x5a\xa7\x84\x6a\x6b\x6e\x3c\x8f\x37\x9b\xd6\x47\xd4\x08\xed\x56\xe1\xba\x7d\x76\xa8\xf8\xbe\x0e\x47\x9f\x6c\xb6\x73\xbd\x41\x61\x63\x04\x57\xb9\xef\x81\x52\x07\x6a\xc5\x6d\xf9\x44\xbd\xf7\xe3\x33\x7e\xb3\x81\x9f\x9d\xfa\xb6\x81\xf7\x13\x6b\xa6\x3d\x6a\xec\x01\x44\xfd\xe4\x0e\x5b\x2f\x16\x7f\x1d\x9d\x4e\xa1\x4f\x30\xbe\x0c\xf1\xd7\xde\xe3\x32\x83\x5f\xf7\x4a\xbc\x77\x5f\x77\x5f\x9d\x6e\x4f\xd8\xb6\xdf\x5a\xbf\xe5\x9c\xe1\xba\x82\x40\x3b\x73\x6f\xf6\x93\x5d\xe2\x2a\x13\xa9\x7c\x0b\x59\xaa\xd2\x87\x52\xab\x0a\x0f\x52\x89\xb4\x88\xc8\x5e\xde\xab\xb0\x60\x9f\x8a\x69\x86\x54\x66\xd2\xf9\x99\xf5\xe5\x1a\x51\xd2\x25\x72\x2a\x6a\x80\x4a\x92\xed\xcf\x10\x9a\x35\xeb\x88\x48\x59\xff\x2f\x7c\x8a\x34\xfa\xe0\xca\xb3\x0c\x84\x91\x4f\x2f\x85\x40\x61\xbd\x3b\x21\xf3\xec\x03\xcd\x33\xc1\xef\x8c\x53\x86\xd1\x24\xc4\xdb\x75\x3a\x4d\x5c\xd7\xae\x97\x5a\x1d\x00\xee\x26\x8c\xf6\x49\x86\xb1\xae\x87\x4a\x98\xb6\x1d\xe9\x7f\x29\x72\xf1\x7c\xf1\xff\x00\x00\x00\xff\xff\xff\xa1\x20\x86\xc2\x40\x00\x00")

func depscloudApiV1betaRpcSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_depscloudApiV1betaRpcSwaggerJson,
		"depscloud/api/v1beta/rpc.swagger.json",
	)
}

func depscloudApiV1betaRpcSwaggerJson() (*asset, error) {
	bytes, err := depscloudApiV1betaRpcSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "depscloud/api/v1beta/rpc.swagger.json", size: 16578, mode: os.FileMode(420), modTime: time.Unix(1622949605, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _graphstoreApiV1betaGraphstoreSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x6d\x6f\xdc\x36\x12\xfe\xee\x5f\x31\xa7\x3b\x20\xf6\x75\x4f\xeb\x38\x87\xfb\xe0\xc2\xc0\x05\x6d\xd2\xa6\x48\x53\x23\xb1\x3f\x45\x86\x4d\x49\xa3\x15\x6b\x89\x54\x48\x6a\x1d\x35\xf0\x7f\x3f\x0c\x29\xad\xb4\xf2\xae\x5f\xb2\x76\x12\x5f\x68\x20\x88\x2d\x51\xc3\x67\x5e\x9f\xa1\x28\xed\x7e\xda\x02\x08\xf4\x05\x9b\xcd\x50\x05\xfb\x10\xec\x85\xbb\xc1\x84\x8e\x71\x91\xc9\x60\x1f\xe8\x3c\x40\x60\xb8\x29\x90\xce\xcf\x14\xab\x72\x6d\xa4\xc2\x29\xab\xf8\x74\xfe\x34\x46\xc3\xa6\xfd\xd1\xb0\x52\xd2\x48\x2b\x02\x20\x98\xa3\xd2\x5c\x0a\xba\xb0\xfd\x15\x84\x34\xa0\xd1\x04\x5b\x00\x97\x76\xa2\x44\x0a\x5d\x97\xa8\x83\x7d\x78\xef\xae\x62\x55\x55\xf0\x84\x19\x2e\xc5\xf4\x4f\x2d\x05\x8d\x3d\xb1\x63\x2b\x25\xd3\x3a\xb9\xe5\x58\x66\x72\xdd\x6b\xb0\x04\x75\x71\x18\x20\x98\xa1\x19\xfc\x49\xd6\xa8\xcb\x92\xa9\x86\x40\x1f\x6b\x4c\xc1\x48\x28\xb8\x36\x90\x32\xc3\xe0\x82\x9b\x9c\x0b\x30\x39\x82\xd3\xb7\x55\xd5\x5e\x29\x2b\x54\x16\xca\xab\x94\xae\xfe\x85\xa6\x7a\x47\xa3\x4e\x5f\x73\x6d\x86\x23\x15\xea\x4a\x0a\x8d\x7a\x69\x6a\x80\x60\x6f\x77\x77\x74\x08\x20\x48\x51\x27\x8a\x57\xa6\x35\xe5\x73\xd0\x75\x92\xa0\xd6\x59\x5d\x40\x27\x69\x08\xc4\xa9\x91\xe4\x58\xb2\x2b\xc2\x00\x82\x7f\x28\xcc\x48\xce\xdf\xa7\x29\x66\x5c\x70\x92\xab\x5b\xfb\x10\xd0\xb7\xad\xc8\x60\xe9\xc2\xcb\xc1\x5f\x97\xc3\xb9\x82\x14\x33\x56\x17\xe6\x66\xdc\x02\x6a\x81\x1f\x2b\x4c\x0c\xa6\x80\x4a\x49\x75\x7f\xf0\x55\x2d\x0c\x2f\xf1\x05\x49\xbd\x06\xf8\xd6\x0a\x15\x82\x8a\x29\x56\xa2\x41\xd5\x07\x96\xfb\x19\xe9\x23\x58\x69\x93\xa0\x62\x0a\x85\x19\x23\xe6\x56\xc9\x0f\x35\xaa\x66\x7c\x4a\xe1\x87\x9a\x2b\xa4\xa8\xc8\x58\xa1\x71\x74\xda\x34\x95\x95\xab\x8d\xe2\x62\x16\xac\x33\xf4\x5a\x34\x33\x3c\xd5\xfc\x2f\xbc\x7f\x40\x5c\x18\xa4\xc2\x30\x3a\x9d\x49\x55\x32\xd3\x0e\x78\xb6\xf7\x59\x80\x8d\x3c\x47\xf1\xad\x98\xf0\x9c\x8b\xf4\x8b\x60\x59\xfc\x7e\x32\x08\x3f\xc3\x66\xe3\xc0\x1b\xd4\x8e\xfe\xfa\x93\xad\x91\x46\x41\x8a\x05\x1a\xbc\xb1\x7c\xb9\x61\xae\x80\x65\x4a\x96\x77\x2e\x5f\x3f\xbb\x79\x1e\x43\x01\x73\x50\x7d\x09\xeb\x7e\xd6\x44\x7c\x2c\xd3\x2b\x61\xed\x22\x7e\xd5\x99\x41\xc0\x1b\x55\x8f\xe3\x7d\x33\x47\x7d\xa8\x51\x9b\xdb\xa8\x7b\x3f\x29\x53\xd5\x37\xd3\x3d\x17\x1a\x55\x4b\xf8\x5c\x18\x79\xe7\x7c\x39\xac\x1f\x07\xdb\x1f\xd6\x9e\xec\x17\x3f\xdf\x6c\xa6\x58\x2f\x7d\x99\x34\xd9\x1a\x58\x6b\xb9\x65\x9e\x7e\x22\xe6\x08\xcf\xb1\xb9\x9c\x0a\xe4\xb3\x3c\x96\x4a\x4f\xe9\xd8\x5d\x9b\x69\x4b\xa9\x1b\x75\xd3\x6f\xba\xf9\xf7\x1e\x45\x96\x2d\xe0\xfa\x5c\xeb\x7e\xd6\xe4\x5a\x17\x62\xab\xf3\x8d\x56\x74\x77\xcb\xb7\x51\x27\xb6\xb6\x8d\x8d\x1b\x83\x77\xed\x19\x85\x4c\x31\xa4\x12\x10\xd2\x2c\xa7\xb5\x2a\xc6\xf2\xaf\x84\xd8\xf1\xdb\xd7\x53\x85\x5a\xd6\x2a\x41\x20\x39\x60\x72\x66\xa0\x16\xfc\x43\x8d\x45\x03\x3c\x45\x61\x78\xc6\x51\xdb\x94\x20\xb9\x20\x33\x97\x1e\xa8\x38\x2b\xf8\x5f\x98\x46\xc2\x2e\xb1\x13\x59\x40\x5c\x67\x19\x2a\x28\x51\x6b\x36\xc3\x10\x8e\x72\xae\xc1\xe9\x0a\x65\xad\x0d\x24\x52\x18\xc6\x05\x30\x03\x05\x32\x6d\x22\x21\x05\x42\x14\x4c\xa3\x00\x92\x9c\x29\x96\x18\x54\x74\x1d\x42\xc1\x34\x2d\xcc\x67\x25\x0a\xd3\x4d\x7a\xfc\xf6\xf5\x13\x0d\x64\x76\x27\x4e\x61\xa5\x50\xa3\x30\x91\xa0\xd3\x59\x5d\x14\x0d\x7c\xa8\x59\x41\x98\x53\xa7\x51\x7b\xa9\xc5\xbe\xcd\x34\x70\x11\x89\x33\x12\x31\x9d\x49\x39\x2b\xda\x1b\x04\x71\x9d\x85\x3f\xd7\x2e\xbd\xcf\x76\x1c\x02\x7b\xb9\xce\x65\x5d\xa4\x10\x23\x10\x6c\x48\x98\x90\x82\x27\xac\x00\x72\x56\x24\xb6\x31\x9c\x85\x13\x52\x26\x25\x25\xa3\x20\x8c\x02\xe0\xda\xde\x55\x60\x49\x82\x95\xc1\x74\x27\x8c\x44\x24\x5e\x09\xa8\x48\x3f\x9e\xe0\x04\x0c\xb2\x52\x43\xad\x6b\x46\x88\x2b\x85\x89\x2c\x2b\x5e\x60\xcf\xee\x31\x17\x4c\x35\xc0\x8a\xc2\x42\xd7\xce\x33\x26\xc7\x26\x6a\x33\x0b\xb8\xa1\xea\x55\x6b\x0b\x8d\xae\x21\xeb\xe2\x47\x6b\xad\xe7\xa2\x09\xe1\x57\x79\x81\x73\x54\x13\xc2\x4a\xb6\xd3\x70\x91\xf3\x24\xb7\x97\x98\x1c\x23\x61\x53\x0f\xe1\x2c\x37\xa6\x3a\x9b\xb8\xff\xf5\xd9\x04\xa4\x02\x21\xc1\x9d\x9d\x00\xb9\x28\x61\x02\xa4\x8d\x1c\x8b\x58\xa3\x81\xba\x02\x66\xb1\x45\xd4\x9d\xcc\x51\x39\x88\x25\xab\xb4\xb3\xb6\x9d\xd1\xc8\x2e\x1c\x60\x90\xc4\xc0\x34\x64\xb2\x28\xe4\x85\xde\x27\xe3\xfc\x13\x5e\x65\xfd\x94\x64\xc0\x4a\xc9\x39\x4f\x31\x5d\xa0\xa2\x83\x4c\xeb\xba\xc4\x34\xa4\x0b\x9e\x0b\xf8\xf5\xe8\xe8\x10\x7e\x79\x71\x04\x52\x74\xe1\xe1\xe2\xa2\xe1\x58\xa4\xc0\xe0\xfd\xd8\xc5\x47\x4d\x85\x27\xef\x4f\x22\x01\x30\x67\x45\x6d\x2d\xd7\x5a\xda\x25\x9f\xd5\xbd\xbd\xab\x03\x4c\xb8\xda\xe5\xe6\xeb\x6f\xec\x68\x60\x0a\xc9\x35\xf2\xc2\x31\x48\xc2\x12\x8a\x58\x29\xcf\xeb\x8a\x0a\x5d\x5d\x18\x0d\x31\x23\x7e\x71\xd0\x68\xc2\xe3\xb7\xaf\xad\xf4\x9c\xcd\xad\xf9\xcb\x81\xdf\x53\xe7\x78\xd6\x81\xa1\xdf\xe7\x92\xa7\xc0\x44\x43\xd7\x3a\xd1\x36\x2c\x15\x66\x52\xe1\xa4\x1b\x49\x02\x98\xe1\x31\x2f\xb8\x69\x40\x20\xa6\xd6\xe6\x31\x82\x4d\x0d\x35\xa7\x04\x05\x82\x91\xe4\x4c\xcc\xd0\x9e\xb5\x11\x15\xc2\xf6\xb1\x46\x68\xef\x83\x91\x22\xe4\x34\x0a\x7a\xe7\x35\x26\xd8\xcc\x02\x8f\x15\xb2\x73\x8a\xee\x56\x42\xb8\x43\x2e\x7b\x23\x0d\xee\x83\xa1\x0c\xcf\x6a\x91\xb8\xd0\x20\x0c\x6d\xf4\x27\xb5\x52\x28\x4c\xd1\x00\x9b\x33\x5e\xb0\xb8\x58\xc4\xa9\xcc\x32\x9e\x70\x56\xb4\x95\x23\xae\x33\x50\x48\xf5\x00\x27\xc0\x44\x4a\x81\xdd\x0a\xa9\xc9\x84\x14\xbd\x7d\x40\xc5\x38\xe3\x42\x10\x1c\x22\xeb\x48\xd0\x99\xd0\xf9\x99\x55\x5c\x87\x89\x2c\x6d\xbe\xbd\xb3\xa1\xa4\x41\x9a\xdc\x85\xa6\x18\xc7\x39\x6c\x93\xe0\x1c\x01\xcb\xca\x34\x6d\xec\xed\x40\xc9\x67\xb9\x81\x18\x23\x61\x67\xa7\x59\x80\x97\x55\x81\x54\x89\xac\xff\x41\x57\x98\xf0\x8c\x27\xa0\xb1\x64\xc2\xf0\x44\x5f\x61\xb5\xaf\x75\xe7\xa0\x67\x01\x1b\xe0\x37\x50\xc0\xef\x94\x2d\x31\x02\xa3\x74\xe0\xe9\xa0\xaa\xc3\xb8\xa8\xb7\x75\x94\xc5\x72\x8e\x9d\x01\xda\xa0\x79\x38\xe5\xef\x95\x20\x2d\x99\x7b\x82\xf4\x04\xe9\x09\xd2\x13\xa4\x27\xc8\xef\x94\x20\x7b\x16\xf0\x04\x39\x32\x8d\x91\x9e\x1e\x3d\x3d\x7a\x7a\xf4\xf4\xe8\xe9\xf1\x7b\xa5\xc7\x8e\x03\xbe\x2f\x72\x7c\xf8\xcd\x8a\x73\x2e\xd2\xcb\xaf\xf2\x98\xcf\xe3\xd8\x93\xf0\xcf\xf9\xdc\x62\x3b\x62\xfd\x63\x21\x1b\x6f\x45\xdc\xb1\x4c\xf8\x27\x8e\x1e\xd3\x13\x47\x0f\x5f\xde\xec\x6d\xc7\xe5\xbd\xd8\xaf\xb8\x0d\xfb\x28\x2a\x9e\xdf\x85\xbd\x6d\xd9\xeb\x82\xcb\xef\xc2\xfa\x55\xb4\x5f\x45\xfb\x55\xb4\x5f\x45\xfb\x55\xf4\xb7\xbd\x8a\xf6\xbb\xb0\x7e\x17\xd6\x13\xa4\x27\x48\x4f\x90\x9e\x20\x3d\x41\x5e\xcb\x02\x9e\x20\x47\xa6\xf1\xbb\xb0\x9e\x1e\x3d\x3d\x7a\x7a\xf4\xf4\xf8\xfd\xd2\xa3\xdf\x85\xed\xa5\xdd\xe7\x36\x85\x91\xe3\x17\xc6\x8c\xfc\x8a\xfb\x14\xcf\xfc\x46\xc5\xff\xd5\x46\x85\x0b\x2f\xbf\x4d\xe1\xdb\x4c\xdf\x66\xfa\x36\xd3\xb7\x99\xbe\xcd\xfc\xb6\xdb\x4c\xbf\x4d\xe1\xb7\x29\x3c\x41\x7a\x82\xf4\x04\xe9\x09\xd2\x13\xe4\xb5\x2c\xe0\x09\x72\x64\x1a\xbf\x4d\xe1\xe9\xd1\xd3\xa3\xa7\x47\x4f\x8f\xdf\x2f\x3d\xfa\x6d\x8a\x5e\xda\xe7\x6d\x53\x2c\x3e\x75\x7a\x50\xaf\xfa\xcf\x88\xee\x22\xf6\xb9\x68\x86\xbb\x14\x1d\x72\x19\xff\x89\x49\xff\x12\x0e\x0d\xaf\x50\x19\x3e\xda\x42\x08\x16\x14\x3d\xda\x58\xb8\xc6\x02\x9e\xbe\x3d\x7d\x7b\xfa\xf6\xf4\xed\xe9\xfb\x21\xe8\x7b\xe5\x66\xa3\x23\xd1\x3b\x94\xe8\x11\x45\x5d\x57\xbe\xef\x8b\x7c\xb7\xc6\x24\x38\xfc\xe8\xef\xa5\x19\xcf\x9e\x8b\xe6\xac\xab\xe1\x9a\xd2\x83\xa9\x98\x1b\x45\x71\x78\xcd\xec\x5d\xfe\xb3\x42\xb6\x5e\x03\x16\x09\x4a\x56\x5b\x30\xdc\x24\xf1\xb5\x1c\xb3\xa0\x14\xf2\xec\x61\x17\x34\x05\x8f\xed\xdc\x6d\xad\xd0\xa0\xeb\xaa\x92\xca\x96\xc5\x8a\x25\xe7\xd3\x5a\xd0\x7f\x54\x0c\x5d\xba\xeb\x2e\x02\x5d\xf1\x96\x19\xd4\xc6\x25\x4e\x17\xc2\x9a\x32\x94\xa5\x29\x77\xf1\x0c\x33\x14\xa8\x98\xb1\x08\x4c\x2e\x53\xdd\x61\x23\x99\xd6\x7e\x84\xe8\xc5\x47\x46\x01\x02\x4f\xf7\xe1\x90\x26\xa4\x20\x6e\xe7\x66\x0b\xf5\xb9\x80\x9f\x7e\xf8\xc1\x8e\x27\xe3\xbe\x94\x12\x32\x29\xe1\x00\xc2\x30\xfc\xd1\x1d\x23\xa1\x4c\x34\xed\x5f\x4c\x34\x21\x89\x7b\xa9\x64\xb9\x9d\x49\xb9\xd3\x1e\x0f\xc3\xd0\xfd\xc2\x33\xd8\xa6\x41\xc7\x76\xaa\x23\xb9\x1d\xd5\xbb\xbb\x7b\xff\xa1\xa1\x3b\xf0\xc9\x8d\x19\x0c\xbf\x1c\x42\xdd\xbb\x01\xea\x6f\x6c\xce\x6e\x83\x15\x0e\x2c\xd7\x90\x80\x6b\x31\x72\xbd\xfd\x52\xca\x30\x29\x98\xd6\x43\x74\x4e\x2c\x8d\x70\x28\x06\xa3\x7e\x1c\xc0\x86\x0e\xf7\xb3\x1b\x70\x1f\x36\x26\x97\x62\x81\xdc\x89\x7f\x29\xe5\x76\x18\x52\xdd\x6a\xed\xea\x50\x6f\xef\x2c\x1b\xda\x2a\x70\x15\x3f\x9d\x7e\xe5\xe0\xff\xfc\xe2\xdd\x4f\x6f\x5f\x1d\x1e\xfd\xf1\x76\x67\xbf\xd3\xa0\xf7\xc0\xe0\xfa\x56\xc2\x00\xf8\xbf\x6f\x00\xfe\x8b\xec\x30\x5b\xd0\xfb\x07\xe0\xbc\x59\xc5\xe1\x4b\x29\x3f\x85\x61\x78\xd9\x9e\x66\xa2\x99\x10\x31\xd1\x98\xca\x95\xf2\xdf\x99\xd2\x39\x2b\x48\xa7\x01\x86\x85\x12\x2b\x25\x76\xe2\x78\x36\x12\x76\x2c\xca\x5e\x9c\x9d\xcc\x3a\xd6\x8e\xfa\xdb\x01\x08\x5e\xf4\xee\x1b\xcc\x61\xfd\x44\x7d\x93\xd5\xad\x4b\x97\x8e\xc7\x21\x6e\xa0\x1a\x27\xee\x05\x2f\x0a\x3a\xd1\x3e\x54\x42\xe5\x3e\x12\x4f\x56\x54\xf4\x29\xb5\x76\xf6\xb6\x54\x48\x04\xf5\x84\xfa\x87\x45\xb5\xa0\x4a\x42\x56\xa5\x03\xce\xb2\x91\x58\x64\xab\x28\x9a\xae\xdf\xb9\xd2\x1f\x2e\x08\x0f\x58\x66\xd0\x71\x81\x6d\x3b\x9f\x4c\x9f\x44\xa2\x2d\x15\xdd\x14\xae\x8b\xc2\xd6\x9b\x51\x90\x49\x19\xc6\x4c\x59\x74\x1f\xa7\x4d\xf8\x57\x14\x38\x7d\x5c\xf3\xe1\x1a\x23\x2b\x3c\x0a\xec\x59\x1b\x0e\x91\xf8\xed\xdd\x1f\x6f\x22\x71\x70\x70\x70\xe0\xac\x45\x7f\xf7\x8d\xac\xe3\x17\x49\x41\x07\xae\xdc\xba\x3e\xa5\xd6\x6d\x7d\x54\x38\xab\x0b\xa6\x22\x71\xf5\x12\x3a\x9d\x62\x5f\x34\x27\x80\x65\x8c\x69\xda\x97\xcf\x49\x5b\x7d\x45\x24\x06\x35\x2e\xb3\x80\xcf\xfe\x4b\x90\xcf\xda\x16\x71\x51\xe4\x87\x26\x08\xbb\x60\xde\xef\x42\x95\x8c\x4d\xf1\xdb\xf7\x59\x19\x2f\xb0\x4d\xdc\x2e\xb8\x0f\x51\x69\x29\xfa\x98\x69\x17\x04\x19\x57\xda\x9c\x5a\x0b\x1d\xc0\xd3\x1f\x47\x67\xc9\x0f\xdd\xc9\xbd\xa5\x4a\x40\x4b\xd7\x6e\x70\x14\x58\xd4\x51\xb0\x0f\x51\xb0\x2a\x6e\x96\x81\x85\x0e\x4a\x14\x4c\x7a\x01\x16\xc6\x1b\x56\x3a\x21\xf5\xee\xee\xb3\xc4\x41\xb0\xbf\xe3\x60\x24\x41\x5a\x3f\x70\x00\xf1\x55\xd6\xb6\x15\xcb\xd6\x77\x76\xe4\x1a\x2e\xb0\x28\xfe\x75\x2e\xe4\x85\xb0\x71\x9b\x33\x4d\x2b\x8b\x5a\x1b\x59\x82\x0b\x8f\x65\xe7\x4e\x1c\x51\x8e\x3c\xee\x92\x67\x30\x0d\xb9\x54\xcc\x80\x39\x87\x46\xe2\xcc\x86\x4e\xe7\xd1\x5c\x16\xa9\x73\xe7\x60\x26\xbb\xa8\x69\x23\x01\xda\x95\x47\x1b\x08\x91\xb0\x62\x16\x3e\x87\x6d\x8a\xff\x4e\x95\x2b\x9d\x75\xb7\x78\x3a\x79\x7f\xb2\xb3\xbf\x89\x9f\x96\xc5\x2d\xb9\xca\xea\xe3\x64\x3c\x0d\xf7\x9e\xee\xe9\x28\x68\xad\x1e\x2c\x3d\x20\xb8\xf4\x78\xd8\x06\x6b\x6c\x1c\x09\x58\xd5\xbd\xad\x6c\xfb\x12\x99\xae\xed\xfa\x56\x7d\xf8\xc4\xfa\x8f\x9e\x18\x4a\x6d\x6d\xff\x39\x80\x52\x34\x8c\x17\x57\x9e\x42\xec\x2e\x65\x4a\xb1\xe5\x5b\x2d\x01\x37\x58\x8e\xc7\xaf\x7d\x1e\x6f\x78\x4f\x63\xf5\x03\x78\x2b\x1f\xe4\x6c\xfd\xf4\xce\x28\x64\xe5\xc6\xde\x9a\xa9\x2a\x39\x7d\x18\xcb\xd3\x7a\xe1\x81\x44\x6f\xe0\x54\x8b\x4a\x1b\x66\xea\xb5\x8e\x7d\x7c\x31\xb1\xea\x7b\x5b\x36\x08\x0a\x21\xd3\xab\x0f\xdf\xde\x97\x8a\xed\xa3\xb4\x14\x17\xab\x35\x1c\x58\x1b\xd3\xd9\x43\x03\x79\x91\xce\xd6\x01\xb9\x69\x65\xb7\x64\x6f\x40\x91\xb0\x4a\xd7\x05\x33\xa8\x01\xdd\xc2\x97\x58\xcb\xde\xf6\x50\x58\xca\xb9\xe5\xef\xee\x4b\x9e\x52\x66\x58\xcc\x74\xb7\x94\x5c\xed\xc9\xf6\x29\xe3\xf5\xae\x5c\x71\xad\x55\x68\x03\xe7\x13\xc2\xd3\x73\x6c\x36\x58\x80\xaf\xf4\xa5\x91\x0f\x21\xf5\x01\x44\xda\x2f\x8f\x19\xc9\xbc\x43\xb6\xde\x18\x36\xe4\x20\xdd\xf7\x25\xc0\xb4\x96\x09\x6f\xef\x91\xc5\x68\x2e\x10\x05\xd8\x14\x5c\x19\x1b\x74\xf9\x4b\x5e\x18\xdc\xa8\xee\xdf\xbb\x92\x8b\xef\xa1\xec\xf1\x51\xd7\x56\xb7\xef\x0a\x28\xb4\x37\x07\xdb\x1b\xae\x9a\xa7\xa8\x30\x05\x97\xdf\x2b\x94\x5c\xfa\x10\xb4\x4d\x2a\x19\x7e\x34\xa7\x83\xcf\x98\xfa\x8c\x8a\xef\x8b\xe1\x6a\x87\x8f\xa2\x7a\xe8\xb1\xe5\x5a\x58\x70\x6d\x30\x5d\xbc\xc7\x60\x2b\xdf\xca\xc8\xee\x5e\xaf\xd8\x94\xba\x6e\x17\xd7\xab\x4c\xff\x78\xcc\xdd\xd9\xaa\xaf\x23\xb4\x1c\x22\xed\xed\xea\xc8\xee\x80\xd0\x6a\xca\xd6\x9a\x4a\x72\x61\x88\x7d\x8c\x04\x6e\xae\xb5\xbd\xbe\xa7\xf6\xe1\xce\x3e\xb8\xee\xa6\x6d\xf7\xc2\x51\x86\x26\xc9\xad\x6e\x8b\xd7\x96\xec\xaa\xdf\xea\x3d\xa1\x55\x3e\x53\x69\x81\xda\x1e\x4d\xb9\xc2\xfe\x06\xfb\x9a\x5b\xcd\xa3\x6f\xc9\x7a\x60\xa8\xa2\xbd\x19\x91\x20\xb7\xcd\x00\x8a\x94\x90\x5a\x27\xad\x01\xb8\xf4\x56\xd6\x17\x81\x67\x45\x32\x73\x4b\x7c\xd9\x98\x89\x1e\x28\x4d\x5a\xc6\x1b\x26\xcb\x6d\xf4\x1c\xd0\x8e\x4b\x85\x01\xf9\x5c\xe4\x28\x20\xe3\xc2\xae\xff\x17\x66\xb8\xcb\xad\xfd\x71\xd2\x2c\xd7\x3d\x9a\x74\xce\x14\x47\xd3\x90\x15\x2f\x58\xa3\x07\xd6\x4e\x98\x80\xd8\x6d\x7f\x61\x0a\x75\x75\x53\x56\xde\x07\x17\x5e\xfd\x3c\xc2\x07\xf0\xd6\xa2\x8a\x6f\x56\xd8\x16\x2a\x83\x42\x53\x2b\xa1\x47\xd1\xba\x68\xa4\xed\x13\x0f\xab\xad\xb7\x5c\x87\xee\x6c\xb0\x47\xd8\x5b\x92\xca\xc3\xde\x12\x85\xe1\xa4\x98\xdb\x87\xb7\xef\x7e\xae\x34\xd5\xe0\x8b\x0c\xfd\xba\xf1\x56\x40\x36\xe0\xee\xde\xd8\xd7\x2f\x1a\xdd\x97\x9d\x52\x75\x5a\x3c\xe0\x70\xed\xaa\x71\xf8\x9d\xa1\x77\x5a\x32\x1e\x29\x36\x47\xa5\x6f\xb3\xe0\xbc\x31\x06\xd4\x95\x30\xba\xd9\xa7\xe3\xde\x63\xa5\x4f\xd5\x55\x70\x77\x91\x3c\x7e\x61\xf7\x46\x2f\x8d\x8d\x32\x5c\xcd\x0c\xdc\x06\x0c\x8c\x1b\xc9\x0a\x68\x95\x6f\xf7\xe3\x75\x24\xba\xb5\xdd\xba\xfe\x77\x8b\xfe\x5d\x6e\xfd\x2f\x00\x00\xff\xff\x39\xac\x73\xdd\xec\x7f\x00\x00")

func graphstoreApiV1betaGraphstoreSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_graphstoreApiV1betaGraphstoreSwaggerJson,
		"graphstore/api/v1beta/graphstore.swagger.json",
	)
}

func graphstoreApiV1betaGraphstoreSwaggerJson() (*asset, error) {
	bytes, err := graphstoreApiV1betaGraphstoreSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "graphstore/api/v1beta/graphstore.swagger.json", size: 32748, mode: os.FileMode(420), modTime: time.Unix(1622949605, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v1alphaDepsDepsSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xc1\x6e\x82\x40\x10\x86\xef\x3c\xc5\x64\xdb\xa3\x91\xd6\xde\xbc\xf5\xd0\xa7\x68\x1a\xb3\xc2\x80\x63\x60\x67\x33\x3b\xd8\x10\xc3\xbb\x37\x8b\x44\x57\x23\xd1\xa4\x17\x20\x33\xdf\xff\xcf\xfe\x30\x1c\x33\x00\x13\x7e\x6d\x5d\xa3\x98\x35\x98\xd5\xf2\xcd\x2c\x62\x8d\x5c\xc5\x66\x0d\xb1\x0f\x60\x94\xb4\xc1\xd8\x2f\xd1\x87\xa2\xe1\xae\xdc\x58\x4f\xf9\xe1\xdd\x36\x7e\x67\xf3\x58\x1d\x2f\x4b\x2f\xac\x3c\x3a\x00\x98\x03\x4a\x20\x76\x51\x37\x3d\x82\x63\x85\x80\x6a\x32\x80\x61\x9c\x53\xb0\x0b\x5d\x8b\xc1\xac\xe1\xfb\xa4\xb2\xde\x37\x54\x58\x25\x76\xf9\x3e\xb0\x8b\xec\xcf\xc8\x7a\xe1\xb2\x2b\x9e\x64\xad\xee\x22\x78\x3c\x8d\x29\xb1\x22\x47\x91\x0b\x97\x54\xe3\x61\xb7\x5d\xf5\xe9\xfa\x73\x31\x86\xed\xfd\x98\x95\xb7\x7b\x2c\x74\x0a\x73\xc2\x3d\x8a\x12\x86\x84\x9e\xf8\x4d\x27\xcd\x55\x35\xf1\x09\x2a\xe4\x6a\x73\x6e\x0d\x8b\x8b\xf6\x60\x9b\x0e\x1f\x08\x17\x69\xaf\x62\x69\xad\xc6\xee\xb6\x57\x4c\x4c\xb3\xf4\x3e\x8d\x30\xd2\x39\xa5\x16\xbf\x44\x58\xfe\x13\x11\x6f\x0c\x9e\xce\x57\x70\x39\x1b\x8f\x9c\x62\x5c\xbb\x99\x7c\xe4\xf4\x63\x75\xdf\xb5\xc5\x10\x6c\xfd\xe8\xbd\xdd\x95\x96\xa8\x96\x9a\x30\x27\xb5\x22\xb6\xbf\x3e\x11\x29\xb6\xb7\x3c\x80\x79\x15\xac\xa2\xe2\x25\x4f\x76\x2b\x4f\x57\x2a\xe1\x87\xb9\xef\x14\xff\x83\x6c\xc8\xfe\x02\x00\x00\xff\xff\xa6\xcd\x5e\xf0\x87\x03\x00\x00")

func v1alphaDepsDepsSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_v1alphaDepsDepsSwaggerJson,
		"v1alpha/deps/deps.swagger.json",
	)
}

func v1alphaDepsDepsSwaggerJson() (*asset, error) {
	bytes, err := v1alphaDepsDepsSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v1alpha/deps/deps.swagger.json", size: 903, mode: os.FileMode(420), modTime: time.Unix(1622949605, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v1alphaExtractorExtractorSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\xc1\x6e\xdb\x38\x10\xbd\xfb\x2b\x08\xee\x1e\x17\x71\x36\x7b\xcb\x2d\xc8\xa6\x40\x0f\x01\x82\x02\x3d\x15\x41\x30\x21\x47\x32\x03\x89\x64\x86\xc3\x34\x6e\xe1\x7f\x2f\xc8\xc8\xb1\xa4\x58\x8e\x6c\xa7\x71\x0b\xd4\x27\xd9\xe2\x3c\xce\x7b\x7c\x33\x43\x7f\x9f\x08\x21\xc3\x57\x28\x4b\x24\x79\x2a\xe4\xc9\xd1\xb1\xfc\x27\xfd\x66\x6c\xe1\xe4\xa9\x48\xef\x85\x90\x6c\xb8\xc2\xf4\x5e\xa3\x0f\xaa\x72\x51\xdf\x80\x37\xd3\x87\x7f\xa1\xf2\x33\x98\xe2\x23\x13\x28\x76\xb4\x7a\x3a\xf2\xe4\xd8\x65\x2c\x21\xe4\x03\x52\x30\xce\x26\x84\xe6\x51\x58\xc7\x22\x20\xcb\x89\x10\x8b\xbc\xa3\x72\x36\xc4\x1a\x83\x3c\x15\x5f\x9e\xa2\xc0\xfb\xca\x28\x60\xe3\xec\xf4\x2e\x38\x9b\xd6\x5e\xe7\xb5\x9e\x9c\x8e\x6a\xe4\x5a\xe0\x59\x58\x51\x79\x4e\x5a\xa3\x47\xab\xd1\x2a\x83\x61\x99\xf7\xf3\xb2\x14\xe7\x42\xfb\xbb\x10\xd2\x79\xa4\xbc\xc3\x47\x9d\x98\xfc\xbf\x04\x98\x5f\x2c\x59\xdf\x34\x4f\x0d\xef\x1c\x45\x18\xbc\xb3\x01\x43\x07\x4c\x08\x79\x72\x7c\xdc\xfb\x49\x24\x81\x83\x22\xe3\xb9\x51\xeb\x4c\x84\xa8\x14\x86\x50\xc4\x4a\x2c\x91\x8e\x5a\xf0\x39\x28\xa8\x19\xd6\xf0\x02\x4c\x08\xf9\x37\x61\x91\x70\xfe\x9a\x6a\x2c\x8c\x35\x09\x37\xac\x4e\xa9\x49\xf7\x53\x03\x2c\x3b\xe1\x8b\xd6\xb7\x45\x7b\x47\xa9\xb1\x80\x58\xf1\xeb\xd9\x5b\x11\x2d\x3e\x7a\x54\x8c\x5a\x20\x91\xa3\xb7\x23\x41\xd1\xb2\xa9\xf1\x22\xa1\x6e\x48\x7c\xb2\x86\x82\xf4\x40\x50\x23\x23\xad\x1c\xf4\xf4\xe9\xf1\xb1\x50\x67\xdb\xdf\x3a\x3d\xef\xe7\x6b\xec\xd0\x1b\xc2\xfb\x68\x08\x93\x49\x98\x22\xbe\xf9\x61\xdd\x47\x0c\x3c\x86\xf2\x75\x8b\x32\x43\xd9\x27\xbb\xce\xc1\x2b\xd8\xeb\x49\x1b\xae\x51\x6f\xa0\x7c\x6a\x60\x35\xdb\xbb\x78\x2e\x33\xca\x6f\x52\x3a\x39\xd9\x3f\x85\xb3\xfc\xfc\xca\x85\xd3\x1c\xd5\x41\xca\xe6\x79\xbc\xb5\x32\x5b\x0d\xa3\x34\x4e\x57\x68\xed\x02\xe2\xb9\xcf\x02\xba\xdb\x3b\x6c\xcd\x93\x34\xf9\x3c\x12\x9b\x5e\x4d\x48\x47\x25\x58\xf3\x0d\x1a\x07\x75\xaa\x65\x89\x15\x98\x8c\x2d\xe5\xda\x83\xad\x9d\x8e\x79\xc4\x6f\x1d\xd9\x0c\xf4\x73\x67\x03\x13\x18\xdb\x77\xf7\x28\x90\xa0\x9c\x7f\x59\xe6\xcb\x48\x20\x82\xae\x59\xa4\x61\xac\xfb\xeb\x37\xec\x35\xe4\xe7\xc6\xa7\xe3\xf2\x5d\xdb\x10\xbb\x47\x78\x09\x16\x4a\xac\xd1\xf2\x07\xd3\x91\x73\xeb\x03\xad\xc0\x96\x11\xca\x9d\x8e\x24\xcc\x03\x63\xbd\x53\xa4\x8b\xa4\xf0\x33\x55\xbb\x04\x1f\xdc\x83\xbb\x84\xb6\xe7\xd8\xfe\xfe\x5b\xdf\x89\x7a\x65\xfe\x0e\xae\x1c\xba\x34\xec\x61\xc8\x80\xa9\xf9\xa7\x5e\xb7\x83\xca\x85\xa9\xf0\xdc\x59\x46\xcb\x83\x2a\xf7\x12\xc9\xef\x40\xeb\xac\x21\x54\x57\xeb\xd3\xda\x98\xc1\x90\xbe\x71\x0b\x7f\x8f\x94\xb7\xb9\x07\xec\xa1\x6f\xdd\x69\x1d\xef\xe4\xc5\x5e\xbf\x5a\xaf\xdc\x66\x09\x3a\xd3\xf5\x50\xfe\xea\xfe\xc9\xdb\x59\xb2\x51\x46\x1a\x25\xc7\x5b\xf8\x81\xd5\x0c\xf5\xd5\xa1\x99\xe5\x3f\xf2\xb7\xb1\x38\xb3\x7b\x5d\x50\xd2\xfa\x9b\x6d\x0a\xaf\xdd\xde\xa1\x8a\xaf\x35\xc4\x8e\x08\x85\xa3\x1a\x38\x5f\x33\xe7\x8c\xaf\x55\x73\xe7\x42\xbc\x07\x45\xec\x01\x8c\xe6\xa7\x9c\x1e\xa4\x67\x2c\x63\x89\x34\xc4\xcf\x58\xfe\xef\x64\x60\x9c\x62\x08\x3b\x5e\x20\x34\x32\x98\xea\xa7\xf5\xa0\xb6\xa5\xc6\x38\x31\x5d\xa2\x27\x8b\xc9\x8f\x00\x00\x00\xff\xff\xec\x20\x43\x7d\xad\x12\x00\x00")

func v1alphaExtractorExtractorSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_v1alphaExtractorExtractorSwaggerJson,
		"v1alpha/extractor/extractor.swagger.json",
	)
}

func v1alphaExtractorExtractorSwaggerJson() (*asset, error) {
	bytes, err := v1alphaExtractorExtractorSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v1alpha/extractor/extractor.swagger.json", size: 4781, mode: os.FileMode(420), modTime: time.Unix(1622949605, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v1alphaSchemaSchemaSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xc1\x6e\xfa\x30\x0c\xc6\xef\x7d\x0a\x2b\xff\xff\x11\xd1\x8d\xdd\xb8\xed\xb0\xa7\x98\x26\x14\x5a\xb7\x18\xb5\x49\x64\xbb\x4c\x15\xea\xbb\x4f\x29\x1d\x04\x44\x05\xd2\x4e\xa9\xec\xdf\xf7\x39\x5f\xeb\x1e\x33\x00\x23\xdf\xb6\xae\x91\xcd\x1a\xcc\x6a\xf9\x62\x16\xb1\x46\xae\xf2\x66\x0d\xb1\x0f\x60\x94\xb4\xc1\xd8\x2f\x31\x48\xd1\xf8\xae\xdc\xd8\x40\xf9\xe1\xd5\x36\x61\x67\x73\x29\x76\xd8\xfe\x1e\xcb\xc0\x5e\xfd\xe8\x02\x60\x0e\xc8\x42\xde\x45\xed\xf4\x08\xce\x2b\x08\xaa\xc9\x00\x86\x71\x56\xe1\x9d\x74\x2d\x8a\x59\xc3\xe7\x49\x65\x43\x68\xa8\xb0\x4a\xde\xe5\x7b\xf1\x2e\xb2\x5f\x23\x1b\xd8\x97\x5d\xf1\x24\x6b\x75\x17\xc1\xe3\x69\x4c\x89\x15\x39\x8a\x9c\x5c\x92\x8d\x97\xdd\x76\xd5\xbb\xeb\xcf\xc5\x18\xb8\x0f\x63\x5e\xbf\xdd\x63\xa1\x53\x98\x13\x1e\x90\x95\x50\x12\x7a\xe2\x37\x1d\x37\x57\xd5\xc4\x47\x94\xc9\xd5\xe6\xdc\x1a\x16\x17\xed\xc1\x36\x1d\x3e\x10\x2e\xd2\x5e\xe5\xb9\xb5\x1a\xbb\xdb\x5e\x31\x31\xcd\xd2\x73\x1a\x61\xb8\x73\x4a\x2d\x7e\x30\x7b\xfe\x4b\x44\xbc\x31\x78\x3a\x5f\xe1\xcb\xd9\x78\xe4\x14\xe3\xea\xcd\xe4\x23\xa7\x6f\xab\xfb\xae\x2d\x8a\xd8\xfa\xd1\x7b\xbb\x2b\x2d\x51\x2d\x35\x32\x27\xb5\xcc\xb6\xbf\xbe\x11\x29\xb6\xb7\x3c\x80\xf9\xcf\x58\x45\xc5\xbf\x3c\xd9\xad\x3c\x5d\xa9\x84\x1f\xe6\xbe\x53\xfc\x0f\xb2\x21\xfb\x09\x00\x00\xff\xff\x9b\xfc\xdd\x16\x8b\x03\x00\x00")

func v1alphaSchemaSchemaSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_v1alphaSchemaSchemaSwaggerJson,
		"v1alpha/schema/schema.swagger.json",
	)
}

func v1alphaSchemaSchemaSwaggerJson() (*asset, error) {
	bytes, err := v1alphaSchemaSchemaSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v1alpha/schema/schema.swagger.json", size: 907, mode: os.FileMode(420), modTime: time.Unix(1622949605, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v1alphaStoreStoreSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x41\x6f\xdb\x3c\x0c\xbd\xfb\x57\x08\xfa\xbe\x63\xd0\xac\xe9\x2d\xb7\x02\xed\x86\x0d\xc3\x56\x74\x03\x76\x18\x8a\x42\xb1\x68\x47\x9d\x2d\x09\x14\x95\x21\x28\xfc\xdf\x07\xc9\x89\xab\xa6\x76\xe3\x20\xc9\x25\x09\xc4\xf7\x1e\xf9\x44\x8a\x79\xce\x18\xe3\xee\xaf\x28\x4b\x40\x3e\x67\x7c\x76\xf1\x81\x4f\xc2\x99\xd2\x85\xe1\x73\x16\xe2\x8c\x71\x52\x54\x41\x88\x4b\xb0\x2e\xaf\x8c\x97\x8f\xc2\xaa\xe9\xea\x52\x54\x76\x29\xa6\x8e\x0c\x42\xfb\x79\x61\xd1\x90\x89\x1a\x8c\xf1\x15\xa0\x53\x46\x07\xe6\xe6\x27\xd3\x86\x98\x03\xe2\x19\x63\x4d\xcc\x94\x1b\xed\x7c\x0d\x8e\xcf\xd9\xef\x96\x25\xac\xad\x54\x2e\x48\x19\x3d\x7d\x72\x46\x07\xec\x43\xc4\x5a\x34\xd2\xe7\x23\xb1\x82\x96\x01\xf8\xdc\xa6\x91\x50\x28\xad\x02\xce\xbd\xf8\x8a\xc5\x2e\x7c\x71\xad\xd7\xdd\x61\xb0\xbb\xb6\xd1\xad\x59\x3c\x41\x4e\x1b\x33\x2d\xdc\x02\x92\x02\x97\xa0\x37\xf8\x47\x8f\xd5\xab\xd3\x44\xc7\x11\x2a\x5d\xf2\x2e\xd4\x4c\x5e\xb8\x2b\x51\x79\xd8\x43\x9c\xa4\xb1\xc2\x60\x2d\x28\x44\x17\x6b\x82\x44\x34\x4b\xbf\x37\x29\x38\x7a\x4d\xaa\x86\x5b\x44\x83\xc7\x58\x84\x1d\x81\xd1\xfe\x72\x23\x07\xed\x29\x4d\x10\x06\x6f\xc0\x9f\xd2\x74\x35\xeb\x57\xad\xc1\x39\x51\xee\xbb\xb7\x5e\xaa\x04\x12\xaa\x72\x43\x54\x81\x28\xd6\xaf\x2b\x52\x04\xf5\x2e\x9e\x31\xfe\x3f\x42\x11\x18\xff\x4d\x93\xd9\x9a\xa6\x23\x95\xe0\x9b\x3d\x7d\x8a\x8f\xe7\x06\x2a\x20\xb8\x07\x67\x8d\x76\xf0\x4e\xbb\xde\x52\x3f\x2a\x2d\x47\x10\xf7\xf6\xd9\x0a\x85\x67\xbb\x9b\x58\xe9\x27\x14\x76\xf9\x99\xa0\xbe\x13\x0a\x0f\xbe\xa2\x8e\x7d\x8c\xc9\x72\x2b\xf2\xb3\x25\x1e\x3c\x43\x7f\x2e\x4f\xf2\x62\x53\xc5\xd9\xc9\x15\xaf\x4e\xad\x08\x3a\x37\x32\x30\x77\x74\xc7\x34\xfb\x76\xcb\xed\x55\xee\x1a\x72\x23\x48\x9c\x6f\x19\x0e\x94\xd4\x33\x49\x3b\xb9\x38\x68\x5f\x77\x7f\x3a\xf1\xe4\xfe\xfa\x57\x52\x0a\xff\xf2\xe3\xfb\xb7\x6d\xfa\x87\x8e\x26\xa1\x10\xbe\x8a\xf5\x05\xfc\x3b\xc5\xc4\xc7\x70\xcc\x7e\x96\x6f\xb7\xe1\x98\xbe\xf4\xf7\x43\xf7\x2c\xed\x03\xd5\x86\x1b\xf0\x55\x39\x3a\xc5\xaa\xea\x5b\x3d\x67\x5a\x55\x07\xaf\xa9\x3b\x3f\xc6\x62\xb6\x65\x37\x59\x93\xfd\x0b\x00\x00\xff\xff\x74\x37\xef\xc2\x8b\x09\x00\x00")

func v1alphaStoreStoreSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_v1alphaStoreStoreSwaggerJson,
		"v1alpha/store/store.swagger.json",
	)
}

func v1alphaStoreStoreSwaggerJson() (*asset, error) {
	bytes, err := v1alphaStoreStoreSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v1alpha/store/store.swagger.json", size: 2443, mode: os.FileMode(420), modTime: time.Unix(1622949605, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v1alphaTrackerTrackerSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x4b\x6f\xe3\x36\x10\xbe\xfb\x57\x10\x6a\x8f\x8b\x75\x9a\xde\x72\x5b\x74\xbb\x40\x81\x2e\x0a\x34\xed\xa9\x08\x02\x9a\x1a\xcb\xdc\x95\x48\x86\x1c\xa6\x75\x17\xfe\xef\x85\x5e\x91\x28\x59\xb2\x25\xca\x2f\x54\x02\x82\xd8\x16\x39\x9a\xe7\x37\x1f\x49\x7d\x5b\x10\x12\x98\xbf\x69\x14\x81\x0e\x1e\x48\x70\xff\xfe\x2e\x78\x97\xfe\xc6\xc5\x5a\x06\x0f\x24\xbd\x4f\x48\x80\x1c\x63\x48\xef\x87\xa0\x0c\x8b\xa5\x0d\x9f\xa9\xe2\xcb\xd7\x1f\x68\xac\x36\x74\x89\x9a\xb2\xaf\xa0\xcb\xff\xef\x95\x96\x28\x33\x39\x84\x04\xaf\xa0\x0d\x97\x22\x9d\x5d\x7c\x24\x42\x22\x31\x80\xc1\x82\x90\x5d\xf6\x34\x26\x85\xb1\x09\x98\xe0\x81\xfc\x95\xcf\xa2\x4a\xc5\x9c\x51\xe4\x52\x2c\xbf\x18\x29\xd2\xb1\x4f\xd9\x58\xa5\x65\x68\xd9\x91\x63\x29\x6e\x4c\x65\xc6\x9b\xc2\x91\xa6\x6a\xb3\xfc\x16\x53\x11\x59\x1a\xc1\x6e\x19\x82\x02\x11\x82\x60\x1c\xaa\xf1\x84\x04\x11\x60\xed\x2b\x21\x81\x54\xa0\xb3\x27\xfd\x12\xa6\x16\x7d\x2c\xe7\x6d\x1f\x41\xbf\x72\x06\xcf\xbf\x72\x83\x1f\xeb\xd2\xde\x55\x93\x35\x18\x25\x85\x71\x1e\x91\xdd\xb8\xbf\xbb\x6b\xfc\x44\x52\x5f\x1b\xa6\xb9\xc2\xc2\x79\x1f\x88\xb1\x8c\x81\x31\x6b\x1b\x93\x52\xd2\xfb\x9a\xf8\x6c\x92\x61\x1b\x48\x68\x4b\x18\x21\xc1\xf7\x1a\xd6\xa9\x9c\xef\x96\x21\xac\xb9\xe0\xa9\x5c\x53\x86\xac\xa9\xf5\xef\x85\xfc\xc0\x91\xb2\xab\x7d\xdb\xd5\x1f\x1c\x84\xb0\xa6\x36\xc6\xc3\x46\x08\x62\x05\xfc\xa3\x80\x21\x84\x04\xb4\x96\x7a\x3a\x5b\xb4\x15\xc8\x13\xf8\x39\x95\xda\xa3\xf8\x62\x8f\x09\x81\xa2\x9a\x26\x80\xa0\xab\xbc\xca\xaf\x86\x3d\x82\x26\x59\x21\x94\xa9\xd3\xd4\x99\x67\x66\xa6\x79\xd7\xbc\xa3\xe1\xc5\x72\x0d\x69\xda\xa0\xb6\xd0\xb8\x8b\x5b\x95\xc9\x35\xa8\xb9\x88\x82\x2e\x47\x77\x68\x23\x75\x44\x05\xff\x37\x4b\xcc\xfd\x1a\xbd\x58\xd0\xdb\x1e\x95\xd6\x34\x36\xd3\xea\x94\xc8\xd0\xc6\x1d\xfe\x39\xbf\x36\xd9\xff\x73\xe8\xf2\xf6\xf9\xa9\x96\x5d\x48\xa3\x66\x5e\xb5\xa1\xa3\x12\xf3\xb4\xa8\x0b\x2b\xcc\x3b\x02\xbd\x70\x42\xec\xc2\x1b\x44\x2e\x9c\x71\xeb\xed\x9a\x71\x6b\xc6\xad\x2b\xc3\xad\xdc\xb3\x83\x30\xea\x73\x36\xa5\x8e\x4f\xb7\x83\x4a\xb9\xee\x33\x22\x95\x57\x47\x86\xab\x4e\x34\xf2\xc9\x70\x2e\x10\xd2\x35\x4d\xe3\xf6\x5a\xea\x84\x62\x31\xe0\xc7\xfb\xa1\xd5\xc8\xa4\x15\x78\x15\xca\x1e\x5d\xae\x4e\x05\x0d\x2d\xd5\x65\x42\x05\x8d\x32\xfd\x3d\x4a\xf6\x73\x21\xe4\x76\x2a\x37\x57\x78\x2e\xdd\xf2\xea\x28\x07\xab\xe3\x6b\xe9\x93\xa9\x2f\xae\x44\x95\xaf\x5c\x84\xd7\xd5\xb2\xfd\x30\xc0\x48\xab\x19\xf8\x41\xc0\x63\x26\xe3\x86\x96\x14\x85\xc2\x33\x04\x94\xd7\xa8\xf5\xc4\xf9\x8b\x6f\x5e\x51\x1c\xd2\xe6\xfa\x56\x14\xe3\xe0\xc9\x14\x90\x32\x00\x97\xf2\xa2\xbe\xcd\xd5\x44\xae\xfb\x8c\x47\xe5\x35\xaf\x26\x2e\xb1\x9a\x70\x2a\x68\x68\xa9\xe6\xe9\x5c\x2f\x58\x25\xcd\x90\x8a\xfd\x23\x9b\x7f\x13\x25\x9b\xa9\x3a\x57\x6b\x79\x75\x54\xc0\x4a\x86\xad\x2c\xcf\x0b\x60\xdf\x9d\xfe\x9d\xc8\x91\x81\x2a\x71\xf5\xc5\x82\xc1\x63\xec\x9d\xa6\x44\xde\x8e\x3e\x6b\x2a\x55\x07\x95\x21\x28\x53\xed\xb3\xe5\xcb\xd1\x04\x04\x7e\xe2\xb1\x43\xc4\xcb\x92\x97\xab\x2f\xc0\x2a\x28\x09\x94\x4e\xeb\x08\x79\xa3\x30\x2a\xb6\xd6\x28\x97\xae\x2e\x5e\x8f\xad\xd9\x1a\x84\x64\xd4\xcc\xcc\x23\x7f\xea\x78\xcc\x64\x87\xd0\x8d\x98\x5f\x90\xaf\x11\x33\xab\x83\xeb\xc1\x53\x3b\x8e\x93\x9d\xf9\x54\x6b\xea\xa6\x78\xc0\x11\x92\xe6\xf8\xce\xfc\x2d\xc0\xd5\x4d\x95\xfd\xa8\x5e\x57\xad\x28\xbd\xe3\x4c\xda\x0b\xeb\xd9\xe9\xfe\xca\xae\x3f\x88\xad\x4f\x2e\xa6\xe3\x9f\xed\xb8\xa4\x78\xa5\xb1\x3d\x64\x85\xe3\xd9\xaa\xf9\xad\xb6\x08\x87\x2c\x74\x20\xd0\xc3\x44\x68\x08\x38\xda\x3e\x26\xc3\x4e\xf3\xf6\xb5\xf7\xee\xe6\xee\x94\x02\x18\x33\xb2\xf8\x43\x40\xca\xe3\x93\xe5\x72\x3d\xa5\xf6\x67\x70\x5f\x9c\x1e\x51\x03\x4d\xbc\xa3\x15\x69\xc5\x9e\x4f\xe3\xf9\x0d\xa2\x3a\x91\x68\x8f\xa0\x66\x5a\x19\xa4\x68\x3b\x03\x7b\x7b\x39\x91\xd3\x80\x1c\x11\xcd\xa5\x7a\x65\xd1\x3a\x9e\x99\x14\x06\x35\xe5\xa2\xc9\xe9\x8e\xeb\x9b\x4c\xaa\x29\xfa\xc7\x31\x6b\xf4\x9d\xc3\xaa\xd7\x7e\x1d\x22\x8f\x41\x4e\x5b\x2e\x16\x83\xf1\x7c\x65\x68\xe3\xef\xf3\x41\x93\x7d\x9c\xd5\x05\x97\xe3\x4e\xfe\x2c\x23\xf7\xdf\x63\x6b\xef\x79\xa8\xff\x46\x32\x8c\x21\x35\x50\x9b\x96\xed\xfd\x7b\xd9\x5d\x2c\x4b\x2a\x4a\x57\x2e\x4d\xe6\x1c\x1a\xeb\xcb\xce\x97\x1b\x3d\x5c\x7a\x46\x86\xdf\xca\x88\x21\xed\xb0\xff\x2d\xa9\x09\x1c\x80\xb7\x62\x7e\xf3\x50\xd7\xc3\xf6\xf6\x8b\x2c\x93\x1a\x5e\x28\x5d\x28\x5c\xb4\x90\x91\x46\xbb\xef\xa0\x78\xd8\xac\x7a\xf0\x63\x3c\x7b\xcd\xb7\x40\xa7\x27\xc5\xa7\x0d\x90\xd3\xdb\xc7\x05\xa6\xb1\x9d\xff\x7f\x09\x4c\xfb\xd0\xe6\x04\x81\x29\x48\x83\x4f\x60\x26\x81\xc8\x13\x1b\xeb\xc2\xc4\x68\xa3\x5d\x98\xf1\x41\xc5\x16\xdf\x3f\x18\xa9\x72\x89\x30\x80\x39\x0c\xa9\xc8\x63\xec\xf6\x67\x98\xad\xf7\x23\x0e\xea\xd9\x8c\x95\x63\xf5\x14\x5e\xec\xb3\xfb\x11\xa8\x66\x9b\x09\x58\x25\xa3\x82\x41\x27\xb9\x5e\x49\x19\x03\x15\xfd\xfb\xa3\x68\x7e\x6b\xd1\xec\xde\x64\x6f\xd3\xe2\x5e\xf9\x29\x3b\x3b\xcd\x13\x8a\x0e\xf3\xa9\xbd\xbf\x37\x36\xf0\x05\x5a\x0c\x94\x38\x28\xe5\xcb\xd0\xfb\x43\x9b\x6e\xa5\xcf\x61\xcf\xba\x89\x77\x20\x2f\xae\x84\x54\x5e\x66\x4f\x7f\x84\x76\xd7\x43\x49\xcf\xd7\xed\x27\x6a\x80\xee\x09\xe0\x95\x35\x82\xf2\xd4\xef\x64\x4e\xec\x3d\x6a\x1c\xee\x4c\xf7\xdc\xdb\xe7\x78\x28\x15\x94\xae\xf1\x8f\xee\x2f\x7b\xd5\xda\x7f\x4a\xe6\xa1\xd7\xc5\xcf\x23\x7f\xba\xc9\x3d\x65\xff\xcd\x9c\x4e\x6c\xf4\xde\xc4\x18\x44\xb6\xca\x93\x85\xf3\x50\xd6\x45\xfa\xb7\x5b\xfc\x17\x00\x00\xff\xff\xad\x54\xc8\xe0\xa7\x3d\x00\x00")

func v1alphaTrackerTrackerSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_v1alphaTrackerTrackerSwaggerJson,
		"v1alpha/tracker/tracker.swagger.json",
	)
}

func v1alphaTrackerTrackerSwaggerJson() (*asset, error) {
	bytes, err := v1alphaTrackerTrackerSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v1alpha/tracker/tracker.swagger.json", size: 15783, mode: os.FileMode(420), modTime: time.Unix(1622949605, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"depscloud/api/v1beta/core.swagger.json":        depscloudApiV1betaCoreSwaggerJson,
	"depscloud/api/v1beta/manifest.swagger.json":    depscloudApiV1betaManifestSwaggerJson,
	"depscloud/api/v1beta/rpc.swagger.json":         depscloudApiV1betaRpcSwaggerJson,
	"graphstore/api/v1beta/graphstore.swagger.json": graphstoreApiV1betaGraphstoreSwaggerJson,
	"v1alpha/deps/deps.swagger.json":                v1alphaDepsDepsSwaggerJson,
	"v1alpha/extractor/extractor.swagger.json":      v1alphaExtractorExtractorSwaggerJson,
	"v1alpha/schema/schema.swagger.json":            v1alphaSchemaSchemaSwaggerJson,
	"v1alpha/store/store.swagger.json":              v1alphaStoreStoreSwaggerJson,
	"v1alpha/tracker/tracker.swagger.json":          v1alphaTrackerTrackerSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"depscloud": &bintree{nil, map[string]*bintree{
		"api": &bintree{nil, map[string]*bintree{
			"v1beta": &bintree{nil, map[string]*bintree{
				"core.swagger.json":     &bintree{depscloudApiV1betaCoreSwaggerJson, map[string]*bintree{}},
				"manifest.swagger.json": &bintree{depscloudApiV1betaManifestSwaggerJson, map[string]*bintree{}},
				"rpc.swagger.json":      &bintree{depscloudApiV1betaRpcSwaggerJson, map[string]*bintree{}},
			}},
		}},
	}},
	"graphstore": &bintree{nil, map[string]*bintree{
		"api": &bintree{nil, map[string]*bintree{
			"v1beta": &bintree{nil, map[string]*bintree{
				"graphstore.swagger.json": &bintree{graphstoreApiV1betaGraphstoreSwaggerJson, map[string]*bintree{}},
			}},
		}},
	}},
	"v1alpha": &bintree{nil, map[string]*bintree{
		"deps": &bintree{nil, map[string]*bintree{
			"deps.swagger.json": &bintree{v1alphaDepsDepsSwaggerJson, map[string]*bintree{}},
		}},
		"extractor": &bintree{nil, map[string]*bintree{
			"extractor.swagger.json": &bintree{v1alphaExtractorExtractorSwaggerJson, map[string]*bintree{}},
		}},
		"schema": &bintree{nil, map[string]*bintree{
			"schema.swagger.json": &bintree{v1alphaSchemaSchemaSwaggerJson, map[string]*bintree{}},
		}},
		"store": &bintree{nil, map[string]*bintree{
			"store.swagger.json": &bintree{v1alphaStoreStoreSwaggerJson, map[string]*bintree{}},
		}},
		"tracker": &bintree{nil, map[string]*bintree{
			"tracker.swagger.json": &bintree{v1alphaTrackerTrackerSwaggerJson, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
