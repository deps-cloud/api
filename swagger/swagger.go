// Code generated by go-bindata. (@generated) DO NOT EDIT.

// Package swagger generated by go-bindata.// sources:
// depscloud/api/v1beta/core.swagger.json
// depscloud/api/v1beta/manifest.swagger.json
// depscloud/api/v1beta/rpc.swagger.json
// graphstore/api/v1beta/graphstore.swagger.json
// v1alpha/deps/deps.swagger.json
// v1alpha/extractor/extractor.swagger.json
// v1alpha/schema/schema.swagger.json
// v1alpha/store/store.swagger.json
// v1alpha/tracker/tracker.swagger.json
package swagger

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"net/http"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}


type assetFile struct {
	*bytes.Reader
	name            string
	childInfos      []os.FileInfo
	childInfoOffset int
}

type assetOperator struct{}

// Open implement http.FileSystem interface
func (f *assetOperator) Open(name string) (http.File, error) {
	var err error
	if len(name) > 0 && name[0] == '/' {
		name = name[1:]
	}
	content, err := Asset(name)
	if err == nil {
		return &assetFile{name: name, Reader: bytes.NewReader(content)}, nil
	}
	children, err := AssetDir(name)
	if err == nil {
		childInfos := make([]os.FileInfo, 0, len(children))
		for _, child := range children {
			childPath := filepath.Join(name, child)
			info, errInfo := AssetInfo(filepath.Join(name, child))
			if errInfo == nil {
				childInfos = append(childInfos, info)
			} else {
				childInfos = append(childInfos, newDirFileInfo(childPath))
			}
		}
		return &assetFile{name: name, childInfos: childInfos}, nil
	} else {
		// If the error is not found, return an error that will
		// result in a 404 error. Otherwise the server returns
		// a 500 error for files not found.
		if strings.Contains(err.Error(), "not found") {
			return nil, os.ErrNotExist
		}
		return nil, err
	}
}

// Close no need do anything
func (f *assetFile) Close() error {
	return nil
}

// Readdir read dir's children file info
func (f *assetFile) Readdir(count int) ([]os.FileInfo, error) {
	if len(f.childInfos) == 0 {
		return nil, os.ErrNotExist
	}
	if count <= 0 {
		return f.childInfos, nil
	}
	if f.childInfoOffset+count > len(f.childInfos) {
		count = len(f.childInfos) - f.childInfoOffset
	}
	offset := f.childInfoOffset
	f.childInfoOffset += count
	return f.childInfos[offset : offset+count], nil
}

// Stat read file info from asset item
func (f *assetFile) Stat() (os.FileInfo, error) {
	if len(f.childInfos) != 0 {
		return newDirFileInfo(f.name), nil
	}
	return AssetInfo(f.name)
}

// newDirFileInfo return default dir file info
func newDirFileInfo(name string) os.FileInfo {
	return &bindataFileInfo{
		name:    name,
		size:    0,
		mode:    os.FileMode(2147484068), // equal os.FileMode(0644)|os.ModeDir
		modTime: time.Time{}}
}

// AssetFile return a http.FileSystem instance that data backend by asset
func AssetFile() http.FileSystem {
	return &assetOperator{}
}

var _depscloudApiV1betaCoreSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xc1\x6e\x83\x30\x0c\x86\xef\x3c\x85\x95\xed\x58\x95\xad\xbb\xf5\xb6\xc3\x9e\x62\x9a\xa6\x00\x86\xb9\x82\x38\x72\x4c\x27\x54\xf1\xee\x53\x28\x6a\xd3\xaa\xa8\x95\x76\x02\xf9\xff\x7e\x3b\x3f\x38\x87\x0c\xc0\x84\x5f\xdb\x34\x28\x66\x0b\x66\xb3\x7e\x31\xab\x58\x23\x57\xb3\xd9\x42\xd4\x01\x8c\x92\xb6\x18\xf5\x0a\x7d\x28\x5b\xee\xab\xdc\x7a\xca\xf7\xaf\x05\xaa\xcd\x4b\x16\x5c\x7b\x61\xe5\xc9\x0b\x60\xf6\x28\x81\xd8\x45\xc7\xfc\x0a\x8e\x15\x02\xaa\xc9\x00\xc6\x69\x42\xc9\x2e\xf4\x1d\x06\xb3\x85\xcf\xa3\xcb\x7a\xdf\x52\x69\x95\xd8\xe5\xbb\xc0\x2e\xb2\x5f\x13\xeb\x85\xab\xbe\x7c\x90\xb5\xfa\x13\xc1\xc3\x71\x4c\x85\x35\x39\x8a\x5c\x38\xe7\x99\x0e\x5b\xf4\xf5\xbb\x1b\x4e\xc5\x18\x73\xf0\x53\x4a\x2e\x76\x58\xea\x1c\xe6\x88\x7b\x14\x25\x0c\x09\x3d\xf3\xdf\xbd\xb4\x17\xd5\xa4\x4f\x50\x21\xd7\x98\x93\x34\xae\xce\xde\xbd\x6d\x7b\xbc\x63\x5c\xa5\x5a\xcd\xd2\x59\x8d\x6a\x31\x28\x26\x4d\xb3\xf4\x39\x8f\x30\xd2\x3b\xa5\x0e\x3f\x44\x58\xfe\x13\x11\xaf\x1a\x3c\x9c\xaf\xe4\x6a\x31\x1e\x39\xc5\xb8\x70\x0b\xf9\xc8\xe9\xdb\xe6\x76\xd7\x0e\x43\xb0\xcd\xbd\xef\x76\xd3\x5a\xa1\x5a\x6a\xc3\x92\xd5\x8a\xd8\xe1\xf2\x44\xa4\xd8\x5d\xf3\x00\xe6\x59\xb0\x8e\x8e\xa7\x3c\xd9\xad\x3c\x5d\xa9\x84\x1f\x97\xfe\x53\xbc\x07\xd9\x98\xfd\x05\x00\x00\xff\xff\x99\x98\xd1\x23\x81\x03\x00\x00")

func depscloudApiV1betaCoreSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_depscloudApiV1betaCoreSwaggerJson,
		"depscloud/api/v1beta/core.swagger.json",
	)
}

func depscloudApiV1betaCoreSwaggerJson() (*asset, error) {
	bytes, err := depscloudApiV1betaCoreSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "depscloud/api/v1beta/core.swagger.json", size: 897, mode: os.FileMode(420), modTime: time.Unix(1599403668, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _depscloudApiV1betaManifestSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x4d\x6f\xe3\x36\x13\xbe\xfb\x57\x0c\xf4\xbe\xc7\xc2\xde\xa6\xb7\xdc\x16\xe8\x16\xe8\x61\x81\xa2\xdb\x5b\x11\x24\x34\x39\xb2\xb8\x95\x48\x2d\x67\x98\xac\x51\xe4\xbf\x17\xa4\x68\x9b\x92\x65\x5b\x8e\xbd\xd8\x04\x58\x03\x01\x62\x89\x33\x7c\xe6\xe3\x99\x19\xd2\xff\xce\x00\x0a\x7a\x12\xab\x15\xba\xe2\x16\x8a\x9b\xf9\xbb\xe2\xa7\xf0\x4c\x9b\xd2\x16\xb7\x10\xde\x03\x14\xac\xb9\xc6\xf0\x5e\x61\x4b\xb2\xb6\x5e\x2d\x44\xab\x17\x8f\x3f\x2f\x91\xc5\xa2\x11\x46\x97\x48\x3c\x6f\x9d\x65\x1b\xe5\x01\x8a\x47\x74\xa4\xad\x09\x52\xe9\x5f\x30\x96\x81\x90\x8b\x19\xc0\x73\xdc\x45\x5a\x43\xbe\x41\x2a\x6e\xe1\xef\x4e\x4a\xb4\x6d\xad\xa5\x60\x6d\xcd\xe2\x33\x59\x13\xd6\xde\xc5\xb5\xad\xb3\xca\xcb\x89\x6b\x05\x57\xb4\x83\x3f\x04\xba\x7b\x15\xd6\x5a\xe2\xec\x7b\xf0\x87\x6f\x1a\xe1\xd6\x01\xf9\x27\xb6\x0e\x41\x48\x89\x2d\x13\x04\xa7\xb8\x26\x6e\x08\x62\x69\x3d\x83\xd2\x24\xed\x23\x3a\x54\xb0\x51\x0e\xa5\xae\x91\x40\x18\x05\x6d\xb0\x9b\x98\x80\x2b\x6c\xe6\xc9\x31\x71\x0b\xdb\xa2\x8b\x7a\x7e\x57\x61\x9b\x8f\x49\x36\x6c\x27\x56\xf8\x09\xdd\xa3\x96\x78\x1f\x77\xcf\xc5\x1c\x52\x6b\x0d\x21\xf5\x00\x03\x14\x37\xef\xde\x0d\x1e\x41\x08\x16\x49\xa7\x5b\x4e\x51\x78\x0f\xe4\xa5\x44\xa2\xd2\xd7\xb0\xd1\x94\xa3\xea\x8c\x97\x15\x36\x62\x4f\x19\x40\xf1\x7f\x87\x65\xd0\xf3\xbf\x85\xc2\x52\x1b\x1d\xf4\x52\x72\x6d\x44\xfa\x67\xd2\x59\xf4\x24\x9f\xb3\x6f\xcf\xf9\x66\x85\xc2\x52\xf8\x9a\x4f\x03\x37\xe0\x0d\x7e\x6d\x51\x32\x2a\x40\xe7\xac\xdb\xe2\xbf\x14\xbe\xf3\x86\x75\x83\x1f\x82\xd2\x23\xb8\x67\x23\x16\x14\xad\x70\xa2\x41\x46\xb7\xcb\xc9\xee\x33\x30\xc7\x88\x26\x92\x67\x69\xd5\x7a\x88\x57\x9b\x43\x6f\x1c\x7e\xf1\xda\x61\xc8\x0f\x76\x1e\xaf\x19\xa6\x2f\x1e\x89\xa7\x58\x7b\x97\x59\xcb\x62\x35\xb4\xf3\x40\xde\xee\x34\xdf\xcd\x72\x8d\xc9\x77\xfb\x74\x5c\xe0\x57\x76\x42\xf2\x64\x5a\x7e\xe8\xd6\x43\x2b\x1c\x21\x01\xf9\x50\x09\x50\x65\xd4\x73\xc8\xde\x19\x02\x62\x61\x94\x70\xe1\x41\xeb\x90\xd0\x70\xa4\x1d\x81\x2d\xb7\x8c\xa5\x29\xd4\x4c\x5b\x6a\x6b\x36\xec\x4c\x4f\xde\x04\x3f\x13\xd6\x1f\x0c\x4d\x9f\x57\xcb\xd0\x6d\xa0\xae\xce\xd1\xbd\x04\x3e\x9f\xa6\x8d\x60\x59\x4d\x26\xe9\xc7\xb0\x1a\xa2\x0c\x52\xa2\x26\x57\x82\xe1\x09\x23\x63\xad\x63\x48\xc4\xd7\x66\x05\xd2\x1a\x46\xc3\x50\x3a\x3b\xa9\x57\xee\x13\x32\x6e\xf8\x26\xe8\x18\x91\xfe\x20\x63\xfa\xbc\x5a\x32\xa6\x30\x7d\x47\x2a\x6e\x27\xe5\x0c\xdc\x6e\xae\x8d\xf3\xf6\xd2\x97\xef\xcd\x3a\x67\x25\xaf\xdb\xe8\x40\xbb\xfc\x8c\x59\x7f\x0a\xcb\x5b\x74\xac\x07\x7c\x88\xeb\xef\xbd\xab\x87\x2c\xd9\xe8\x21\x76\xda\xac\x8a\xd1\xa0\x3e\x8a\xda\xe3\x09\xc1\x5e\x16\x77\x13\x74\x8c\xe2\x9a\x33\xc3\x9f\x47\x6b\x50\x2f\xdf\x2e\x30\x11\x07\x0a\x26\xdb\x27\xad\x3a\x68\x9e\x36\x8c\xe1\xdc\x74\xc0\x3e\x6d\xf8\x97\x9b\x71\xad\x0d\x12\x89\xd5\x29\xbf\x8d\x8a\x2a\x64\xa1\xeb\xbd\x8a\xb6\x11\x15\xce\x89\x3e\x37\x0a\xcd\xd8\x0c\xd7\x1f\x4c\xfc\x3c\xa5\xc6\x19\x3d\x1a\xa7\xd1\xe6\x75\x41\xbc\x08\x43\xb5\xe0\x97\xc5\x2c\xb4\x9a\xfb\xd4\x4e\x0e\x3a\x6a\x80\x24\xbe\x13\x4a\x45\x37\x88\xfa\x8f\x71\x5c\x47\x21\x8c\x7a\x69\x6b\xe9\xa0\x48\xf7\x5d\x05\x68\xa4\x68\xc9\xd7\x82\x91\x20\x95\xb2\x26\xc0\x87\xd2\xba\x70\x7c\x84\x87\x24\xf1\x00\xdb\x7e\x38\x2f\x8e\xc5\x20\x15\xfc\x0b\x82\xb0\x69\xfc\xf7\xb1\x77\x7f\xab\x8c\xdb\x94\xda\x6e\xaf\xdf\x74\x8d\x97\xba\xb4\xb3\x7c\xe8\xd3\xf4\x54\x09\x16\x67\x3b\x75\x83\xee\x57\x6c\xd1\x28\x34\xf2\xa2\x7a\x9b\x1a\xdc\xe4\x92\x39\xb0\xf3\xaf\x0a\x21\xa8\x08\x47\x98\x60\x84\xda\x82\x9a\x1f\xa8\xd1\xdd\xf5\x4b\xa0\x04\xb1\x13\xda\x0c\x67\x88\x73\x77\xdf\xdc\xe7\xec\x14\x82\x48\x27\x30\xc1\xc1\xd5\xb6\xf6\x99\x2f\x87\x78\x48\xda\xf6\x1a\xf9\x74\x84\x88\xa7\x2c\xe8\x20\x04\xb4\x4f\x95\x96\x15\x70\xa5\x29\x73\x24\xe8\x2d\x0b\xd5\xfc\x54\x8f\x1a\x49\xe0\x0b\x92\xa3\x16\x66\xe5\x4f\xf7\x86\x53\x06\x6e\xd4\x80\x20\xb2\x52\x8b\x30\x0a\x3e\x69\xae\x62\xc6\xf4\xae\xaa\x0e\x05\x69\x4d\x8c\xcd\x85\x28\x32\x8f\x36\xc2\x88\x55\xac\x69\xd0\xa9\x1e\x41\xa6\xe9\x28\x22\xeb\x9d\x9c\x32\xa8\x9c\x42\xa5\x15\x1a\xd6\x65\x48\xd7\x4e\x27\x78\x57\xc7\x73\xc7\x64\xef\x5c\x99\xc2\x8d\x55\xbe\x1e\x8b\x95\xa6\x49\x70\x76\x77\xad\xd7\xa0\x75\x1f\xd4\xf6\xe2\x04\x15\x2c\xd7\xd3\x31\x6d\x63\xbf\xdf\x44\xbf\x51\xef\xc8\xaa\xf3\x39\xb5\x20\xf3\x7a\x8e\x39\x35\x89\x63\xd6\x9e\xea\x48\x79\x4d\xd8\xf9\x91\x40\x44\x4d\xf0\x54\xd9\x5d\x2e\x52\x6f\xf3\x03\x5d\x28\x3b\x8e\x7c\xaf\xe1\xaa\x7f\xb5\xfe\xe2\x78\x5e\x65\x88\xca\x1d\x32\x65\x84\x8a\xeb\x4f\xf7\xfa\xfc\x6c\x7e\xd1\xf8\xc4\xb2\x42\x75\xff\x0a\x3d\x76\xc6\x84\x34\xc9\x67\xbd\x7b\xe5\x0b\x5c\xf6\xc2\x43\x68\x57\x1b\xce\x16\xfb\x47\x1b\xf5\x12\xb9\x37\x36\x17\xe7\xc1\x01\x0a\x5f\xc6\x7e\xc9\xea\xff\x7c\x75\x2c\xca\xd3\x99\x31\x0e\x64\x2c\xf9\x84\x59\x0f\x13\x70\xd3\x8e\x1f\xa2\xd8\x48\x06\xce\xc2\xdf\xf3\xec\xbf\x00\x00\x00\xff\xff\xf2\xfe\xb1\xf7\xc3\x1c\x00\x00")

func depscloudApiV1betaManifestSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_depscloudApiV1betaManifestSwaggerJson,
		"depscloud/api/v1beta/manifest.swagger.json",
	)
}

func depscloudApiV1betaManifestSwaggerJson() (*asset, error) {
	bytes, err := depscloudApiV1betaManifestSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "depscloud/api/v1beta/manifest.swagger.json", size: 7363, mode: os.FileMode(420), modTime: time.Unix(1599403668, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _depscloudApiV1betaRpcSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x4d\x6f\xdb\x38\x13\xbe\xe7\x57\x0c\xf4\xbe\xc7\xc0\xee\x76\x6f\xbd\x65\xb1\x8b\xee\x02\x59\xa0\x48\xda\xd3\xa6\x30\x46\xd4\x48\x66\x23\x91\x2a\x39\x4a\xea\x0d\xfc\xdf\x17\xa4\x64\x5b\x92\x25\x7f\xc9\x49\x63\xc4\x3e\xc9\x26\x39\x9a\x19\x3e\xf3\x70\x66\xe8\xa7\x0b\x80\xc0\x3e\x62\x92\x90\x09\x3e\x40\xf0\x7e\xf4\x2e\xb8\x74\xbf\x49\x15\xeb\xe0\x03\xb8\x71\x80\x80\x25\xa7\xe4\xc6\x23\xca\xad\x48\x75\x11\x8d\x31\x97\xe3\x87\x5f\x42\x62\x1c\x9b\x5c\x8c\x72\xa3\x59\xfb\xa5\x00\xc1\x03\x19\x2b\xb5\x72\x0b\xaa\x47\x50\x9a\xc1\x12\x07\x17\x00\x73\xff\x02\xa1\x95\x2d\x32\xb2\xc1\x07\xf8\xa7\x5c\x85\x79\x9e\x4a\x81\x2c\xb5\x1a\x7f\xb3\x5a\xb9\xb9\x5f\xfd\xdc\xdc\xe8\xa8\x10\x3b\xce\x45\x9e\xda\x95\xe6\x0b\x1d\x33\x1d\x15\x29\xad\x06\x00\x82\x84\xb8\xf6\x15\x20\xd0\x39\x19\x2f\xf2\xaf\xc8\xa9\xfe\xb7\x5f\x72\x4b\xe6\x41\x0a\x9a\x5c\x4b\xcb\x95\x7d\x7e\xb2\x21\x9b\x6b\x65\x1b\x22\xfd\xc0\xfb\x77\xef\x5a\x3f\x81\xf3\x9b\x15\x46\xe6\x5c\x79\xe5\x0a\x6c\x21\x04\x59\x1b\x17\x29\x2c\x24\x8d\x6a\xe2\xfd\x22\x2b\xa6\x94\xe1\x9a\x30\x80\xe0\xff\x86\x62\x27\xe7\x7f\xe3\x88\x62\xa9\xa4\x93\x6b\x2b\x53\x9d\xa2\xa5\xea\xf6\xa6\x92\x1c\x34\xd6\xcf\x6b\xdf\xe6\xf5\x57\x06\x11\xc5\x58\xa4\xbc\x5d\x7d\x05\x85\xa2\x1f\x39\x09\xa6\x08\xc8\x18\x6d\x96\x56\x0c\x35\xc2\x14\x8a\x65\x46\x7f\x38\xa1\x1b\xf4\xbe\xe8\xb0\x20\xc8\xd1\x60\x46\x4c\x66\x85\x94\xf2\xd3\x32\x47\x61\xe6\xd1\x9c\xa3\x21\xc5\x6d\x8d\xa5\xb7\xf1\x7b\x41\x66\xd6\x1e\x32\xf4\xbd\x90\x86\x1c\x3c\x62\x4c\x2d\xb5\x86\x79\x96\x7b\xb9\x96\x8d\x54\x49\xd0\xe7\xe7\x5e\x6d\x12\x9a\x58\xf9\xef\x9a\x0b\x87\x2b\x24\x15\x93\x8b\xf0\xd6\x70\xac\x4d\x86\x5c\x4d\xf8\xf5\xfd\x41\x0a\xb3\xbe\x27\xf5\x22\x2e\x5c\x3e\x7f\xad\x6d\x39\x63\xd2\xde\xec\x66\xe0\xae\x44\x7c\xbd\xa8\x0b\xaa\x0c\x6c\x13\xc4\xf8\xa9\x7c\x18\xa5\xa8\x92\x02\x13\x9a\x2f\x7f\x71\x66\xcf\xc7\x11\xe5\xa4\x22\x52\x42\xee\xc7\x26\x9f\x0d\x3a\x2e\xc4\x74\x41\x28\x1f\x89\x7f\xaf\xcb\x3a\x05\x6e\xa9\x2b\x7c\x26\x97\xea\xd3\x13\x1d\x2d\x1c\xb5\x55\x6f\x59\xfd\x79\x4a\xb0\x98\x0a\x68\xad\x16\x12\x9d\xfd\x8f\x92\xa7\xc0\x53\x82\x4a\x5c\x77\xa4\xb9\x43\x6f\x43\xa0\xb1\x29\x8e\x4b\x55\xb5\x88\xd8\xc1\x2e\x37\x0d\x74\xec\xcd\xa8\x1d\xdc\xa0\x0d\xa4\x32\x34\x68\x66\x2f\x61\xd6\xce\xf4\xd1\x8e\xd4\xe7\x62\x10\x3e\x1a\x7f\xf0\x69\xb1\x07\x9f\xb9\x63\xf1\x39\x73\xc7\x16\xbb\xce\xdc\xd1\xe0\x0e\xab\x0b\x23\x86\x96\x31\xb7\x95\x90\x53\xe0\x0c\x5f\xcd\xa0\xc2\x84\xa2\x4a\xed\x33\x77\x54\x9f\x33\x77\x6c\xb1\xeb\xc4\xb8\xe3\xa0\xb2\xe5\x00\x42\x28\xe3\xe8\x24\xfb\x1a\x67\x0a\x38\xf7\x35\xde\x6e\x5f\xa3\x11\xb8\x7b\x12\xc4\xf8\xa9\x7c\x18\x15\x26\x9d\x1f\xd2\x0d\x5d\x67\x8d\xaa\xc9\x78\x32\xe4\x51\xa5\x11\xe7\xde\xe8\x4e\x1c\xb2\x82\xcb\x96\x93\xf6\x0a\x4a\x4c\x43\x19\x75\xce\xea\x4f\x46\x3f\xc8\x88\xcc\x97\x9b\xeb\xd7\x91\x37\x54\xc6\xdc\x4b\x15\xed\x90\x37\xb8\x69\x2e\x6f\x28\x57\x5d\x02\xcf\x72\x29\x30\x4d\x67\x60\x28\xd7\x56\xb2\x36\x33\x97\x44\xa0\x61\x19\xa3\x70\x5f\x47\xf0\x79\x2a\x2d\x3c\xa2\x85\x7b\xca\xf9\x4e\x59\x72\x0e\x67\x82\xd8\xe8\xcc\x67\x20\x5f\x6e\xae\x01\x2d\xd8\x99\x65\xca\x2c\xa4\xf2\x9e\xe0\xa3\xe4\x3f\x8b\x10\x50\x45\xee\xf1\x1a\x43\xd0\x71\x4c\x06\xac\xce\xe8\x4e\x2d\xe4\x83\x2d\xf2\x5c\x1b\xee\xc9\x56\x5e\x37\x1d\x2d\x2f\x7c\x6a\x40\x5e\x5d\xcf\xf8\x6b\xa3\xb0\x88\xaf\xd4\xac\x4e\x46\x0b\xf5\x74\xf8\x8d\xc4\xea\x20\x73\xd3\x73\x32\x2c\x5b\x04\xe3\xe7\x4f\x1c\x54\x5b\xb4\xd3\x67\x66\x3d\x30\x1e\x30\x2d\x68\xcb\xc2\x06\x13\xac\x4e\x97\x70\xc6\x35\xc3\xe7\x9d\x3c\xdc\x88\xd9\x01\x26\x52\x4b\xc0\xce\xf6\x09\x1d\xf5\x9a\xd7\x75\x7e\xf6\x9f\x9e\x75\xa9\x19\x59\xeb\xaa\x8b\x03\x14\x8a\x88\x51\xa6\x6b\x47\xc4\x62\x29\x1a\x83\x4d\x38\x07\xd2\x45\xcc\x3a\xf3\x76\x93\x64\x1d\x52\xdd\xac\xb8\x69\x9f\x6e\xd9\x10\x66\x83\x77\x2b\x31\xb9\x98\x3c\x8f\xe7\xa7\xcc\xf9\x33\x89\x1e\xb0\xa9\x5e\x2b\xcb\xc8\x45\xef\xc6\x9e\x1e\x26\x36\x5c\x7a\x0c\xc0\x46\xcf\x0d\xd2\x51\x0d\x6e\x69\x3e\xc4\xea\x41\xc4\x5c\x26\x9a\x6d\x2b\x37\xe9\x5c\xa6\x67\xdd\x28\xa1\x28\xa1\x49\x84\xdc\x4e\x99\x8e\xec\xb6\x52\x85\x63\x38\x8f\x8f\x0a\x18\x7e\xc5\x70\xd9\x90\x60\x0f\x86\xcf\x33\x9b\xdd\x50\x7b\x90\xe5\xed\xf6\xc4\x00\xcb\xd7\xfb\x3a\xcf\x67\x79\xa9\xf6\x81\x96\x1f\x6f\xb3\x15\xfd\xe0\x49\xad\xf6\x3e\xe0\x18\x79\x19\xbc\x0c\x00\xca\x11\x11\x72\x04\x77\xbd\x08\xc8\x0e\x45\x57\x33\x2c\xdf\xda\x19\x54\x7a\xed\x50\xa8\x35\x03\x7b\x30\x0d\xed\xe3\xbb\xf6\x76\x9f\x9e\xef\x06\x03\x6e\x79\xf5\xb2\x47\x51\x79\xe8\xb5\x4c\xa7\x9f\xab\xb6\xc7\x90\x97\xef\x72\x77\xd2\xf9\xee\x14\x43\xea\x4f\xe4\x5b\x2e\xf4\x63\x18\x45\x7e\xfb\x30\xfd\xd4\xed\xd0\x2e\xfd\xeb\xdb\xda\x90\xb6\xfc\xab\xea\xb5\x57\x04\x84\x56\x8c\x52\xc1\xea\x2d\x90\x11\xa3\x43\x21\x60\xa8\x0b\xf6\x26\x92\x62\xc9\xb3\x8e\x5a\x7e\xb9\xd9\x6b\x5d\xaf\x72\x07\x40\x2a\x58\xfe\x29\x16\xa4\x05\x84\x84\x14\x19\x29\xc0\x50\x6e\xc8\x92\xe2\xca\x73\x31\xa0\xda\xec\xcb\x2e\x20\x1e\x27\x0f\x5f\xfd\x23\x77\x08\x28\x16\x7f\xe6\xed\x02\xe4\x32\x49\xdd\x0c\xcd\x4a\xc4\x44\x68\x65\xd9\xa0\x54\xed\x8e\xea\xa1\x3a\xad\x04\x82\x67\x04\x8a\x20\x9c\x79\xcd\x72\xa3\x9d\x93\x7a\x14\xb2\x42\xe7\xc7\x38\x02\x77\xc5\x67\x87\x09\xa5\x0a\x80\x0c\x8f\x53\x29\x4a\x77\x1a\xfa\x5e\x90\x75\x1e\x5e\xe0\xcc\x82\x22\x8a\x28\x7a\xdb\x71\xd7\x0e\x0a\x28\xc7\x43\xb2\x95\xdb\x52\x1f\x5b\x76\x2a\x73\x08\x89\x1f\x89\x14\xf0\xa3\xae\xbc\x68\x47\xf0\x1b\x09\x2c\x2c\xdd\x29\x4f\x6e\xd2\x82\x90\x46\x14\x29\x9a\xc6\xda\x4b\x60\x83\x4b\xc5\x9d\xd2\x21\x5a\xcf\xba\x94\x4a\x95\xb8\xdd\x88\x64\x1c\x4b\x51\xa4\xdc\x19\xbc\xb7\x84\x46\x4c\x6f\xca\x5d\x1c\x12\xb9\x02\x95\xa0\xde\xc6\x66\xa8\x75\x4a\xa8\x7a\x1b\x94\xd5\xf0\xa6\x64\x79\x12\xaf\xf7\x15\x0f\x28\x1a\x9a\xdd\x9c\x55\x87\x63\x5f\xf1\x5d\x45\x68\x97\x6c\xb6\x13\x1d\x1f\x53\x70\x95\x0c\xef\x29\xb5\xa7\x78\xdc\x94\x60\x2c\xa0\x31\xbc\x04\x30\x6b\xf0\xda\xaa\x6f\x13\x97\x3f\xb1\x88\xda\xa1\xe8\xee\x41\xd4\x4f\x6e\x82\x74\x62\xf1\xf5\xe8\x74\x0a\x8d\x83\xe1\x75\x89\xbf\xc9\x1b\x96\x38\xbc\xde\x5b\xbe\xce\x7d\xdd\x7e\xbb\xd5\x7d\x1c\x6f\xb9\x9e\x7d\xcb\xb9\xc4\x55\xb5\xf7\xcd\x1c\x7e\x99\xb6\x5b\x97\xaf\x6b\x23\x13\xa9\x9c\xf3\x40\xaa\xd2\x85\x52\xab\x0a\x08\x52\x89\xb4\x88\xc8\x5e\xde\xa9\xb0\x60\x9f\xa2\x69\x86\x54\x66\xd2\xb9\x99\xf5\xe5\x0a\x4a\xd2\x25\x78\x2a\xaa\xa1\x49\x92\xed\xce\x1c\xea\xd5\xeb\xab\x4e\xf9\x37\x26\xfa\x65\x04\x0c\x7c\x7b\x29\x04\x0a\xeb\xdd\x09\x99\xa7\x1d\xa8\x1f\x06\x7e\x67\x9c\x32\x8c\x26\xa1\x2d\xc5\xc7\x69\xe2\x7a\xe1\x7a\xa9\xd5\x1e\xe0\xae\xc3\x68\x97\x24\x19\x17\x75\x52\x09\xd3\xa6\x23\xfd\x2d\xfe\xc5\xfc\xe2\xbf\x00\x00\x00\xff\xff\x5a\x67\x2c\xe3\x2f\x3a\x00\x00")

func depscloudApiV1betaRpcSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_depscloudApiV1betaRpcSwaggerJson,
		"depscloud/api/v1beta/rpc.swagger.json",
	)
}

func depscloudApiV1betaRpcSwaggerJson() (*asset, error) {
	bytes, err := depscloudApiV1betaRpcSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "depscloud/api/v1beta/rpc.swagger.json", size: 14895, mode: os.FileMode(420), modTime: time.Unix(1599403669, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _graphstoreApiV1betaGraphstoreSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x5f\x6f\xdb\x38\x12\x7f\xcf\xa7\x98\xd3\x1d\xd0\xe4\xd6\x27\xa7\xe9\xe1\x1e\xb2\x08\x70\xc5\x6e\xbb\xdb\x45\xb7\x1b\xb4\xc9\x53\x15\x24\x94\x34\xb2\xb9\x91\x48\x95\xa4\x9c\x6a\x8b\x7c\xf7\xc3\x90\x92\x25\xcb\x76\x9c\xd4\x49\xdb\x5c\x19\xa0\x68\x22\x51\xc3\xdf\xfc\xfd\x0d\x45\xc9\xfe\xb4\x03\x10\xe8\x2b\x36\x99\xa0\x0a\x0e\x21\x38\x08\xf7\x83\x11\x1d\xe3\x22\x93\xc1\x21\xd0\x79\x80\xc0\x70\x93\x23\x9d\x9f\x28\x56\x4e\xb5\x91\x0a\xc7\xac\xe4\xe3\xd9\xd3\x18\x0d\x1b\x77\x47\xc3\x52\x49\x23\xad\x08\x80\x60\x86\x4a\x73\x29\xe8\xc2\xe6\x57\x10\xd2\x80\x46\x13\xec\x00\x5c\xdb\x89\x12\x29\x74\x55\xa0\x0e\x0e\xe1\xbd\xbb\x8a\x95\x65\xce\x13\x66\xb8\x14\xe3\x3f\xb5\x14\x34\xf6\xcc\x8e\x2d\x95\x4c\xab\xe4\x96\x63\x99\x99\xea\x4e\x83\x05\xa8\xf3\xc3\x00\xc1\x04\x4d\xef\x4f\xb2\x46\x55\x14\x4c\xd5\x04\xfa\x54\x63\x0a\x46\x42\xce\xb5\x81\x94\x19\x06\x57\xdc\x4c\xb9\x00\x33\x45\x70\xfa\x36\xaa\xda\x2b\x65\x89\xca\x42\x79\x95\xd2\xd5\xbf\xd0\x54\xef\x68\xd4\xf9\x6b\xae\x4d\x7f\xa4\x42\x5d\x4a\xa1\x51\x2f\x4c\x0d\x10\x1c\xec\xef\x0f\x0e\x01\x04\x29\xea\x44\xf1\xd2\x34\xa6\x7c\x0e\xba\x4a\x12\xd4\x3a\xab\x72\x68\x25\xf5\x81\x38\x35\x92\x29\x16\x6c\x49\x18\x40\xf0\x0f\x85\x19\xc9\xf9\xfb\x38\xc5\x8c\x0b\x4e\x72\x75\x63\x1f\x02\xfa\xb6\x11\x19\x2c\x5c\x78\xdd\xfb\xeb\xba\x3f\x57\x90\x62\xc6\xaa\xdc\x6c\xc6\x2d\xa0\x12\xf8\xb1\xc4\xc4\x60\x0a\xa8\x94\x54\x73\xf8\xdb\xa2\x57\x95\x30\xbc\xc0\x17\x24\xf4\x06\xdc\x3b\x2b\x34\x08\x4a\xa6\x58\x81\x06\x55\x17\x57\xee\x67\xa0\x8e\x60\x85\xcd\x81\x92\x29\x14\x66\x88\x98\x5b\x1d\x3f\x54\xa8\xea\xe1\x29\x85\x1f\x2a\xae\x90\x82\x22\x63\xb9\xc6\xc1\x69\x53\x97\x56\xae\x36\x8a\x8b\x49\xb0\xce\xce\x6b\xd1\x4c\xf0\x5c\xf3\xbf\x96\x4c\xb8\x3d\x20\x2e\x0c\x52\x5d\x18\x9c\xce\xa4\x2a\x98\x69\x06\x3c\x3b\xf8\x2c\xc0\x46\x5e\xa2\xf8\x56\x4c\x78\xc9\x45\xfa\x45\xb0\xcc\x7f\x3f\xeb\x85\x9f\x61\x93\x61\xe0\xf5\x4a\x47\x77\xfd\xd9\xce\x40\xa3\x20\xc5\x1c\x0d\x6e\xac\x5e\x6e\x98\xab\x5f\x99\x92\xc5\x9d\xab\xd7\xcf\x6e\x9e\xc7\x50\xbf\x1c\x54\x5f\xc1\x9a\x9f\x35\x01\x1f\xcb\x74\x29\xaa\x5d\xc0\xaf\x3a\xd3\x8b\x77\xa3\xaa\x61\xb8\x6f\xe7\xa7\x0f\x15\x6a\x73\x1b\x75\xef\x27\x63\xca\x6a\x33\xd9\x73\xa1\x51\x35\x74\xcf\x85\x91\x77\x4e\x97\xe3\xea\x71\x70\xfd\x71\xe5\xa9\xbe\xfd\xf9\x66\x13\xc5\x3a\xe9\xcb\x64\xc9\x4e\xcf\x5a\x8b\xfd\xf2\xf8\x13\xf1\x46\x78\x89\xf5\xf5\x58\x20\x9f\x4c\x63\xa9\xf4\x98\x8e\xdd\xb5\x93\xb6\x84\xba\x55\x2b\xfd\xa6\x9d\xff\xe0\x51\x24\xd9\x1c\xae\x4f\xb5\xe6\x67\x4d\xaa\xb5\x11\xb6\x3a\xdd\x68\x35\x77\xb7\x74\x1b\xb4\x61\x6b\x7b\xd8\xb8\x36\x78\xd7\x86\x51\xc8\x14\x43\xaa\x00\x21\xcd\x72\x5e\xa9\x7c\x28\x7f\x29\xc2\x4e\xdf\xbe\x1e\x2b\xd4\xb2\x52\x09\x02\xc9\x01\x33\x65\x06\x2a\xc1\x3f\x54\x98\xd7\xc0\x53\x14\x86\x67\x1c\xb5\xcd\x08\x92\x0b\x32\x73\xd9\x81\x8a\xb3\x9c\xff\x85\x69\x24\xec\xf2\x3a\x91\x39\xc4\x55\x96\xa1\x82\x02\xb5\x66\x13\x0c\xe1\x64\xca\x35\x38\x5d\xa1\xa8\xb4\x81\x44\x0a\xc3\xb8\x00\x66\x20\x47\xa6\x4d\x24\xa4\x40\x88\x82\x71\x14\x40\x32\x65\x8a\x25\x06\x15\x5d\x87\x90\x33\x4d\x8b\xf2\x49\x81\xc2\xb4\x93\x9e\xbe\x7d\xfd\x44\x03\x99\xdd\x89\x53\x58\x2a\xd4\x28\x4c\x24\xe8\x74\x56\xe5\x79\x0d\x1f\x2a\x96\x13\xe6\xd4\x69\xd4\x5c\x6a\xb1\xef\x32\x0d\x5c\x44\xe2\x82\x44\x8c\x27\x52\x4e\xf2\xe6\xe6\x40\x5c\x65\xe1\xcf\x95\xcb\xee\x8b\x3d\x87\xc0\x5e\xae\xa7\xb2\xca\x53\x88\x11\x08\x36\x24\x4c\x48\xc1\x13\x96\x03\x39\x2b\x12\xbb\x18\x4e\xc2\x11\x29\x93\x92\x92\x51\x10\x46\x01\x70\x6d\xef\x28\xb0\x24\xc1\xd2\x60\xba\x17\x46\x22\x12\xaf\x04\x94\xa4\x1f\x4f\x70\x04\x06\x59\xa1\xa1\xd2\x15\x23\xc4\xa5\xc2\x44\x16\x25\xcf\xb1\xe3\xf6\x98\x0b\xa6\x6a\x60\x79\x6e\xa1\x6b\xe7\x19\x33\xc5\x3a\x6a\x12\x0b\xb8\xa1\xe2\x55\x69\x0b\x8d\xae\x21\xeb\xe2\x47\x6b\xad\xe7\xa2\x0e\xe1\x57\x79\x85\x33\x54\x23\xc2\x4a\xb6\xd3\x70\x35\xe5\xc9\xd4\x5e\x62\xa6\x18\x09\x9b\x7a\x08\x17\x53\x63\xca\x8b\x91\xfb\x5f\x5f\x8c\x40\x2a\x10\x12\xdc\xd9\x11\x90\x8b\x12\x26\x40\xda\xc8\xb1\x88\x35\x1a\xa8\x4a\x60\x16\x5b\x44\xbd\xc9\x0c\x95\x83\x58\xb0\x52\x3b\x6b\xdb\x19\x8d\x6c\xc3\x01\x7a\x49\x0c\x4c\x43\x26\xf3\x5c\x5e\xe9\x43\x32\xce\x3f\xe1\x55\xd6\x4d\x49\x06\x2c\x95\x9c\xf1\x14\xd3\x39\x2a\x3a\xc8\xb4\xae\x0a\x4c\x43\xba\xe0\xb9\x80\x5f\x4f\x4e\x8e\xe1\x97\x17\x27\x20\x45\x1b\x1e\x2e\x2e\x6a\x8e\x79\x0a\x0c\xde\x0f\x5d\x7c\x52\x97\x78\xf6\xfe\x2c\x12\x00\x33\x96\x57\xd6\x72\x8d\xa5\x5d\xf2\x59\xdd\x9b\x3b\x3a\xc0\x84\x2b\x5d\x6e\xbe\xee\xa6\x8e\x06\xa6\x90\x5c\x23\xaf\x1c\x81\x24\x2c\xa1\x88\x95\xf2\xb2\x2a\xa9\xce\x55\xb9\xd1\x10\x33\xa2\x17\x07\x8d\x26\x3c\x7d\xfb\xda\x4a\x9f\xb2\x99\x35\x7f\xd1\xf3\x7b\xea\x1c\xcf\x5a\x30\xf4\xfb\x4c\xf2\x14\x98\xa8\xe9\x5a\x27\xda\x86\xa5\xc2\x4c\x2a\x1c\xb5\x23\x49\x00\x33\x3c\xe6\x39\x37\x35\x08\xc4\xd4\xda\x3c\x46\xb0\xa9\xa1\x66\x94\xa0\x40\x30\x92\x29\x13\x13\xb4\x67\x6d\x44\x85\xb0\x7b\xaa\x11\x9a\x7b\x60\xa4\x08\x39\x8d\x82\xde\x79\x8d\x09\x36\xb1\xc0\x63\x85\xec\x92\xa2\xbb\x91\x10\xee\x91\xcb\xde\x48\x83\x87\x60\x28\xc3\xb3\x4a\x24\x2e\x34\x08\x43\x13\xfd\x49\xa5\x14\x0a\x93\xd7\xc0\x66\x8c\xe7\x2c\xce\xe7\x71\x2a\xb3\x8c\x27\x9c\xe5\x4d\xe5\x88\xab\x0c\x14\x52\x3d\xc0\x11\x30\x91\x52\x60\x37\x42\x2a\x32\x21\x45\x6f\x17\x50\x31\x4e\xb8\x10\x04\x87\xb8\x3a\x12\x74\x26\x74\x7e\x66\x25\xd7\x61\x22\x0b\x9b\x6f\xef\x6c\x28\x69\x90\x66\xea\x42\x53\x0c\xe3\x1c\x76\x49\xf0\x14\x01\x8b\xd2\xd4\x4d\xec\xed\x41\xc1\x27\x53\x03\x31\x46\xc2\xce\x4e\xb3\x00\x2f\xca\x1c\xa9\x12\x59\xff\x83\x2e\x31\xe1\x19\x4f\x40\x63\xc1\x84\xe1\x89\x5e\x22\xe6\xaf\x75\xdb\xa0\x63\x01\x1b\xe0\x1b\x28\xe0\x77\xca\x96\x18\x81\x51\x3a\xf0\xb4\x57\xd5\x61\x58\xd4\x9b\x3a\xca\x62\x39\xc3\xd6\x00\x4d\xd0\x3c\x9c\xf2\xf7\x4a\x90\x96\xcc\x3d\x41\x7a\x82\xf4\x04\xe9\x09\xd2\x13\xe4\x77\x4a\x90\x1d\x0b\x78\x82\x1c\x98\xc6\x48\x4f\x8f\x9e\x1e\x3d\x3d\x7a\x7a\xf4\xf4\xf8\xbd\xd2\x63\xcb\x01\xdf\x17\x39\x3e\xfc\x5e\xc5\x25\x17\xe9\xf5\x57\x79\xc4\xe7\x71\x6c\x49\xf8\x67\x7c\x36\xe7\xe6\xfa\x47\x42\xb6\xde\x89\xb8\x63\x95\xf0\x4f\x1b\x3d\xa6\xa7\x8d\x1e\xbe\xba\xd9\xbb\x8e\x8b\x3b\xb1\x5f\x71\x13\xf6\x51\x14\x3c\xbf\x07\x7b\xcb\xaa\xd7\xc6\x96\xdf\x83\xf5\x6b\x68\xbf\x86\xf6\x6b\x68\xbf\x86\xf6\x6b\xe8\x6f\x7b\x0d\xed\xf7\x60\xfd\x1e\xac\x27\x48\x4f\x90\x9e\x20\x3d\x41\x7a\x82\xbc\x91\x05\x3c\x41\x0e\x4c\xe3\xf7\x60\x3d\x3d\x7a\x7a\xf4\xf4\xe8\xe9\xf1\xfb\xa5\x47\xbf\x07\xdb\x49\xbb\xcf\x5d\x0a\x23\x87\x6f\x8b\x19\xf9\x15\xb7\x29\x9e\xf9\x7d\x8a\xff\xa7\x7d\x0a\x17\x5d\x7e\x97\xc2\x77\x99\xbe\xcb\xf4\x5d\xa6\xef\x32\x7d\x97\xf9\x6d\x77\x99\x7e\x97\xc2\xef\x52\x78\x82\xf4\x04\xe9\x09\xd2\x13\xa4\x27\xc8\x1b\x59\xc0\x13\xe4\xc0\x34\x7e\x97\xc2\xd3\xa3\xa7\x47\x4f\x8f\x9e\x1e\xbf\x5f\x7a\xf4\xbb\x14\x9d\xb4\xcf\xdb\xa5\x98\x7f\xdc\x74\xaf\x5e\x75\x1f\x0e\xdd\x46\xec\x73\x51\xf7\x37\x29\x5a\xe4\x32\xfe\x13\x93\xee\x15\x1c\x1a\x5e\xa2\x32\x7c\xb0\x83\x10\xcc\x29\x7a\xb0\xaf\x70\x83\x05\x3c\x7d\x7b\xfa\xf6\xf4\xed\xe9\xdb\xd3\xf7\x43\xd0\xf7\xca\xcd\x46\x47\xa2\x77\x28\xd1\x03\x8a\xba\xa9\x7c\xdf\x17\xf9\xee\x0c\x49\xb0\xff\xa1\xdf\x0b\x33\x5e\x3c\x17\xf5\x45\x5b\xc3\x35\xa5\x07\x53\x31\x37\x8a\xe2\xf0\x86\xd9\xdb\xfc\x67\xb9\x6c\xbc\x06\x2c\x12\x94\xac\xb6\x60\xb8\x49\xe2\x1b\x39\x66\x4e\x29\xe4\xd9\xe3\x36\x68\x72\x1e\xdb\xb9\x9b\x5a\xa1\x41\x57\x65\x29\x95\x2d\x8b\x25\x4b\x2e\xc7\x95\xa0\xff\xa8\x18\xba\x74\xd7\x6d\x04\xba\xe2\x2d\x33\xa8\x8c\x4b\x9c\x36\x84\x35\x65\x28\x4b\x53\xee\xe2\x19\x26\x28\x50\x31\x63\x11\x98\xa9\x4c\x75\x8b\x8d\x64\x5a\xfb\x11\xa2\x17\x1f\x19\x05\x08\x3c\x3d\x84\x63\x9a\x90\x82\xb8\x99\x9b\xcd\xd5\xe7\x02\x7e\xfa\xe1\x07\x3b\x9e\x8c\xfb\x52\x4a\xc8\xa4\x84\x23\x08\xc3\xf0\x47\x77\x8c\x84\x32\x51\x37\x7f\x31\x51\x87\x24\xee\xa5\x92\xc5\x6e\x26\xe5\x5e\x73\x3c\x0c\x43\xf7\x0b\xcf\x60\x97\x06\x9d\xda\xa9\x4e\xe4\x6e\x54\xed\xef\x1f\xfc\x87\x86\xee\xc1\x27\x37\xa6\x37\xfc\xba\x0f\xf5\x60\x03\xd4\xdf\xd8\x8c\xdd\x06\x2b\x1c\x59\xae\x21\x01\x37\x62\xe4\x7a\xf7\xa5\x94\x61\x92\x33\xad\xfb\xe8\x9c\x58\x1a\xe1\x50\xf4\x46\xfd\xd8\x83\x0d\x2d\xee\x67\x1b\x70\x1f\xd7\x66\x2a\xc5\x1c\xb9\x13\xff\x52\xca\xdd\x30\xa4\xba\xd5\xd8\xd5\xa1\xde\xdd\x5b\x34\xb4\x55\x60\x19\x3f\x9d\x7e\xe5\xe0\xff\xfc\xe2\xdd\x4f\x6f\x5f\x1d\x9f\xfc\xf1\x76\xef\xb0\xd5\xa0\xf3\x40\xef\xfa\x46\x42\x0f\xf8\xbf\x37\x00\xff\x45\xb6\x98\x2d\xe8\xc3\x23\x70\xde\x2c\xe3\xf0\xa5\x94\x9f\xc2\x30\xbc\x6e\x4e\x33\x51\x8f\x88\x98\x68\x4c\xe9\x4a\xf9\xef\x4c\xe9\x29\xcb\x49\xa7\x1e\x86\xb9\x12\x2b\x25\xb6\xe2\x78\x36\x10\x76\x2a\x8a\x4e\x9c\x9d\xcc\x3a\xd6\x8e\xfa\xdb\x11\x08\x9e\x77\xee\xeb\xcd\x61\xfd\x44\x7d\x93\xd5\xad\x4d\x97\x96\xc7\x21\xae\xa1\x1c\x26\xee\x15\xcf\x73\x3a\xd1\x3c\x53\x42\xe5\x3e\x12\x4f\x56\x54\xf4\x31\xb5\x76\xf6\xb6\x54\x48\x04\xf5\x84\xfa\x87\x79\xb5\xa0\x4a\x42\x56\xa5\x03\xce\xb2\x91\x98\x67\xab\xc8\xeb\xb6\xdf\x59\xea\x0f\xe7\x84\x07\x2c\x33\xe8\xb8\xc0\xb6\x9d\x4f\xc6\x4f\x22\xd1\x94\x8a\x76\x0a\xd7\x45\x61\xe3\xcd\x28\xc8\xa4\x0c\x63\xa6\x2c\xba\x8f\xe3\x3a\xfc\x2b\x0a\x9c\x3e\xae\xf9\x70\x8d\x91\x15\x1e\x05\xf6\xac\x0d\x87\x48\xfc\xf6\xee\x8f\x37\x91\x38\x3a\x3a\x3a\x72\xd6\xa2\xbf\xbb\x46\xd6\xf1\x8b\xa4\xa0\x03\x57\x6e\x5d\x9f\x52\xe9\xa6\x3e\x2a\x9c\x54\x39\x53\x91\x58\xbe\x84\x4e\xa7\xd8\x15\xcd\x11\x60\x11\x63\x9a\x76\xe5\x73\xd4\x54\x5f\x11\x89\x5e\x8d\xcb\x2c\xe0\x8b\xff\x12\xe4\x8b\xa6\x45\x9c\x17\xf9\xbe\x09\xc2\x36\x98\x0f\xdb\x50\x25\x63\x53\xfc\x76\x7d\x56\xc6\x73\x6c\x12\xb7\x0d\xee\x63\x54\x5a\x8a\x2e\x66\x9a\x05\x41\xc6\x95\x36\xe7\xd6\x42\x47\xf0\xf4\xc7\xc1\x59\xf2\x43\x7b\xf2\x60\xa1\x12\xd0\xd2\xb5\x1d\x1c\x05\x16\x75\x14\x1c\x42\x14\xac\x8a\x9b\x45\x60\xa1\x83\x12\x05\xa3\x4e\x80\x85\xf1\x86\x15\x4e\x48\xb5\xbf\xff\x2c\x71\x10\xec\xef\xd8\x1b\x49\x90\xd6\x0f\xec\x41\x7c\x95\x35\x6d\xc5\xa2\xf5\x9d\x1d\xb9\x86\x2b\xcc\xf3\x7f\x5d\x0a\x79\x25\x6c\xdc\x4e\x99\xa6\x95\x45\xa5\x8d\x2c\xc0\x85\xc7\xa2\x73\x47\x8e\x28\x07\x1e\x77\xc9\xd3\x9b\x86\x5c\x2a\x26\xc0\x9c\x43\x23\x71\x61\x43\xa7\xf5\xe8\x54\xe6\xa9\x73\x67\x6f\x26\xbb\xa8\x69\x22\x01\x9a\x95\x47\x13\x08\x91\xb0\x62\xe6\x3e\x87\x5d\x8a\xff\x56\x95\xa5\xce\xba\x5d\x3c\x9d\xbd\x3f\xdb\x3b\xdc\xc6\x4f\x8b\xe2\x16\x5c\x65\xf5\x71\x32\x9e\x86\x07\x4f\x0f\x74\x14\x34\x56\x0f\x16\x9e\x0f\x5c\x78\x3c\x6c\x8b\x35\x36\x0e\x04\xac\xea\xde\x56\xb6\x7d\x89\x4c\xd7\x76\x7d\xab\x3e\x7a\x62\xfd\x07\x4f\xf4\xa5\x36\xb6\xff\x1c\x40\x29\x1a\xc6\xf3\xa5\x87\x10\xdb\x4b\x99\x52\x6c\xf1\x56\x4b\xc0\x0d\x16\xc3\xf1\x6b\x9f\xc7\xeb\xdf\xd3\x58\xfd\x00\xde\xca\xe7\x38\x1b\x3f\xbd\x33\x0a\x59\xb1\xb5\xb7\x26\xaa\x4c\xce\x1f\xc6\xf2\xb4\x5e\x78\x20\xd1\x5b\x38\xd5\xa2\xd2\x86\x99\x6a\xad\x63\x1f\x5f\x4c\xac\xfa\xca\x96\x2d\x82\x42\xc8\x74\xf9\xd9\xdb\xfb\x52\xb1\x79\x92\x96\xe2\x62\xb5\x86\x3d\x6b\x63\x3a\x79\x68\x20\x2f\xd2\xc9\x3a\x20\x9b\x56\x76\x0b\xf6\x06\x14\x09\x2b\x75\x95\x33\x83\x1a\xd0\x2d\x7c\x89\xb5\xec\x6d\x0f\x85\x85\x9c\x59\xfe\x6e\xbf\xde\x29\x65\x86\xc5\x4c\xb7\x4b\xc9\xd5\x9e\x6c\x1e\xfc\x5d\xef\xca\x15\xd7\x5a\x85\xb6\x70\x3e\x21\x3c\xbf\xc4\x7a\x8b\x05\xf8\x4a\x5f\x1a\xf9\x10\x52\x1f\x40\xa4\xfd\xe2\x98\x81\xcc\x3b\x64\xeb\xc6\xb0\x21\x07\xe9\xae\x2f\x01\xa6\xb5\x4c\x78\x73\x8f\x2c\x46\x73\x85\x28\xc0\xa6\xe0\xca\xd8\xa0\xcb\x5f\xf2\xdc\xe0\x56\x75\xff\xde\x95\x9c\x7f\x01\x65\x87\x8f\xba\xb6\xaa\x79\x55\x40\xa1\xbd\x39\xd8\xdc\x70\xd5\x3c\x45\x85\x29\xb8\xfc\x5e\xa1\xe4\xc2\x27\xa0\x6d\x53\xc9\xf0\xa3\x39\xef\x7d\xc2\xd4\x67\x54\x7c\x5f\x0c\x57\x3b\x7c\x10\xd5\x7d\x8f\x2d\xd6\xc2\x9c\x6b\x83\xe9\xfc\x35\x06\x5b\xf9\x56\x46\x76\xfb\x76\xc5\xb6\xd4\x75\xbb\xb8\x5e\x65\xfa\xc7\x63\xee\xd6\x56\x5d\x1d\xa1\xe5\x10\x69\x6f\x57\x47\x76\x07\x84\x56\x53\xb6\xd6\x94\x92\x0b\x43\xec\x63\x24\x70\x73\xa3\xed\xf5\x3d\xb5\x0f\x77\xf6\xc1\x4d\x37\x6d\xdb\xf7\x8d\x32\x34\xc9\xd4\xea\x36\x7f\x6b\xc9\xae\xfa\xad\xde\x23\x5a\xe5\x33\x95\xe6\xa8\xed\xd1\x94\x2b\xec\x6e\xb0\xaf\xb9\xd5\x3c\xf8\x86\xac\x07\x86\x2a\x9a\x9b\x11\x09\x72\xdb\x0c\xa0\x48\x09\xa9\x75\xd2\x1a\x80\x0b\x2f\x65\x7d\x11\x78\x56\x24\x33\xb7\xc4\x97\x0d\x99\xe8\x81\xd2\xa4\x61\xbc\x7e\xb2\xdc\x46\xcf\x1e\xed\xb8\x54\xe8\x91\xcf\xd5\x14\x05\x64\x5c\xd8\xf5\xff\xdc\x0c\x77\xb9\xb5\x3f\x4c\x9a\xc5\xba\x47\x93\xce\x98\xe2\x68\x6a\xb2\xe2\x15\xab\x75\xcf\xda\x09\x13\x10\xbb\xed\x2f\x4c\xa1\x2a\x37\x65\xe5\x7d\x70\xe1\xf2\xa7\x11\x3e\x80\xb7\xe6\x55\x7c\xbb\xc2\x36\x57\x19\x14\x9a\x4a\x09\x3d\x88\xd6\x79\x23\x6d\x9f\x78\x58\x6d\xbd\xc5\x3a\x74\x67\x83\x3d\xc2\xde\x92\x54\xee\xf7\x96\x28\x0c\x27\xc5\xdc\x3e\xbc\x7d\xf5\x73\xa5\xa9\x7a\x5f\x62\xe8\xd7\x8d\xb7\x02\xb2\x05\x77\x77\xc6\xbe\x79\xd1\xe8\xbe\xe7\x94\xaa\xd3\xfc\x01\x87\x1b\x57\x8d\xfd\xaf\x0b\xbd\xd3\x92\xf1\x44\xb1\x19\x2a\x7d\x9b\x05\xe7\xc6\x18\x50\x4b\x61\xb4\xd9\xa7\xc3\xde\x63\xa5\x4f\xd5\x32\xb8\xbb\x48\x1e\xbe\xaf\xbb\xd1\x4b\x43\xa3\xf4\x57\x33\x3d\xb7\x01\x03\xe3\x46\xb2\x1c\x1a\xe5\x9b\xfd\x78\x1d\x89\x76\x6d\xb7\xae\xff\xdd\xa1\x7f\xd7\x3b\xff\x0b\x00\x00\xff\xff\x03\xaf\xfd\x1d\xe5\x7f\x00\x00")

func graphstoreApiV1betaGraphstoreSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_graphstoreApiV1betaGraphstoreSwaggerJson,
		"graphstore/api/v1beta/graphstore.swagger.json",
	)
}

func graphstoreApiV1betaGraphstoreSwaggerJson() (*asset, error) {
	bytes, err := graphstoreApiV1betaGraphstoreSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "graphstore/api/v1beta/graphstore.swagger.json", size: 32741, mode: os.FileMode(420), modTime: time.Unix(1599403672, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v1alphaDepsDepsSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xc1\x6e\x82\x40\x10\x86\xef\x3c\xc5\x64\xdb\xa3\x91\xd6\xde\xbc\xf5\xd0\xa7\x68\x1a\xb3\xc2\x80\x63\x60\x67\x33\x3b\xd8\x10\xc3\xbb\x37\x8b\x44\x57\x23\xd1\xa4\x17\x20\x33\xdf\xff\xcf\xfe\x30\x1c\x33\x00\x13\x7e\x6d\x5d\xa3\x98\x35\x98\xd5\xf2\xcd\x2c\x62\x8d\x5c\xc5\x66\x0d\xb1\x0f\x60\x94\xb4\xc1\xd8\x2f\xd1\x87\xa2\xe1\xae\xdc\x58\x4f\xf9\xe1\xdd\x36\x7e\x67\xf3\x58\x1d\x2f\x4b\x2f\xac\x3c\x3a\x00\x98\x03\x4a\x20\x76\x51\x37\x3d\x82\x63\x85\x80\x6a\x32\x80\x61\x9c\x53\xb0\x0b\x5d\x8b\xc1\xac\xe1\xfb\xa4\xb2\xde\x37\x54\x58\x25\x76\xf9\x3e\xb0\x8b\xec\xcf\xc8\x7a\xe1\xb2\x2b\x9e\x64\xad\xee\x22\x78\x3c\x8d\x29\xb1\x22\x47\x91\x0b\x97\x54\xe3\x61\xb7\x5d\xf5\xe9\xfa\x73\x31\x86\xed\xfd\x98\x95\xb7\x7b\x2c\x74\x0a\x73\xc2\x3d\x8a\x12\x86\x84\x9e\xf8\x4d\x27\xcd\x55\x35\xf1\x09\x2a\xe4\x6a\x73\x6e\x0d\x8b\x8b\xf6\x60\x9b\x0e\x1f\x08\x17\x69\xaf\x62\x69\xad\xc6\xee\xb6\x57\x4c\x4c\xb3\xf4\x3e\x8d\x30\xd2\x39\xa5\x16\xbf\x44\x58\xfe\x13\x11\x6f\x0c\x9e\xce\x57\x70\x39\x1b\x8f\x9c\x62\x5c\xbb\x99\x7c\xe4\xf4\x63\x75\xdf\xb5\xc5\x10\x6c\xfd\xe8\xbd\xdd\x95\x96\xa8\x96\x9a\x30\x27\xb5\x22\xb6\xbf\x3e\x11\x29\xb6\xb7\x3c\x80\x79\x15\xac\xa2\xe2\x25\x4f\x76\x2b\x4f\x57\x2a\xe1\x87\xb9\xef\x14\xff\x83\x6c\xc8\xfe\x02\x00\x00\xff\xff\xa6\xcd\x5e\xf0\x87\x03\x00\x00")

func v1alphaDepsDepsSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_v1alphaDepsDepsSwaggerJson,
		"v1alpha/deps/deps.swagger.json",
	)
}

func v1alphaDepsDepsSwaggerJson() (*asset, error) {
	bytes, err := v1alphaDepsDepsSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v1alpha/deps/deps.swagger.json", size: 903, mode: os.FileMode(420), modTime: time.Unix(1599403669, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v1alphaExtractorExtractorSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\xc1\x6e\xdb\x38\x10\xbd\xfb\x2b\x08\xee\x1e\x17\x71\x36\x7b\xcb\x2d\xc8\x66\x81\x3d\x04\x08\x16\xd8\x53\x11\x04\x13\x72\x24\x33\x90\x48\x66\x38\x4c\xe3\x16\xfe\xf7\x82\x8c\x6c\x4b\x8a\x95\xd8\x52\x5b\xb7\x40\x75\xa2\x44\xce\xe3\xbc\xe1\x9b\x19\xea\xf3\x4c\x08\x19\x3e\x42\x59\x22\xc9\x73\x21\xcf\x4e\x4e\xe5\x1f\xe9\x9b\xb1\x85\x93\xe7\x22\xcd\x0b\x21\xd9\x70\x85\x69\x5e\xa3\x0f\xaa\x72\x51\xdf\x81\x37\xf3\xa7\x3f\xa1\xf2\x0b\x98\xe3\x33\x13\x28\x76\xb4\x1d\x9d\x78\x72\xec\x32\x96\x10\xf2\x09\x29\x18\x67\x13\x42\x33\x14\xd6\xb1\x08\xc8\x72\x26\xc4\x2a\xef\xa8\x9c\x0d\xb1\xc6\x20\xcf\xc5\x87\x17\x2b\xf0\xbe\x32\x0a\xd8\x38\x3b\x7f\x08\xce\xa6\xb5\xb7\x79\xad\x27\xa7\xa3\xda\x73\x2d\xf0\x22\x6c\xa9\x6c\x9c\xd6\xe8\xd1\x6a\xb4\xca\x60\x58\xfb\xbd\x59\x96\xec\x5c\x68\xbf\x0b\x21\x9d\x47\xca\x3b\xfc\xab\x13\x93\xbf\xd7\x00\xcb\xab\x35\xeb\xbb\x66\xd4\xf0\xce\x56\x84\xc1\x3b\x1b\x30\x74\xc0\x84\x90\x67\xa7\xa7\xbd\x4f\x22\x05\x38\x28\x32\x9e\x9b\x68\x5d\x88\x10\x95\xc2\x10\x8a\x58\x89\x35\xd2\x49\x0b\x3e\x1b\x05\xb5\xc0\x1a\x5e\x81\x09\x21\x7f\x27\x2c\x12\xce\x6f\x73\x8d\x85\xb1\x26\xe1\x86\xed\x29\x35\xee\xfe\xd7\x00\xcb\x8e\xf9\xaa\xf5\xb6\x6a\xef\x28\x35\x16\x10\x2b\x7e\xdf\x7b\x2b\xa2\xc5\x67\x8f\x8a\x51\x0b\x24\x72\xb4\x21\x31\x95\x03\x45\xcb\xa6\xc6\xab\x04\xfa\x86\xdf\xb3\x1d\x0c\xa4\x07\x82\x1a\x19\x69\x2b\xa0\x97\xa7\x47\xc7\x42\x9d\x55\x7f\xef\xf4\xb2\xef\xaf\xb1\x43\x33\x84\x8f\xd1\x10\x26\x8d\x30\x45\xfc\xea\x67\xf5\x18\x31\xf0\x3e\x94\x6f\x5b\x94\x19\xca\x3e\xd9\x5d\x02\xde\xc2\xde\xce\xda\x70\x4d\xf4\x06\xb2\xa7\x06\x56\x8b\xc9\xb9\x73\x9d\x51\x7e\x92\xcc\xc9\xce\xfe\xca\x9b\xe6\xf9\x91\xf3\xa6\x39\xa9\xa3\x64\xcd\xa6\xb9\xb5\x3c\xdb\xb6\xa2\xd4\x4c\xb7\x68\xed\xfc\xe1\xa5\xcf\x01\x74\xf7\x0f\xd8\xea\x26\xa9\xef\x79\x24\x36\xbd\x94\x90\x8e\x4a\xb0\xe6\x13\x34\x02\xea\x24\xcb\x1a\x2b\x30\x19\x5b\xca\x9d\x07\x5b\x3b\x1d\x73\x83\x3f\xd8\xb2\x69\xe7\x97\xce\x06\x26\x30\xb6\x2f\xee\xbd\x40\x82\x72\xfe\x75\x96\xaf\x2d\x81\x08\xba\x62\x91\x86\xb1\xee\xaf\x7f\x63\xaf\x8e\x9e\x77\xd6\xb5\xee\x51\x5c\x83\x85\x12\x6b\xb4\xfc\x8f\xe9\x84\xe5\xe0\x83\xa9\xc0\x96\x11\xca\x51\xa1\x0d\xcb\xc0\x58\x8f\xb2\x74\x91\x14\xfe\x4f\xd5\x18\xe3\xa3\x6b\x69\x8c\x69\xbb\x1d\x4d\xd7\xd1\xee\x8a\xd2\x4b\xd7\x03\xd4\x35\xd4\xc3\x27\x08\x2b\x60\x2a\xc6\xa9\xf6\x8c\x88\x56\x61\x2a\xbc\x74\x96\xd1\xf2\x60\xb4\x7a\x8e\xe4\x39\xd0\x3a\xc7\x02\xaa\x9b\xdd\x6e\xbd\xe9\xc1\x50\x57\x89\x07\xe8\x74\xcf\xf0\x36\xad\x72\x42\x7c\xeb\x4e\x09\xf8\x4e\x9a\xea\xd5\x9d\x31\x0a\xeb\x74\xbb\x63\xe9\xab\xfb\xcb\x35\x3a\x64\xe3\xcb\xf9\xc0\x35\x6d\x92\x1e\x58\x2d\x50\xdf\x1c\x9b\x59\xfe\xad\xbe\x8f\xc5\x85\x9d\x74\x61\x48\xeb\xef\x0e\x49\xbc\x76\x99\x86\x2a\xbe\x57\xdf\x3b\x41\x28\x1c\xd5\xc0\xf9\xda\xb7\x64\x7c\x2f\x9b\x3b\x17\xd4\x09\x14\xb1\x07\xb0\x37\x3f\xe5\xf4\x20\x3d\x63\x19\x4b\xa4\x21\x7e\xc6\xf2\x5f\x67\x03\x6d\x11\x43\x18\x79\x11\xd0\xc8\x60\xaa\x6f\x56\x83\xda\x92\xda\x47\x89\xe9\x52\x3b\x5b\xcd\xbe\x04\x00\x00\xff\xff\xd5\xd5\x2f\xbd\x3b\x12\x00\x00")

func v1alphaExtractorExtractorSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_v1alphaExtractorExtractorSwaggerJson,
		"v1alpha/extractor/extractor.swagger.json",
	)
}

func v1alphaExtractorExtractorSwaggerJson() (*asset, error) {
	bytes, err := v1alphaExtractorExtractorSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v1alpha/extractor/extractor.swagger.json", size: 4667, mode: os.FileMode(420), modTime: time.Unix(1599403670, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v1alphaSchemaSchemaSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xc1\x6e\xfa\x30\x0c\xc6\xef\x7d\x0a\x2b\xff\xff\x11\xd1\x8d\xdd\xb8\xed\xb0\xa7\x98\x26\x14\x5a\xb7\x18\xb5\x49\x64\xbb\x4c\x15\xea\xbb\x4f\x29\x1d\x04\x44\x05\xd2\x4e\xa9\xec\xdf\xf7\x39\x5f\xeb\x1e\x33\x00\x23\xdf\xb6\xae\x91\xcd\x1a\xcc\x6a\xf9\x62\x16\xb1\x46\xae\xf2\x66\x0d\xb1\x0f\x60\x94\xb4\xc1\xd8\x2f\x31\x48\xd1\xf8\xae\xdc\xd8\x40\xf9\xe1\xd5\x36\x61\x67\x73\x29\x76\xd8\xfe\x1e\xcb\xc0\x5e\xfd\xe8\x02\x60\x0e\xc8\x42\xde\x45\xed\xf4\x08\xce\x2b\x08\xaa\xc9\x00\x86\x71\x56\xe1\x9d\x74\x2d\x8a\x59\xc3\xe7\x49\x65\x43\x68\xa8\xb0\x4a\xde\xe5\x7b\xf1\x2e\xb2\x5f\x23\x1b\xd8\x97\x5d\xf1\x24\x6b\x75\x17\xc1\xe3\x69\x4c\x89\x15\x39\x8a\x9c\x5c\x92\x8d\x97\xdd\x76\xd5\xbb\xeb\xcf\xc5\x18\xb8\x0f\x63\x5e\xbf\xdd\x63\xa1\x53\x98\x13\x1e\x90\x95\x50\x12\x7a\xe2\x37\x1d\x37\x57\xd5\xc4\x47\x94\xc9\xd5\xe6\xdc\x1a\x16\x17\xed\xc1\x36\x1d\x3e\x10\x2e\xd2\x5e\xe5\xb9\xb5\x1a\xbb\xdb\x5e\x31\x31\xcd\xd2\x73\x1a\x61\xb8\x73\x4a\x2d\x7e\x30\x7b\xfe\x4b\x44\xbc\x31\x78\x3a\x5f\xe1\xcb\xd9\x78\xe4\x14\xe3\xea\xcd\xe4\x23\xa7\x6f\xab\xfb\xae\x2d\x8a\xd8\xfa\xd1\x7b\xbb\x2b\x2d\x51\x2d\x35\x32\x27\xb5\xcc\xb6\xbf\xbe\x11\x29\xb6\xb7\x3c\x80\xf9\xcf\x58\x45\xc5\xbf\x3c\xd9\xad\x3c\x5d\xa9\x84\x1f\xe6\xbe\x53\xfc\x0f\xb2\x21\xfb\x09\x00\x00\xff\xff\x9b\xfc\xdd\x16\x8b\x03\x00\x00")

func v1alphaSchemaSchemaSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_v1alphaSchemaSchemaSwaggerJson,
		"v1alpha/schema/schema.swagger.json",
	)
}

func v1alphaSchemaSchemaSwaggerJson() (*asset, error) {
	bytes, err := v1alphaSchemaSchemaSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v1alpha/schema/schema.swagger.json", size: 907, mode: os.FileMode(420), modTime: time.Unix(1599403670, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v1alphaStoreStoreSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x41\x6f\xdb\x3c\x0c\xbd\xfb\x57\x08\xfa\xbe\x63\xd0\xac\xe9\x2d\xb7\x02\xed\x86\x0d\xc3\x56\x74\x03\x76\x18\x8a\x42\xb1\x68\x47\x9d\x2d\x09\x14\x95\x21\x28\xfc\xdf\x07\xc9\x89\xab\xa6\x76\xe3\x20\xc9\x25\x09\xc4\xf7\x1e\xf9\x44\x8a\x79\xce\x18\xe3\xee\xaf\x28\x4b\x40\x3e\x67\x7c\x76\xf1\x81\x4f\xc2\x99\xd2\x85\xe1\x73\x16\xe2\x8c\x71\x52\x54\x41\x88\x4b\xb0\x2e\xaf\x8c\x97\x8f\xc2\xaa\xe9\xea\x52\x54\x76\x29\xa6\x8e\x0c\x42\xfb\x79\x61\xd1\x90\x89\x1a\x8c\xf1\x15\xa0\x53\x46\x07\xe6\xe6\x27\xd3\x86\x98\x03\xe2\x19\x63\x4d\xcc\x94\x1b\xed\x7c\x0d\x8e\xcf\xd9\xef\x96\x25\xac\xad\x54\x2e\x48\x19\x3d\x7d\x72\x46\x07\xec\x43\xc4\x5a\x34\xd2\xe7\x23\xb1\x82\x96\x01\xf8\xdc\xa6\x91\x50\x28\xad\x02\xce\xbd\xf8\x8a\xc5\x2e\x7c\x71\xad\xd7\xdd\x61\xb0\xbb\xb6\xd1\xad\x59\x3c\x41\x4e\x1b\x33\x2d\xdc\x02\x92\x02\x97\xa0\x37\xf8\x47\x8f\xd5\xab\xd3\x44\xc7\x11\x2a\x5d\xf2\x2e\xd4\x4c\x5e\xb8\x2b\x51\x79\xd8\x43\x9c\xa4\xb1\xc2\x60\x2d\x28\x44\x17\x6b\x82\x44\x34\x4b\xbf\x37\x29\x38\x7a\x4d\xaa\x86\x5b\x44\x83\xc7\x58\x84\x1d\x81\xd1\xfe\x72\x23\x07\xed\x29\x4d\x10\x06\x6f\xc0\x9f\xd2\x74\x35\xeb\x57\xad\xc1\x39\x51\xee\xbb\xb7\x5e\xaa\x04\x12\xaa\x72\x43\x54\x81\x28\xd6\xaf\x2b\x52\x04\xf5\x2e\x9e\x31\xfe\x3f\x42\x11\x18\xff\x4d\x93\xd9\x9a\xa6\x23\x95\xe0\x9b\x3d\x7d\x8a\x8f\xe7\x06\x2a\x20\xb8\x07\x67\x8d\x76\xf0\x4e\xbb\xde\x52\x3f\x2a\x2d\x47\x10\xf7\xf6\xd9\x0a\x85\x67\xbb\x9b\x58\xe9\x27\x14\x76\xf9\x99\xa0\xbe\x13\x0a\x0f\xbe\xa2\x8e\x7d\x8c\xc9\x72\x2b\xf2\xb3\x25\x1e\x3c\x43\x7f\x2e\x4f\xf2\x62\x53\xc5\xd9\xc9\x15\xaf\x4e\xad\x08\x3a\x37\x32\x30\x77\x74\xc7\x34\xfb\x76\xcb\xed\x55\xee\x1a\x72\x23\x48\x9c\x6f\x19\x0e\x94\xd4\x33\x49\x3b\xb9\x38\x68\x5f\x77\x7f\x3a\xf1\xe4\xfe\xfa\x57\x52\x0a\xff\xf2\xe3\xfb\xb7\x6d\xfa\x87\x8e\x26\xa1\x10\xbe\x8a\xf5\x05\xfc\x3b\xc5\xc4\xc7\x70\xcc\x7e\x96\x6f\xb7\xe1\x98\xbe\xf4\xf7\x43\xf7\x2c\xed\x03\xd5\x86\x1b\xf0\x55\x39\x3a\xc5\xaa\xea\x5b\x3d\x67\x5a\x55\x07\xaf\xa9\x3b\x3f\xc6\x62\xb6\x65\x37\x59\x93\xfd\x0b\x00\x00\xff\xff\x74\x37\xef\xc2\x8b\x09\x00\x00")

func v1alphaStoreStoreSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_v1alphaStoreStoreSwaggerJson,
		"v1alpha/store/store.swagger.json",
	)
}

func v1alphaStoreStoreSwaggerJson() (*asset, error) {
	bytes, err := v1alphaStoreStoreSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v1alpha/store/store.swagger.json", size: 2443, mode: os.FileMode(420), modTime: time.Unix(1599403670, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _v1alphaTrackerTrackerSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5b\x6f\xdb\x36\x14\x7e\xf7\xaf\x20\xb4\x3d\x16\x71\x96\xbd\xe5\xad\x58\x57\x60\xc0\x8a\x01\xcb\xf6\x34\x04\x06\x4d\x1d\xcb\x6c\x25\x92\xe1\x25\x9b\x57\xf8\xbf\x17\x92\xa8\x48\xd4\xcd\x96\x28\xdf\x50\x11\x08\x62\x9b\xe2\xd1\xb9\x7e\xe7\x13\xa9\xaf\x0b\x84\x02\xf5\x2f\x8e\x22\x90\xc1\x23\x0a\x1e\xee\xee\x83\x77\xe9\x6f\x94\x6d\x78\xf0\x88\xd2\x79\x84\x02\x4d\x75\x0c\xe9\x7c\x08\x42\x91\x98\x9b\x70\x85\x05\x5d\xbe\xfe\x84\x63\xb1\xc5\x4b\x2d\x31\xf9\x02\xb2\xf8\x7f\x27\x24\xd7\x3c\x93\x83\x50\xf0\x0a\x52\x51\xce\xd2\xd5\xf6\x23\x62\x5c\x23\x05\x3a\x58\x20\xb4\xcf\xee\x46\x38\x53\x26\x01\x15\x3c\xa2\x7f\xf2\x55\x58\x88\x98\x12\xac\x29\x67\xcb\xcf\x8a\xb3\xf4\xda\xe7\xec\x5a\x21\x79\x68\xc8\x91\xd7\x62\xbd\x55\xa5\x19\x6f\x0a\x47\x12\x8b\xed\xf2\x6b\x8c\x59\x64\x70\x04\xfb\x65\x08\x02\x58\x08\x8c\x50\x28\xaf\x47\x28\x88\x40\x57\xbe\x22\x14\x70\x01\x32\xbb\xd3\x6f\x61\x6a\xd1\x87\x62\xdd\xee\x09\xe4\x2b\x25\xb0\xfa\x9d\x2a\xfd\xa1\x2a\xed\x5d\xb9\x58\x82\x12\x9c\x29\xe7\x16\xd9\xc4\xc3\xfd\x7d\xed\x27\x94\xfa\x5a\x11\x49\x85\xb6\xce\x7b\x8f\x94\x21\x04\x94\xda\x98\x18\x15\x92\xee\x2a\xe2\xb3\x45\x8a\x6c\x21\xc1\x0d\x61\x08\x05\x3f\x4a\xd8\xa4\x72\x7e\x58\x86\xb0\xa1\x8c\xa6\x72\x55\x11\xb2\xba\xd6\x7f\x5a\xf9\x81\x23\x65\x5f\xf9\xb6\xaf\xde\x38\x08\x61\x83\x4d\xac\x0f\x1b\xc1\x90\x61\xf0\x9f\x00\xa2\x21\x44\x20\x25\x97\x6f\xb6\xf8\x9a\x22\x0d\xd3\x34\x81\x5f\x53\xa1\x3d\x7a\x2f\x5a\x2c\x08\x04\x96\x38\x01\x0d\xb2\x4c\xab\x7c\xd4\xcc\x61\x38\xc9\xea\xa0\xc8\x9c\xba\xce\x34\xb3\x32\x4d\xbb\xfa\x8c\x84\x17\x43\x25\xa4\x59\xa3\xa5\x81\xda\xac\xde\x89\x4c\xae\xd2\x92\xb2\x28\xe8\xf2\x73\x87\x36\x5c\x46\x98\xd1\xff\xb3\xbc\x6c\xd7\xe8\xc5\x80\xdc\xf5\xa8\xb4\xc1\xb1\x9a\x56\xa7\x84\x87\x26\xee\xf0\xcf\xc4\xda\xbc\x7d\x7e\xae\x44\x54\xe3\xa8\x1e\xcb\x66\xb5\x96\x62\x9e\x17\x55\x61\xd6\xc0\x23\x00\x43\x4f\x08\x17\xfa\x06\xc1\x42\xcf\x50\x51\x8c\x19\x2a\x66\xa8\xd8\xe2\x65\x6e\xcd\x20\x58\xf8\x94\x2d\xa9\x42\xc2\xed\x00\x41\xae\xfb\x0c\x02\x76\x74\xa4\xb8\xe8\x04\x00\x9f\x04\xa7\x4c\x43\x4a\xdc\x6b\xd3\x1b\x2e\x13\xac\xed\x05\x3f\x3f\x0c\x2d\x47\xc2\x0d\xd3\x57\xa1\xec\xd1\xd5\xea\x14\xd0\xd0\x4a\x5d\x26\x98\xe1\x28\xd3\xdf\xa3\x62\x3f\x59\x21\xb7\x53\xb8\xb9\xc2\x73\xe5\xda\xd1\x51\x0d\x46\xc6\xd7\xd2\x27\x53\x5f\x5c\x89\x2a\x5f\x28\x0b\xaf\xab\x61\xfb\x41\x80\xe2\x46\x12\xf0\x43\x80\xa7\x4c\xc6\x0d\x71\x78\xab\xf0\x8c\x00\x76\x8c\x22\xf0\xe7\xaf\xbd\x99\xc2\xe7\xe3\x34\x88\xa0\x6c\x15\x0f\x80\x82\xbc\x8e\x6e\x93\xbe\xe7\xba\xcf\x10\x60\xc7\x4c\xdf\x2f\x41\xdf\x9d\x02\x1a\x5a\xa9\x79\x36\x57\xeb\x55\x70\x35\xa4\x60\xff\xca\xd6\xdf\x44\xc5\x66\xaa\xce\xc5\x6a\x47\x47\x01\xac\x79\xd8\x48\xf2\x3c\xff\xdb\x66\xfa\x37\xdb\x46\xc6\xa9\x40\xd5\x17\x03\x4a\x1f\x63\xef\x34\x15\xf2\x76\x9e\x56\x51\xa9\x3c\xfd\x0a\x41\xa8\x72\x5b\x2b\x7f\xfc\x4b\x80\xe9\x8f\x34\x76\x98\x6f\x51\xf1\x7c\xfd\x19\x48\x89\x24\x81\x90\x69\x19\x69\x5a\xab\x8b\x92\x1f\xd5\xaa\xa5\xab\x87\x57\x63\xab\x76\x4a\x43\x32\x6a\x65\xe6\x91\xbf\x65\x3c\x66\xb1\x43\xa1\x46\xac\xb7\x74\x67\xc4\xca\xf2\x34\x74\xf0\xd2\x8e\x33\x4a\x67\x3d\x96\x12\xbb\x29\x1e\x50\x0d\x49\xfd\xfa\xce\xfc\xb5\xd8\xea\xa6\x4a\x3b\xa8\xef\x5b\xd1\x39\x3b\xfa\x5d\x9b\xcd\x7b\xb6\xf3\xc9\xa9\xf4\xfa\x95\x19\x17\xdc\x57\x1c\x9b\x43\xb1\x71\x3c\x54\xf6\xb0\xf5\x4e\x57\xaa\xab\xdd\x42\x07\xca\x3c\x4c\x84\x9a\x80\xa3\xed\x23\x3c\xec\x34\xaf\xad\x4b\x77\xf7\x68\x27\xa5\x41\xa9\x91\x45\x1c\x82\xc6\x34\x3e\x59\x4e\x56\x53\x6a\x40\x26\xda\x38\x3d\x69\x09\x38\xf1\x8e\x56\x24\x05\x59\x9d\xc6\xf3\x5b\xad\xc5\x89\x44\x7b\x04\x35\xd3\x4a\x69\xac\x4d\x67\x60\x6f\x2f\x27\xf2\x76\x9e\x23\x9b\xba\x54\xcf\xb3\x2d\x60\x45\x38\x53\x5a\x62\xca\xea\xd4\xec\xb8\xfe\x47\xb8\x98\xa2\x0f\x1c\xf3\xa4\xbd\x77\xc8\xf1\xe6\x68\x75\x7b\x62\x90\xd3\x8f\x8b\xc5\x60\x3c\xef\x18\xda\xc0\xfb\x7c\x50\x67\x11\x67\x75\xc1\x99\x39\x50\x8f\x1f\x9e\x1a\x9b\xaf\x43\xfd\x30\x92\x29\x0c\xc9\xe5\xca\xb2\x6c\xf3\xdb\xcb\x6e\xfb\x98\x50\x52\xac\xe2\x51\xe1\x3b\xce\x85\x43\x6f\xa2\x79\xb8\xe6\x8c\xcc\xb9\x11\xd9\x21\xed\xa9\xff\xfd\x9a\x09\x1c\xa0\x6f\xc5\xfc\xfa\xe1\xa4\x87\xed\xcd\xf7\x31\x26\x35\xdc\x2a\x6d\x15\xb6\x90\x3e\xd2\x68\xf7\x55\x0a\x0f\x9b\x45\x0f\x0e\x8c\x67\x93\xf9\xce\xe2\xf4\x24\xf5\xb4\x01\x72\x7a\xed\xb8\xc0\xd4\x36\xc9\xbf\x97\xc0\x34\x8f\x42\x4e\x10\x18\xdb\xfc\x7d\x02\x33\x09\x44\x9e\xd8\x58\x17\x26\x46\x1b\xed\xc2\x8c\x0f\x2a\x36\xf8\xf7\xc1\x48\x15\x94\x7d\x00\x03\x18\x52\x91\xc7\xd8\xed\xcf\x14\x1b\x07\xfd\x07\xf5\xac\xc7\xca\xb1\x7a\x0a\x2f\xf6\xd9\xfd\x04\x58\x92\xed\x04\xec\x90\x60\x46\xa0\x93\x24\xaf\x39\x8f\x01\xb3\xce\x6d\x31\x3b\xdd\xea\x83\x92\x5b\xfc\xd1\x60\xd3\xbd\xb5\xd0\x64\xbf\xbd\xf2\x53\xf2\x76\x9a\x3b\xd8\x06\xf4\xb1\xb9\x1d\x37\x36\x2f\x2c\x98\x0c\x94\x38\xa8\x22\x8a\xcc\xf0\x47\x3e\xd9\xc8\xae\xc3\x9e\x75\xf3\xf2\x40\x5e\x5c\x09\xe7\xbc\xcc\x56\xfa\x08\xed\xae\x87\xb1\x9e\x8f\x0c\x4c\xd4\x1f\xdd\x83\xb7\x2b\xeb\x13\xc5\x61\xdb\xc9\x9c\xd8\x7b\xc2\x37\xdc\x99\xee\x69\xb3\xcf\x69\x4e\x2a\x88\xb2\x68\xb2\xf6\xd3\xaa\x75\xfb\xd9\x95\x87\xda\x17\x3f\x25\xfc\xe5\x76\x76\x88\xfb\x22\xd2\x84\x40\xef\xad\x8c\x41\x94\xab\xd8\xef\x3f\x0f\x71\x5d\xa4\x7f\xfb\xc5\xb7\x00\x00\x00\xff\xff\x98\xf8\xeb\x6a\x5a\x3b\x00\x00")

func v1alphaTrackerTrackerSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_v1alphaTrackerTrackerSwaggerJson,
		"v1alpha/tracker/tracker.swagger.json",
	)
}

func v1alphaTrackerTrackerSwaggerJson() (*asset, error) {
	bytes, err := v1alphaTrackerTrackerSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v1alpha/tracker/tracker.swagger.json", size: 15194, mode: os.FileMode(420), modTime: time.Unix(1599403671, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"depscloud/api/v1beta/core.swagger.json":        depscloudApiV1betaCoreSwaggerJson,
	"depscloud/api/v1beta/manifest.swagger.json":    depscloudApiV1betaManifestSwaggerJson,
	"depscloud/api/v1beta/rpc.swagger.json":         depscloudApiV1betaRpcSwaggerJson,
	"graphstore/api/v1beta/graphstore.swagger.json": graphstoreApiV1betaGraphstoreSwaggerJson,
	"v1alpha/deps/deps.swagger.json":                v1alphaDepsDepsSwaggerJson,
	"v1alpha/extractor/extractor.swagger.json":      v1alphaExtractorExtractorSwaggerJson,
	"v1alpha/schema/schema.swagger.json":            v1alphaSchemaSchemaSwaggerJson,
	"v1alpha/store/store.swagger.json":              v1alphaStoreStoreSwaggerJson,
	"v1alpha/tracker/tracker.swagger.json":          v1alphaTrackerTrackerSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("nonexistent") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"depscloud": &bintree{nil, map[string]*bintree{
		"api": &bintree{nil, map[string]*bintree{
			"v1beta": &bintree{nil, map[string]*bintree{
				"core.swagger.json":     &bintree{depscloudApiV1betaCoreSwaggerJson, map[string]*bintree{}},
				"manifest.swagger.json": &bintree{depscloudApiV1betaManifestSwaggerJson, map[string]*bintree{}},
				"rpc.swagger.json":      &bintree{depscloudApiV1betaRpcSwaggerJson, map[string]*bintree{}},
			}},
		}},
	}},
	"graphstore": &bintree{nil, map[string]*bintree{
		"api": &bintree{nil, map[string]*bintree{
			"v1beta": &bintree{nil, map[string]*bintree{
				"graphstore.swagger.json": &bintree{graphstoreApiV1betaGraphstoreSwaggerJson, map[string]*bintree{}},
			}},
		}},
	}},
	"v1alpha": &bintree{nil, map[string]*bintree{
		"deps": &bintree{nil, map[string]*bintree{
			"deps.swagger.json": &bintree{v1alphaDepsDepsSwaggerJson, map[string]*bintree{}},
		}},
		"extractor": &bintree{nil, map[string]*bintree{
			"extractor.swagger.json": &bintree{v1alphaExtractorExtractorSwaggerJson, map[string]*bintree{}},
		}},
		"schema": &bintree{nil, map[string]*bintree{
			"schema.swagger.json": &bintree{v1alphaSchemaSchemaSwaggerJson, map[string]*bintree{}},
		}},
		"store": &bintree{nil, map[string]*bintree{
			"store.swagger.json": &bintree{v1alphaStoreStoreSwaggerJson, map[string]*bintree{}},
		}},
		"tracker": &bintree{nil, map[string]*bintree{
			"tracker.swagger.json": &bintree{v1alphaTrackerTrackerSwaggerJson, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
