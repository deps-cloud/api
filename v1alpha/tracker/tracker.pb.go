// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: depscloud_api/v1alpha/tracker/tracker.proto

package tracker

import (
	context "context"
	fmt "fmt"
	deps "github.com/depscloud/api/v1alpha/deps"
	schema "github.com/depscloud/api/v1alpha/schema"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SourceRequest struct {
	Source               *schema.Source                   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	ManagementFiles      []*deps.DependencyManagementFile `protobuf:"bytes,2,rep,name=managementFiles,proto3" json:"managementFiles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *SourceRequest) Reset()         { *m = SourceRequest{} }
func (m *SourceRequest) String() string { return proto.CompactTextString(m) }
func (*SourceRequest) ProtoMessage()    {}
func (*SourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f72fab759920ea61, []int{0}
}
func (m *SourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceRequest.Unmarshal(m, b)
}
func (m *SourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceRequest.Marshal(b, m, deterministic)
}
func (m *SourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceRequest.Merge(m, src)
}
func (m *SourceRequest) XXX_Size() int {
	return xxx_messageInfo_SourceRequest.Size(m)
}
func (m *SourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SourceRequest proto.InternalMessageInfo

func (m *SourceRequest) GetSource() *schema.Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *SourceRequest) GetManagementFiles() []*deps.DependencyManagementFile {
	if m != nil {
		return m.ManagementFiles
	}
	return nil
}

type ListRequest struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f72fab759920ea61, []int{1}
}
func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type TrackResponse struct {
	Tracking             bool     `protobuf:"varint,1,opt,name=tracking,proto3" json:"tracking,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrackResponse) Reset()         { *m = TrackResponse{} }
func (m *TrackResponse) String() string { return proto.CompactTextString(m) }
func (*TrackResponse) ProtoMessage()    {}
func (*TrackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f72fab759920ea61, []int{2}
}
func (m *TrackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackResponse.Unmarshal(m, b)
}
func (m *TrackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackResponse.Marshal(b, m, deterministic)
}
func (m *TrackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackResponse.Merge(m, src)
}
func (m *TrackResponse) XXX_Size() int {
	return xxx_messageInfo_TrackResponse.Size(m)
}
func (m *TrackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TrackResponse proto.InternalMessageInfo

func (m *TrackResponse) GetTracking() bool {
	if m != nil {
		return m.Tracking
	}
	return false
}

type ListSourceResponse struct {
	Page                 int32            `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Count                int32            `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Sources              []*schema.Source `protobuf:"bytes,3,rep,name=sources,proto3" json:"sources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListSourceResponse) Reset()         { *m = ListSourceResponse{} }
func (m *ListSourceResponse) String() string { return proto.CompactTextString(m) }
func (*ListSourceResponse) ProtoMessage()    {}
func (*ListSourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f72fab759920ea61, []int{3}
}
func (m *ListSourceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSourceResponse.Unmarshal(m, b)
}
func (m *ListSourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSourceResponse.Marshal(b, m, deterministic)
}
func (m *ListSourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSourceResponse.Merge(m, src)
}
func (m *ListSourceResponse) XXX_Size() int {
	return xxx_messageInfo_ListSourceResponse.Size(m)
}
func (m *ListSourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSourceResponse proto.InternalMessageInfo

func (m *ListSourceResponse) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListSourceResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListSourceResponse) GetSources() []*schema.Source {
	if m != nil {
		return m.Sources
	}
	return nil
}

type ListModuleResponse struct {
	Page                 int32            `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Count                int32            `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Modules              []*schema.Module `protobuf:"bytes,3,rep,name=modules,proto3" json:"modules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListModuleResponse) Reset()         { *m = ListModuleResponse{} }
func (m *ListModuleResponse) String() string { return proto.CompactTextString(m) }
func (*ListModuleResponse) ProtoMessage()    {}
func (*ListModuleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f72fab759920ea61, []int{4}
}
func (m *ListModuleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListModuleResponse.Unmarshal(m, b)
}
func (m *ListModuleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListModuleResponse.Marshal(b, m, deterministic)
}
func (m *ListModuleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListModuleResponse.Merge(m, src)
}
func (m *ListModuleResponse) XXX_Size() int {
	return xxx_messageInfo_ListModuleResponse.Size(m)
}
func (m *ListModuleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListModuleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListModuleResponse proto.InternalMessageInfo

func (m *ListModuleResponse) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListModuleResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListModuleResponse) GetModules() []*schema.Module {
	if m != nil {
		return m.Modules
	}
	return nil
}

type ManagedSource struct {
	Source               *schema.Source  `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Manages              *schema.Manages `protobuf:"bytes,2,opt,name=manages,proto3" json:"manages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ManagedSource) Reset()         { *m = ManagedSource{} }
func (m *ManagedSource) String() string { return proto.CompactTextString(m) }
func (*ManagedSource) ProtoMessage()    {}
func (*ManagedSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_f72fab759920ea61, []int{5}
}
func (m *ManagedSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManagedSource.Unmarshal(m, b)
}
func (m *ManagedSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManagedSource.Marshal(b, m, deterministic)
}
func (m *ManagedSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedSource.Merge(m, src)
}
func (m *ManagedSource) XXX_Size() int {
	return xxx_messageInfo_ManagedSource.Size(m)
}
func (m *ManagedSource) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedSource.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedSource proto.InternalMessageInfo

func (m *ManagedSource) GetSource() *schema.Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *ManagedSource) GetManages() *schema.Manages {
	if m != nil {
		return m.Manages
	}
	return nil
}

type ManagedModule struct {
	Manages              *schema.Manages `protobuf:"bytes,1,opt,name=manages,proto3" json:"manages,omitempty"`
	Module               *schema.Module  `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ManagedModule) Reset()         { *m = ManagedModule{} }
func (m *ManagedModule) String() string { return proto.CompactTextString(m) }
func (*ManagedModule) ProtoMessage()    {}
func (*ManagedModule) Descriptor() ([]byte, []int) {
	return fileDescriptor_f72fab759920ea61, []int{6}
}
func (m *ManagedModule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManagedModule.Unmarshal(m, b)
}
func (m *ManagedModule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManagedModule.Marshal(b, m, deterministic)
}
func (m *ManagedModule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedModule.Merge(m, src)
}
func (m *ManagedModule) XXX_Size() int {
	return xxx_messageInfo_ManagedModule.Size(m)
}
func (m *ManagedModule) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedModule.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedModule proto.InternalMessageInfo

func (m *ManagedModule) GetManages() *schema.Manages {
	if m != nil {
		return m.Manages
	}
	return nil
}

func (m *ManagedModule) GetModule() *schema.Module {
	if m != nil {
		return m.Module
	}
	return nil
}

type ListSourcesResponse struct {
	Sources              []*ManagedSource `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListSourcesResponse) Reset()         { *m = ListSourcesResponse{} }
func (m *ListSourcesResponse) String() string { return proto.CompactTextString(m) }
func (*ListSourcesResponse) ProtoMessage()    {}
func (*ListSourcesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f72fab759920ea61, []int{7}
}
func (m *ListSourcesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSourcesResponse.Unmarshal(m, b)
}
func (m *ListSourcesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSourcesResponse.Marshal(b, m, deterministic)
}
func (m *ListSourcesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSourcesResponse.Merge(m, src)
}
func (m *ListSourcesResponse) XXX_Size() int {
	return xxx_messageInfo_ListSourcesResponse.Size(m)
}
func (m *ListSourcesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSourcesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSourcesResponse proto.InternalMessageInfo

func (m *ListSourcesResponse) GetSources() []*ManagedSource {
	if m != nil {
		return m.Sources
	}
	return nil
}

type ListManagedResponse struct {
	Modules              []*ManagedModule `protobuf:"bytes,1,rep,name=modules,proto3" json:"modules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListManagedResponse) Reset()         { *m = ListManagedResponse{} }
func (m *ListManagedResponse) String() string { return proto.CompactTextString(m) }
func (*ListManagedResponse) ProtoMessage()    {}
func (*ListManagedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f72fab759920ea61, []int{8}
}
func (m *ListManagedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListManagedResponse.Unmarshal(m, b)
}
func (m *ListManagedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListManagedResponse.Marshal(b, m, deterministic)
}
func (m *ListManagedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListManagedResponse.Merge(m, src)
}
func (m *ListManagedResponse) XXX_Size() int {
	return xxx_messageInfo_ListManagedResponse.Size(m)
}
func (m *ListManagedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListManagedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListManagedResponse proto.InternalMessageInfo

func (m *ListManagedResponse) GetModules() []*ManagedModule {
	if m != nil {
		return m.Modules
	}
	return nil
}

type DependencyRequest struct {
	Language             string   `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Organization         string   `protobuf:"bytes,5,opt,name=organization,proto3" json:"organization,omitempty"`
	Module               string   `protobuf:"bytes,6,opt,name=module,proto3" json:"module,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DependencyRequest) Reset()         { *m = DependencyRequest{} }
func (m *DependencyRequest) String() string { return proto.CompactTextString(m) }
func (*DependencyRequest) ProtoMessage()    {}
func (*DependencyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f72fab759920ea61, []int{9}
}
func (m *DependencyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DependencyRequest.Unmarshal(m, b)
}
func (m *DependencyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DependencyRequest.Marshal(b, m, deterministic)
}
func (m *DependencyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DependencyRequest.Merge(m, src)
}
func (m *DependencyRequest) XXX_Size() int {
	return xxx_messageInfo_DependencyRequest.Size(m)
}
func (m *DependencyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DependencyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DependencyRequest proto.InternalMessageInfo

func (m *DependencyRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *DependencyRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *DependencyRequest) GetModule() string {
	if m != nil {
		return m.Module
	}
	return ""
}

type Dependency struct {
	Depends              *schema.Depends `protobuf:"bytes,1,opt,name=depends,proto3" json:"depends,omitempty"`
	Module               *schema.Module  `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Dependency) Reset()         { *m = Dependency{} }
func (m *Dependency) String() string { return proto.CompactTextString(m) }
func (*Dependency) ProtoMessage()    {}
func (*Dependency) Descriptor() ([]byte, []int) {
	return fileDescriptor_f72fab759920ea61, []int{10}
}
func (m *Dependency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dependency.Unmarshal(m, b)
}
func (m *Dependency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dependency.Marshal(b, m, deterministic)
}
func (m *Dependency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dependency.Merge(m, src)
}
func (m *Dependency) XXX_Size() int {
	return xxx_messageInfo_Dependency.Size(m)
}
func (m *Dependency) XXX_DiscardUnknown() {
	xxx_messageInfo_Dependency.DiscardUnknown(m)
}

var xxx_messageInfo_Dependency proto.InternalMessageInfo

func (m *Dependency) GetDepends() *schema.Depends {
	if m != nil {
		return m.Depends
	}
	return nil
}

func (m *Dependency) GetModule() *schema.Module {
	if m != nil {
		return m.Module
	}
	return nil
}

type ListDependentsResponse struct {
	Dependents           []*Dependency `protobuf:"bytes,1,rep,name=dependents,proto3" json:"dependents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListDependentsResponse) Reset()         { *m = ListDependentsResponse{} }
func (m *ListDependentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListDependentsResponse) ProtoMessage()    {}
func (*ListDependentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f72fab759920ea61, []int{11}
}
func (m *ListDependentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDependentsResponse.Unmarshal(m, b)
}
func (m *ListDependentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDependentsResponse.Marshal(b, m, deterministic)
}
func (m *ListDependentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDependentsResponse.Merge(m, src)
}
func (m *ListDependentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListDependentsResponse.Size(m)
}
func (m *ListDependentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDependentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDependentsResponse proto.InternalMessageInfo

func (m *ListDependentsResponse) GetDependents() []*Dependency {
	if m != nil {
		return m.Dependents
	}
	return nil
}

type ListDependenciesResponse struct {
	Dependencies         []*Dependency `protobuf:"bytes,1,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListDependenciesResponse) Reset()         { *m = ListDependenciesResponse{} }
func (m *ListDependenciesResponse) String() string { return proto.CompactTextString(m) }
func (*ListDependenciesResponse) ProtoMessage()    {}
func (*ListDependenciesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f72fab759920ea61, []int{12}
}
func (m *ListDependenciesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDependenciesResponse.Unmarshal(m, b)
}
func (m *ListDependenciesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDependenciesResponse.Marshal(b, m, deterministic)
}
func (m *ListDependenciesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDependenciesResponse.Merge(m, src)
}
func (m *ListDependenciesResponse) XXX_Size() int {
	return xxx_messageInfo_ListDependenciesResponse.Size(m)
}
func (m *ListDependenciesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDependenciesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDependenciesResponse proto.InternalMessageInfo

func (m *ListDependenciesResponse) GetDependencies() []*Dependency {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

type SearchRequest struct {
	Cancel               bool               `protobuf:"varint,1,opt,name=cancel,proto3" json:"cancel,omitempty"`
	DependentsOf         *DependencyRequest `protobuf:"bytes,5,opt,name=dependentsOf,proto3" json:"dependentsOf,omitempty"`
	DependenciesOf       *DependencyRequest `protobuf:"bytes,6,opt,name=dependenciesOf,proto3" json:"dependenciesOf,omitempty"`
	ModulesFor           *schema.Source     `protobuf:"bytes,7,opt,name=modulesFor,proto3" json:"modulesFor,omitempty"`
	SourcesFor           *schema.Module     `protobuf:"bytes,8,opt,name=sourcesFor,proto3" json:"sourcesFor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f72fab759920ea61, []int{13}
}
func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetCancel() bool {
	if m != nil {
		return m.Cancel
	}
	return false
}

func (m *SearchRequest) GetDependentsOf() *DependencyRequest {
	if m != nil {
		return m.DependentsOf
	}
	return nil
}

func (m *SearchRequest) GetDependenciesOf() *DependencyRequest {
	if m != nil {
		return m.DependenciesOf
	}
	return nil
}

func (m *SearchRequest) GetModulesFor() *schema.Source {
	if m != nil {
		return m.ModulesFor
	}
	return nil
}

func (m *SearchRequest) GetSourcesFor() *schema.Module {
	if m != nil {
		return m.SourcesFor
	}
	return nil
}

type SearchResponse struct {
	Request              *SearchRequest   `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Dependents           []*Dependency    `protobuf:"bytes,5,rep,name=dependents,proto3" json:"dependents,omitempty"`
	Dependencies         []*Dependency    `protobuf:"bytes,6,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	Modules              []*schema.Module `protobuf:"bytes,7,rep,name=modules,proto3" json:"modules,omitempty"`
	Sources              []*schema.Source `protobuf:"bytes,8,rep,name=sources,proto3" json:"sources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f72fab759920ea61, []int{14}
}
func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetRequest() *SearchRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *SearchResponse) GetDependents() []*Dependency {
	if m != nil {
		return m.Dependents
	}
	return nil
}

func (m *SearchResponse) GetDependencies() []*Dependency {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

func (m *SearchResponse) GetModules() []*schema.Module {
	if m != nil {
		return m.Modules
	}
	return nil
}

func (m *SearchResponse) GetSources() []*schema.Source {
	if m != nil {
		return m.Sources
	}
	return nil
}

func init() {
	proto.RegisterType((*SourceRequest)(nil), "cloud.deps.api.v1alpha.tracker.SourceRequest")
	proto.RegisterType((*ListRequest)(nil), "cloud.deps.api.v1alpha.tracker.ListRequest")
	proto.RegisterType((*TrackResponse)(nil), "cloud.deps.api.v1alpha.tracker.TrackResponse")
	proto.RegisterType((*ListSourceResponse)(nil), "cloud.deps.api.v1alpha.tracker.ListSourceResponse")
	proto.RegisterType((*ListModuleResponse)(nil), "cloud.deps.api.v1alpha.tracker.ListModuleResponse")
	proto.RegisterType((*ManagedSource)(nil), "cloud.deps.api.v1alpha.tracker.ManagedSource")
	proto.RegisterType((*ManagedModule)(nil), "cloud.deps.api.v1alpha.tracker.ManagedModule")
	proto.RegisterType((*ListSourcesResponse)(nil), "cloud.deps.api.v1alpha.tracker.ListSourcesResponse")
	proto.RegisterType((*ListManagedResponse)(nil), "cloud.deps.api.v1alpha.tracker.ListManagedResponse")
	proto.RegisterType((*DependencyRequest)(nil), "cloud.deps.api.v1alpha.tracker.DependencyRequest")
	proto.RegisterType((*Dependency)(nil), "cloud.deps.api.v1alpha.tracker.Dependency")
	proto.RegisterType((*ListDependentsResponse)(nil), "cloud.deps.api.v1alpha.tracker.ListDependentsResponse")
	proto.RegisterType((*ListDependenciesResponse)(nil), "cloud.deps.api.v1alpha.tracker.ListDependenciesResponse")
	proto.RegisterType((*SearchRequest)(nil), "cloud.deps.api.v1alpha.tracker.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "cloud.deps.api.v1alpha.tracker.SearchResponse")
}

func init() {
	proto.RegisterFile("depscloud_api/v1alpha/tracker/tracker.proto", fileDescriptor_f72fab759920ea61)
}

var fileDescriptor_f72fab759920ea61 = []byte{
	// 836 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xcd, 0x6e, 0xd3, 0x4a,
	0x14, 0x96, 0xd3, 0xe6, 0xe7, 0x9e, 0x34, 0xbd, 0xbd, 0x73, 0x51, 0x15, 0x79, 0x81, 0x2a, 0x4b,
	0x45, 0xa1, 0x15, 0x0e, 0x75, 0xc5, 0xcf, 0x06, 0x81, 0xaa, 0x52, 0x24, 0x44, 0xa9, 0xe4, 0xc2,
	0x02, 0x16, 0x54, 0xae, 0x3d, 0x4d, 0x4c, 0x13, 0xdb, 0x78, 0xec, 0x22, 0x60, 0xd1, 0x27, 0x40,
	0x82, 0x27, 0xe1, 0x4d, 0x78, 0x05, 0x96, 0x6c, 0xd8, 0xb3, 0x45, 0x9e, 0x1f, 0x7b, 0x6c, 0x52,
	0xe2, 0x38, 0xa2, 0x9b, 0x38, 0x33, 0x3e, 0xdf, 0x39, 0xdf, 0x7c, 0xe7, 0xcc, 0x9c, 0x31, 0x6c,
	0x3a, 0x38, 0x20, 0xf6, 0xc8, 0x8f, 0x9d, 0x23, 0x2b, 0x70, 0xfb, 0x67, 0x5b, 0xd6, 0x28, 0x18,
	0x5a, 0xfd, 0x28, 0xb4, 0xec, 0x53, 0x1c, 0x8a, 0xa7, 0x1e, 0x84, 0x7e, 0xe4, 0xa3, 0xab, 0xd4,
	0x50, 0x4f, 0x20, 0xba, 0x15, 0xb8, 0x3a, 0xb7, 0xd6, 0xb9, 0x95, 0xba, 0x3e, 0xd9, 0x59, 0x32,
	0x4b, 0x7f, 0x98, 0x1b, 0xf5, 0xfa, 0x64, 0x33, 0x62, 0x0f, 0xf1, 0x58, 0x3c, 0x98, 0xa9, 0xf6,
	0x45, 0x81, 0xce, 0xa1, 0x1f, 0x87, 0x36, 0x36, 0xf1, 0x9b, 0x18, 0x93, 0x08, 0xdd, 0x83, 0x06,
	0xa1, 0x13, 0x5d, 0x65, 0x4d, 0xe9, 0xb5, 0x8d, 0x75, 0xfd, 0x02, 0x52, 0xdc, 0x0f, 0x47, 0x73,
	0x10, 0x3a, 0x82, 0x7f, 0xc7, 0x96, 0x67, 0x0d, 0xf0, 0x18, 0x7b, 0xd1, 0x9e, 0x3b, 0xc2, 0xa4,
	0x5b, 0x5b, 0x5b, 0xe8, 0xb5, 0x8d, 0x5b, 0x17, 0xf9, 0xa1, 0x13, 0xbb, 0x38, 0xc0, 0x9e, 0x83,
	0x3d, 0xfb, 0xdd, 0x7e, 0x0e, 0x6d, 0x16, 0xbd, 0x69, 0x77, 0xa0, 0xfd, 0xc4, 0x25, 0x91, 0xa0,
	0x8b, 0x60, 0x31, 0xb0, 0x06, 0x8c, 0x6c, 0xdd, 0xa4, 0xff, 0xd1, 0x15, 0xa8, 0xdb, 0x7e, 0xec,
	0x45, 0xdd, 0x1a, 0x9d, 0x64, 0x03, 0x6d, 0x13, 0x3a, 0xcf, 0x12, 0x1d, 0x4d, 0x4c, 0x02, 0xdf,
	0x23, 0x18, 0xa9, 0xd0, 0xa2, 0xc2, 0xba, 0xde, 0x80, 0xc2, 0x5b, 0x66, 0x3a, 0xd6, 0xce, 0x01,
	0x25, 0x51, 0x84, 0x34, 0x1c, 0x51, 0x3a, 0x18, 0xba, 0x0f, 0x4d, 0x26, 0x08, 0xe9, 0x2e, 0xd0,
	0xe5, 0x97, 0x94, 0x51, 0xa0, 0x04, 0x81, 0x7d, 0xdf, 0x89, 0x47, 0x15, 0x09, 0x8c, 0x29, 0xb6,
	0x2c, 0x01, 0x1e, 0x49, 0xa0, 0xb4, 0x4f, 0x0a, 0x74, 0x58, 0x2e, 0x1c, 0xc6, 0x6d, 0xde, 0xca,
	0x78, 0x00, 0x4d, 0x96, 0x4b, 0x42, 0x99, 0xb6, 0x8d, 0x6b, 0xd3, 0x18, 0x31, 0x6b, 0x53, 0xc0,
	0x64, 0x4a, 0x8c, 0xad, 0xec, 0x53, 0xa9, 0xe4, 0x33, 0x59, 0x14, 0x5b, 0x31, 0x27, 0x55, 0x52,
	0x26, 0x0e, 0xd2, 0x5e, 0xc1, 0xff, 0x59, 0x9d, 0x90, 0x34, 0x4f, 0x8f, 0xb2, 0xf4, 0x2b, 0x54,
	0xfd, 0x1b, 0xfa, 0x9f, 0xb7, 0xb6, 0x9e, 0x93, 0x3a, 0x2b, 0x03, 0xee, 0x9f, 0xbf, 0x95, 0xfd,
	0x8b, 0xec, 0xce, 0xe6, 0xbf, 0x98, 0xe5, 0x53, 0xf8, 0x2f, 0xdb, 0x7a, 0x62, 0x4f, 0xa9, 0xd0,
	0x1a, 0x59, 0xde, 0x20, 0x16, 0x95, 0xf6, 0x8f, 0x99, 0x8e, 0x91, 0x06, 0x4b, 0x7e, 0x38, 0xb0,
	0x3c, 0xf7, 0xbd, 0x15, 0xb9, 0xbe, 0xd7, 0xad, 0xd3, 0xf7, 0xb9, 0x39, 0xb4, 0x9a, 0x6a, 0xda,
	0xa0, 0x6f, 0x85, 0x58, 0x1f, 0x15, 0x80, 0x2c, 0x5a, 0x92, 0x3c, 0x87, 0x8e, 0xca, 0x26, 0x8f,
	0x61, 0x89, 0x29, 0x60, 0xf3, 0x26, 0xcf, 0x81, 0xd5, 0x44, 0x5c, 0x41, 0x29, 0xca, 0xf2, 0xf7,
	0x18, 0xc0, 0x49, 0x67, 0xb9, 0xc4, 0x1b, 0xd3, 0x24, 0x96, 0x84, 0x94, 0xd0, 0xda, 0x6b, 0xe8,
	0xca, 0x51, 0x6c, 0x57, 0xaa, 0x93, 0xa7, 0xb0, 0xe4, 0x48, 0xf3, 0x15, 0x22, 0xe5, 0xf0, 0xda,
	0xf7, 0x1a, 0x74, 0x0e, 0xb1, 0x15, 0xda, 0x43, 0x91, 0xcb, 0x55, 0x68, 0xd8, 0x96, 0x67, 0xe3,
	0x11, 0x3f, 0xe2, 0xf8, 0x08, 0x3d, 0xcf, 0x22, 0x47, 0xe4, 0xe0, 0x84, 0xe6, 0xb1, 0x6d, 0x6c,
	0xcd, 0x10, 0x99, 0x05, 0x30, 0x73, 0x6e, 0xd0, 0x0b, 0x58, 0x96, 0x09, 0x1d, 0x9c, 0xd0, 0x12,
	0xa8, 0xe4, 0xb8, 0xe0, 0x08, 0x3d, 0x04, 0xe0, 0x55, 0xbb, 0xe7, 0x87, 0xdd, 0xe6, 0x2c, 0x47,
	0x90, 0x04, 0x4c, 0xdc, 0xf0, 0xcd, 0x95, 0xb8, 0x69, 0xcd, 0x52, 0x37, 0x12, 0x50, 0xfb, 0x59,
	0x83, 0x65, 0xa1, 0x74, 0xb6, 0x29, 0x43, 0xc6, 0x9d, 0xd7, 0xf3, 0xd4, 0x4d, 0x99, 0x4b, 0x95,
	0x29, 0xd0, 0x85, 0xea, 0xab, 0xcf, 0x53, 0x7d, 0xbf, 0x55, 0x58, 0x63, 0xbe, 0x0a, 0x93, 0xfb,
	0x4a, 0xb3, 0x4a, 0x5f, 0x91, 0x3b, 0x63, 0xab, 0x4a, 0x67, 0x34, 0xbe, 0xa5, 0x57, 0x96, 0x43,
	0x1c, 0x9e, 0xb9, 0x36, 0x46, 0x03, 0x58, 0x4c, 0x76, 0x18, 0xda, 0x9c, 0xb6, 0x2a, 0xe9, 0xe2,
	0xa0, 0x1a, 0x65, 0x8c, 0x0b, 0xfd, 0x1f, 0x43, 0x9d, 0x5e, 0x21, 0xd0, 0xf4, 0xcc, 0xca, 0x77,
	0x2a, 0x75, 0xaa, 0x79, 0xee, 0x62, 0x62, 0x7c, 0xad, 0x41, 0x87, 0xc9, 0xf6, 0xf7, 0x57, 0x58,
	0xb8, 0x60, 0xb8, 0xec, 0x76, 0xc5, 0xfb, 0x19, 0x2a, 0x97, 0x5c, 0x75, 0xbb, 0xbc, 0x96, 0xa4,
	0x18, 0x8a, 0x37, 0x26, 0x54, 0xae, 0x0c, 0xca, 0x85, 0x2a, 0xb4, 0x4b, 0xe3, 0x73, 0x4d, 0x6e,
	0x73, 0x42, 0xd4, 0x0f, 0xb0, 0x9c, 0x3f, 0xfe, 0xd1, 0xec, 0xa7, 0x94, 0x7a, 0xbb, 0x0c, 0x9f,
	0x09, 0x1d, 0xe6, 0x1c, 0x56, 0x8a, 0x5d, 0xa1, 0x4a, 0xf8, 0xbb, 0xb3, 0x84, 0x97, 0x5b, 0x8f,
	0xf1, 0x23, 0x6d, 0x15, 0x42, 0x8f, 0x53, 0x68, 0xb0, 0x09, 0x34, 0xdb, 0xc1, 0xa5, 0xea, 0x65,
	0xcd, 0x59, 0xe8, 0x9e, 0x72, 0x53, 0x41, 0x6f, 0x01, 0xed, 0x84, 0xd8, 0x72, 0xa2, 0xe1, 0x9e,
	0x1b, 0x92, 0xe8, 0xf2, 0x02, 0xc7, 0xb0, 0xb2, 0x8b, 0x83, 0xcb, 0x0e, 0xbb, 0xb3, 0xf1, 0xb2,
	0x37, 0x70, 0xa3, 0x61, 0x7c, 0xac, 0xdb, 0xfe, 0xb8, 0x9f, 0x7e, 0xa0, 0xf5, 0x27, 0x7c, 0x14,
	0x1e, 0x37, 0xe8, 0xb7, 0xd9, 0xf6, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1d, 0xf3, 0xe0, 0xae,
	0x3c, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SourceServiceClient is the client API for SourceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SourceServiceClient interface {
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListSourceResponse, error)
	Track(ctx context.Context, in *SourceRequest, opts ...grpc.CallOption) (*TrackResponse, error)
}

type sourceServiceClient struct {
	cc *grpc.ClientConn
}

func NewSourceServiceClient(cc *grpc.ClientConn) SourceServiceClient {
	return &sourceServiceClient{cc}
}

func (c *sourceServiceClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListSourceResponse, error) {
	out := new(ListSourceResponse)
	err := c.cc.Invoke(ctx, "/cloud.deps.api.v1alpha.tracker.SourceService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sourceServiceClient) Track(ctx context.Context, in *SourceRequest, opts ...grpc.CallOption) (*TrackResponse, error) {
	out := new(TrackResponse)
	err := c.cc.Invoke(ctx, "/cloud.deps.api.v1alpha.tracker.SourceService/Track", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SourceServiceServer is the server API for SourceService service.
type SourceServiceServer interface {
	List(context.Context, *ListRequest) (*ListSourceResponse, error)
	Track(context.Context, *SourceRequest) (*TrackResponse, error)
}

// UnimplementedSourceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSourceServiceServer struct {
}

func (*UnimplementedSourceServiceServer) List(ctx context.Context, req *ListRequest) (*ListSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedSourceServiceServer) Track(ctx context.Context, req *SourceRequest) (*TrackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Track not implemented")
}

func RegisterSourceServiceServer(s *grpc.Server, srv SourceServiceServer) {
	s.RegisterService(&_SourceService_serviceDesc, srv)
}

func _SourceService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SourceServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.deps.api.v1alpha.tracker.SourceService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SourceServiceServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SourceService_Track_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SourceServiceServer).Track(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.deps.api.v1alpha.tracker.SourceService/Track",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SourceServiceServer).Track(ctx, req.(*SourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SourceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cloud.deps.api.v1alpha.tracker.SourceService",
	HandlerType: (*SourceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _SourceService_List_Handler,
		},
		{
			MethodName: "Track",
			Handler:    _SourceService_Track_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "depscloud_api/v1alpha/tracker/tracker.proto",
}

// ModuleServiceClient is the client API for ModuleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ModuleServiceClient interface {
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListModuleResponse, error)
	ListSources(ctx context.Context, in *schema.Module, opts ...grpc.CallOption) (*ListSourcesResponse, error)
	ListManaged(ctx context.Context, in *schema.Source, opts ...grpc.CallOption) (*ListManagedResponse, error)
}

type moduleServiceClient struct {
	cc *grpc.ClientConn
}

func NewModuleServiceClient(cc *grpc.ClientConn) ModuleServiceClient {
	return &moduleServiceClient{cc}
}

func (c *moduleServiceClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListModuleResponse, error) {
	out := new(ListModuleResponse)
	err := c.cc.Invoke(ctx, "/cloud.deps.api.v1alpha.tracker.ModuleService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleServiceClient) ListSources(ctx context.Context, in *schema.Module, opts ...grpc.CallOption) (*ListSourcesResponse, error) {
	out := new(ListSourcesResponse)
	err := c.cc.Invoke(ctx, "/cloud.deps.api.v1alpha.tracker.ModuleService/ListSources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleServiceClient) ListManaged(ctx context.Context, in *schema.Source, opts ...grpc.CallOption) (*ListManagedResponse, error) {
	out := new(ListManagedResponse)
	err := c.cc.Invoke(ctx, "/cloud.deps.api.v1alpha.tracker.ModuleService/ListManaged", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ModuleServiceServer is the server API for ModuleService service.
type ModuleServiceServer interface {
	List(context.Context, *ListRequest) (*ListModuleResponse, error)
	ListSources(context.Context, *schema.Module) (*ListSourcesResponse, error)
	ListManaged(context.Context, *schema.Source) (*ListManagedResponse, error)
}

// UnimplementedModuleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedModuleServiceServer struct {
}

func (*UnimplementedModuleServiceServer) List(ctx context.Context, req *ListRequest) (*ListModuleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedModuleServiceServer) ListSources(ctx context.Context, req *schema.Module) (*ListSourcesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSources not implemented")
}
func (*UnimplementedModuleServiceServer) ListManaged(ctx context.Context, req *schema.Source) (*ListManagedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListManaged not implemented")
}

func RegisterModuleServiceServer(s *grpc.Server, srv ModuleServiceServer) {
	s.RegisterService(&_ModuleService_serviceDesc, srv)
}

func _ModuleService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.deps.api.v1alpha.tracker.ModuleService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleServiceServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleService_ListSources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(schema.Module)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleServiceServer).ListSources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.deps.api.v1alpha.tracker.ModuleService/ListSources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleServiceServer).ListSources(ctx, req.(*schema.Module))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleService_ListManaged_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(schema.Source)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleServiceServer).ListManaged(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.deps.api.v1alpha.tracker.ModuleService/ListManaged",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleServiceServer).ListManaged(ctx, req.(*schema.Source))
	}
	return interceptor(ctx, in, info, handler)
}

var _ModuleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cloud.deps.api.v1alpha.tracker.ModuleService",
	HandlerType: (*ModuleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _ModuleService_List_Handler,
		},
		{
			MethodName: "ListSources",
			Handler:    _ModuleService_ListSources_Handler,
		},
		{
			MethodName: "ListManaged",
			Handler:    _ModuleService_ListManaged_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "depscloud_api/v1alpha/tracker/tracker.proto",
}

// DependencyServiceClient is the client API for DependencyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DependencyServiceClient interface {
	ListDependents(ctx context.Context, in *DependencyRequest, opts ...grpc.CallOption) (*ListDependentsResponse, error)
	ListDependencies(ctx context.Context, in *DependencyRequest, opts ...grpc.CallOption) (*ListDependenciesResponse, error)
}

type dependencyServiceClient struct {
	cc *grpc.ClientConn
}

func NewDependencyServiceClient(cc *grpc.ClientConn) DependencyServiceClient {
	return &dependencyServiceClient{cc}
}

func (c *dependencyServiceClient) ListDependents(ctx context.Context, in *DependencyRequest, opts ...grpc.CallOption) (*ListDependentsResponse, error) {
	out := new(ListDependentsResponse)
	err := c.cc.Invoke(ctx, "/cloud.deps.api.v1alpha.tracker.DependencyService/ListDependents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dependencyServiceClient) ListDependencies(ctx context.Context, in *DependencyRequest, opts ...grpc.CallOption) (*ListDependenciesResponse, error) {
	out := new(ListDependenciesResponse)
	err := c.cc.Invoke(ctx, "/cloud.deps.api.v1alpha.tracker.DependencyService/ListDependencies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DependencyServiceServer is the server API for DependencyService service.
type DependencyServiceServer interface {
	ListDependents(context.Context, *DependencyRequest) (*ListDependentsResponse, error)
	ListDependencies(context.Context, *DependencyRequest) (*ListDependenciesResponse, error)
}

// UnimplementedDependencyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDependencyServiceServer struct {
}

func (*UnimplementedDependencyServiceServer) ListDependents(ctx context.Context, req *DependencyRequest) (*ListDependentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDependents not implemented")
}
func (*UnimplementedDependencyServiceServer) ListDependencies(ctx context.Context, req *DependencyRequest) (*ListDependenciesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDependencies not implemented")
}

func RegisterDependencyServiceServer(s *grpc.Server, srv DependencyServiceServer) {
	s.RegisterService(&_DependencyService_serviceDesc, srv)
}

func _DependencyService_ListDependents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DependencyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyServiceServer).ListDependents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.deps.api.v1alpha.tracker.DependencyService/ListDependents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyServiceServer).ListDependents(ctx, req.(*DependencyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DependencyService_ListDependencies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DependencyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DependencyServiceServer).ListDependencies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.deps.api.v1alpha.tracker.DependencyService/ListDependencies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DependencyServiceServer).ListDependencies(ctx, req.(*DependencyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DependencyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cloud.deps.api.v1alpha.tracker.DependencyService",
	HandlerType: (*DependencyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListDependents",
			Handler:    _DependencyService_ListDependents_Handler,
		},
		{
			MethodName: "ListDependencies",
			Handler:    _DependencyService_ListDependencies_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "depscloud_api/v1alpha/tracker/tracker.proto",
}

// SearchServiceClient is the client API for SearchService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SearchServiceClient interface {
	Search(ctx context.Context, opts ...grpc.CallOption) (SearchService_SearchClient, error)
	BreadthFirstSearch(ctx context.Context, opts ...grpc.CallOption) (SearchService_BreadthFirstSearchClient, error)
	DepthFirstSearch(ctx context.Context, opts ...grpc.CallOption) (SearchService_DepthFirstSearchClient, error)
}

type searchServiceClient struct {
	cc *grpc.ClientConn
}

func NewSearchServiceClient(cc *grpc.ClientConn) SearchServiceClient {
	return &searchServiceClient{cc}
}

func (c *searchServiceClient) Search(ctx context.Context, opts ...grpc.CallOption) (SearchService_SearchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SearchService_serviceDesc.Streams[0], "/cloud.deps.api.v1alpha.tracker.SearchService/Search", opts...)
	if err != nil {
		return nil, err
	}
	x := &searchServiceSearchClient{stream}
	return x, nil
}

type SearchService_SearchClient interface {
	Send(*SearchRequest) error
	Recv() (*SearchResponse, error)
	grpc.ClientStream
}

type searchServiceSearchClient struct {
	grpc.ClientStream
}

func (x *searchServiceSearchClient) Send(m *SearchRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *searchServiceSearchClient) Recv() (*SearchResponse, error) {
	m := new(SearchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *searchServiceClient) BreadthFirstSearch(ctx context.Context, opts ...grpc.CallOption) (SearchService_BreadthFirstSearchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SearchService_serviceDesc.Streams[1], "/cloud.deps.api.v1alpha.tracker.SearchService/BreadthFirstSearch", opts...)
	if err != nil {
		return nil, err
	}
	x := &searchServiceBreadthFirstSearchClient{stream}
	return x, nil
}

type SearchService_BreadthFirstSearchClient interface {
	Send(*SearchRequest) error
	Recv() (*SearchResponse, error)
	grpc.ClientStream
}

type searchServiceBreadthFirstSearchClient struct {
	grpc.ClientStream
}

func (x *searchServiceBreadthFirstSearchClient) Send(m *SearchRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *searchServiceBreadthFirstSearchClient) Recv() (*SearchResponse, error) {
	m := new(SearchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *searchServiceClient) DepthFirstSearch(ctx context.Context, opts ...grpc.CallOption) (SearchService_DepthFirstSearchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SearchService_serviceDesc.Streams[2], "/cloud.deps.api.v1alpha.tracker.SearchService/DepthFirstSearch", opts...)
	if err != nil {
		return nil, err
	}
	x := &searchServiceDepthFirstSearchClient{stream}
	return x, nil
}

type SearchService_DepthFirstSearchClient interface {
	Send(*SearchRequest) error
	Recv() (*SearchResponse, error)
	grpc.ClientStream
}

type searchServiceDepthFirstSearchClient struct {
	grpc.ClientStream
}

func (x *searchServiceDepthFirstSearchClient) Send(m *SearchRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *searchServiceDepthFirstSearchClient) Recv() (*SearchResponse, error) {
	m := new(SearchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SearchServiceServer is the server API for SearchService service.
type SearchServiceServer interface {
	Search(SearchService_SearchServer) error
	BreadthFirstSearch(SearchService_BreadthFirstSearchServer) error
	DepthFirstSearch(SearchService_DepthFirstSearchServer) error
}

// UnimplementedSearchServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSearchServiceServer struct {
}

func (*UnimplementedSearchServiceServer) Search(srv SearchService_SearchServer) error {
	return status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedSearchServiceServer) BreadthFirstSearch(srv SearchService_BreadthFirstSearchServer) error {
	return status.Errorf(codes.Unimplemented, "method BreadthFirstSearch not implemented")
}
func (*UnimplementedSearchServiceServer) DepthFirstSearch(srv SearchService_DepthFirstSearchServer) error {
	return status.Errorf(codes.Unimplemented, "method DepthFirstSearch not implemented")
}

func RegisterSearchServiceServer(s *grpc.Server, srv SearchServiceServer) {
	s.RegisterService(&_SearchService_serviceDesc, srv)
}

func _SearchService_Search_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SearchServiceServer).Search(&searchServiceSearchServer{stream})
}

type SearchService_SearchServer interface {
	Send(*SearchResponse) error
	Recv() (*SearchRequest, error)
	grpc.ServerStream
}

type searchServiceSearchServer struct {
	grpc.ServerStream
}

func (x *searchServiceSearchServer) Send(m *SearchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *searchServiceSearchServer) Recv() (*SearchRequest, error) {
	m := new(SearchRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _SearchService_BreadthFirstSearch_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SearchServiceServer).BreadthFirstSearch(&searchServiceBreadthFirstSearchServer{stream})
}

type SearchService_BreadthFirstSearchServer interface {
	Send(*SearchResponse) error
	Recv() (*SearchRequest, error)
	grpc.ServerStream
}

type searchServiceBreadthFirstSearchServer struct {
	grpc.ServerStream
}

func (x *searchServiceBreadthFirstSearchServer) Send(m *SearchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *searchServiceBreadthFirstSearchServer) Recv() (*SearchRequest, error) {
	m := new(SearchRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _SearchService_DepthFirstSearch_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SearchServiceServer).DepthFirstSearch(&searchServiceDepthFirstSearchServer{stream})
}

type SearchService_DepthFirstSearchServer interface {
	Send(*SearchResponse) error
	Recv() (*SearchRequest, error)
	grpc.ServerStream
}

type searchServiceDepthFirstSearchServer struct {
	grpc.ServerStream
}

func (x *searchServiceDepthFirstSearchServer) Send(m *SearchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *searchServiceDepthFirstSearchServer) Recv() (*SearchRequest, error) {
	m := new(SearchRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _SearchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cloud.deps.api.v1alpha.tracker.SearchService",
	HandlerType: (*SearchServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Search",
			Handler:       _SearchService_Search_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "BreadthFirstSearch",
			Handler:       _SearchService_BreadthFirstSearch_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "DepthFirstSearch",
			Handler:       _SearchService_DepthFirstSearch_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "depscloud_api/v1alpha/tracker/tracker.proto",
}
