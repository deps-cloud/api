syntax = "proto3";

package cloud.deps.api.v1alpha.tracker;

import "depscloud_api/v1alpha/deps/deps.proto";
import "depscloud_api/v1alpha/schema/schema.proto";

option go_package = "github.com/depscloud/api/v1alpha/tracker";

message SourceRequest {
    cloud.deps.api.v1alpha.schema.Source source = 1;
    repeated cloud.deps.api.v1alpha.deps.DependencyManagementFile managementFiles = 2;
}

message ListRequest {
    int32 page = 1;
    int32 count = 2;
}

message TrackResponse {
    bool tracking = 1;
}

message ListSourceResponse {
    int32 page = 1;
    int32 count = 2;

    repeated cloud.deps.api.v1alpha.schema.Source sources = 3;
}

service SourceService {
    rpc List(ListRequest) returns (ListSourceResponse);
    rpc Track(SourceRequest) returns (TrackResponse);
}

message ListModuleResponse {
    int32 page = 1;
    int32 count = 2;

    repeated cloud.deps.api.v1alpha.schema.Module modules = 3;
}

message ManagedSource {
    cloud.deps.api.v1alpha.schema.Source source = 1;
    cloud.deps.api.v1alpha.schema.Manages manages = 2;
}

message ManagedModule {
    cloud.deps.api.v1alpha.schema.Manages manages = 1;
    cloud.deps.api.v1alpha.schema.Module module = 2;
}

message ListSourcesResponse {
    repeated ManagedSource sources = 1;
}

message ListManagedResponse {
    repeated ManagedModule modules = 1;
}

service ModuleService {
    rpc List(ListRequest) returns (ListModuleResponse);
    rpc ListSources(cloud.deps.api.v1alpha.schema.Module) returns (ListSourcesResponse);
    rpc ListManaged(cloud.deps.api.v1alpha.schema.Source) returns (ListManagedResponse);
}

message DependencyRequest {
    string language = 1;

    string organization = 5;
    string module = 6;
}

message Dependency {
    cloud.deps.api.v1alpha.schema.Depends depends = 1;
    cloud.deps.api.v1alpha.schema.Module module = 2;
}

message ListDependentsResponse {
    repeated Dependency dependents = 1;
}

message ListDependenciesResponse {
    repeated Dependency dependencies = 1;
}

service DependencyService {
    rpc ListDependents(DependencyRequest) returns (ListDependentsResponse);
    rpc ListDependencies(DependencyRequest) returns (ListDependenciesResponse);
}

message SearchRequest {
    bool cancel = 1;

    // one of the following

    DependencyRequest dependentsOf = 5;
    DependencyRequest dependenciesOf = 6;
    cloud.deps.api.v1alpha.schema.Source modulesFor = 7;
    cloud.deps.api.v1alpha.schema.Module sourcesFor = 8;
}

message SearchResponse {
    SearchRequest request = 1;

    // one of the following, based on the associated request

    repeated Dependency dependents = 5;
    repeated Dependency dependencies = 6;
    repeated ManagedModule modules = 7;
    repeated ManagedSource sources = 8;
}

service SearchService {
    rpc Search(stream SearchRequest) returns (stream SearchResponse);
    rpc BreadthFirstSearch(stream SearchRequest) returns (stream SearchResponse);
    rpc DepthFirstSearch(stream SearchRequest) returns (stream SearchResponse);
}
