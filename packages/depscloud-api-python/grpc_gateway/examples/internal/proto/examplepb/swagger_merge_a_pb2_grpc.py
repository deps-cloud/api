# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from grpc_gateway.examples.internal.proto.examplepb import swagger_merge_a_pb2 as grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2


class ServiceAStub(object):
    """ServiceA provices MethodOne and MethodTwo
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MethodOne = channel.unary_unary(
                '/grpc.gateway.examples.internal.examplepb.ServiceA/MethodOne',
                request_serializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.InMessageA.SerializeToString,
                response_deserializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.OutMessageA.FromString,
                )
        self.MethodTwo = channel.unary_unary(
                '/grpc.gateway.examples.internal.examplepb.ServiceA/MethodTwo',
                request_serializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.OutMessageA.SerializeToString,
                response_deserializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.InMessageA.FromString,
                )


class ServiceAServicer(object):
    """ServiceA provices MethodOne and MethodTwo
    """

    def MethodOne(self, request, context):
        """ServiceA.MethodOne receives InMessageA and returns OutMessageA

        Here is the detail explanation about ServiceA.MethodOne.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MethodTwo(self, request, context):
        """ServiceA.MethodTwo receives OutMessageA and returns InMessageA

        Here is the detail explanation about ServiceA.MethodTwo.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServiceAServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MethodOne': grpc.unary_unary_rpc_method_handler(
                    servicer.MethodOne,
                    request_deserializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.InMessageA.FromString,
                    response_serializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.OutMessageA.SerializeToString,
            ),
            'MethodTwo': grpc.unary_unary_rpc_method_handler(
                    servicer.MethodTwo,
                    request_deserializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.OutMessageA.FromString,
                    response_serializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.InMessageA.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc.gateway.examples.internal.examplepb.ServiceA', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServiceA(object):
    """ServiceA provices MethodOne and MethodTwo
    """

    @staticmethod
    def MethodOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.gateway.examples.internal.examplepb.ServiceA/MethodOne',
            grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.InMessageA.SerializeToString,
            grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.OutMessageA.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MethodTwo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.gateway.examples.internal.examplepb.ServiceA/MethodTwo',
            grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.OutMessageA.SerializeToString,
            grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.InMessageA.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class ServiceCStub(object):
    """ServiceC service responds to incoming merge requests.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MethodOne = channel.unary_unary(
                '/grpc.gateway.examples.internal.examplepb.ServiceC/MethodOne',
                request_serializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.InMessageA.SerializeToString,
                response_deserializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.OutMessageC.FromString,
                )
        self.MethodTwo = channel.unary_unary(
                '/grpc.gateway.examples.internal.examplepb.ServiceC/MethodTwo',
                request_serializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.OutMessageA.SerializeToString,
                response_deserializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.InMessageA.FromString,
                )


class ServiceCServicer(object):
    """ServiceC service responds to incoming merge requests.
    """

    def MethodOne(self, request, context):
        """ServiceC.MethodOne receives InMessageA and returns OutMessageC

        Here is the detail explanation about ServiceC.MethodOne.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MethodTwo(self, request, context):
        """ServiceC.MethodTwo receives OutMessageA and returns InMessageA

        Here is the detail explanation about ServiceC.MethodTwo.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServiceCServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MethodOne': grpc.unary_unary_rpc_method_handler(
                    servicer.MethodOne,
                    request_deserializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.InMessageA.FromString,
                    response_serializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.OutMessageC.SerializeToString,
            ),
            'MethodTwo': grpc.unary_unary_rpc_method_handler(
                    servicer.MethodTwo,
                    request_deserializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.OutMessageA.FromString,
                    response_serializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.InMessageA.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc.gateway.examples.internal.examplepb.ServiceC', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServiceC(object):
    """ServiceC service responds to incoming merge requests.
    """

    @staticmethod
    def MethodOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.gateway.examples.internal.examplepb.ServiceC/MethodOne',
            grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.InMessageA.SerializeToString,
            grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.OutMessageC.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MethodTwo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.gateway.examples.internal.examplepb.ServiceC/MethodTwo',
            grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.OutMessageA.SerializeToString,
            grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_swagger__merge__a__pb2.InMessageA.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
