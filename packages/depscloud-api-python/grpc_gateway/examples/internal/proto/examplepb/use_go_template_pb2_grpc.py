# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from grpc_gateway.examples.internal.proto.examplepb import use_go_template_pb2 as grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_use__go__template__pb2


class LoginServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Login = channel.unary_unary(
                '/grpc.gateway.examples.internal.examplepb.LoginService/Login',
                request_serializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_use__go__template__pb2.LoginRequest.SerializeToString,
                response_deserializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_use__go__template__pb2.LoginReply.FromString,
                )
        self.Logout = channel.unary_unary(
                '/grpc.gateway.examples.internal.examplepb.LoginService/Logout',
                request_serializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_use__go__template__pb2.LogoutRequest.SerializeToString,
                response_deserializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_use__go__template__pb2.LogoutReply.FromString,
                )


class LoginServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Login(self, request, context):
        """Login

        {{.MethodDescriptorProto.Name}} is a call with the method(s) {{$first := true}}{{range .Bindings}}{{if $first}}{{$first = false}}{{else}}, {{end}}{{.HTTPMethod}}{{end}} within the "{{.Service.Name}}" service.
        It takes in "{{.RequestType.Name}}" and returns a "{{.ResponseType.Name}}".

        ## {{.RequestType.Name}}
        | Field ID    | Name      | Type                                                       | Description                  |
        | ----------- | --------- | ---------------------------------------------------------  | ---------------------------- | {{range .RequestType.Fields}}
        | {{.Number}} | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}  

        ## {{.ResponseType.Name}}
        | Field ID    | Name      | Type                                                       | Description                  |
        | ----------- | --------- | ---------------------------------------------------------- | ---------------------------- | {{range .ResponseType.Fields}}
        | {{.Number}} | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}  
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Logout(self, request, context):
        """Logout

        {{.MethodDescriptorProto.Name}} is a call with the method(s) {{$first := true}}{{range .Bindings}}{{if $first}}{{$first = false}}{{else}}, {{end}}{{.HTTPMethod}}{{end}} within the "{{.Service.Name}}" service.
        It takes in "{{.RequestType.Name}}" and returns a "{{.ResponseType.Name}}".

        ## {{.RequestType.Name}}
        | Field ID    | Name      | Type                                                       | Description                  |
        | ----------- | --------- | ---------------------------------------------------------  | ---------------------------- | {{range .RequestType.Fields}}
        | {{.Number}} | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}  

        ## {{.ResponseType.Name}}
        | Field ID    | Name      | Type                                                       | Description                  |
        | ----------- | --------- | ---------------------------------------------------------- | ---------------------------- | {{range .ResponseType.Fields}}
        | {{.Number}} | {{.Name}} | {{if eq .Label.String "LABEL_REPEATED"}}[]{{end}}{{.Type}} | {{fieldcomments .Message .}} | {{end}}  
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LoginServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_use__go__template__pb2.LoginRequest.FromString,
                    response_serializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_use__go__template__pb2.LoginReply.SerializeToString,
            ),
            'Logout': grpc.unary_unary_rpc_method_handler(
                    servicer.Logout,
                    request_deserializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_use__go__template__pb2.LogoutRequest.FromString,
                    response_serializer=grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_use__go__template__pb2.LogoutReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc.gateway.examples.internal.examplepb.LoginService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LoginService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.gateway.examples.internal.examplepb.LoginService/Login',
            grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_use__go__template__pb2.LoginRequest.SerializeToString,
            grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_use__go__template__pb2.LoginReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.gateway.examples.internal.examplepb.LoginService/Logout',
            grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_use__go__template__pb2.LogoutRequest.SerializeToString,
            grpc__gateway_dot_examples_dot_internal_dot_proto_dot_examplepb_dot_use__go__template__pb2.LogoutReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
