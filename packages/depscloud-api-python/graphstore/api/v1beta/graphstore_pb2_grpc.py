# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from graphstore.api.v1beta import graphstore_pb2 as graphstore_dot_api_dot_v1beta_dot_graphstore__pb2


class GraphStoreStub(object):
    """GraphStore represents a graph data structure. It provides functionality
    that you can expect to find on most graph structures, but over a distributed
    protocol.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Put = channel.unary_unary(
                '/graphstore.api.v1beta.GraphStore/Put',
                request_serializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.PutRequest.SerializeToString,
                response_deserializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.PutResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/graphstore.api.v1beta.GraphStore/Delete',
                request_serializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.DeleteRequest.SerializeToString,
                response_deserializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.DeleteResponse.FromString,
                )
        self.List = channel.unary_unary(
                '/graphstore.api.v1beta.GraphStore/List',
                request_serializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.ListRequest.SerializeToString,
                response_deserializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.ListResponse.FromString,
                )
        self.Neighbors = channel.unary_unary(
                '/graphstore.api.v1beta.GraphStore/Neighbors',
                request_serializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.NeighborsRequest.SerializeToString,
                response_deserializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.NeighborsResponse.FromString,
                )
        self.Traverse = channel.stream_stream(
                '/graphstore.api.v1beta.GraphStore/Traverse',
                request_serializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.TraverseRequest.SerializeToString,
                response_deserializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.TraverseResponse.FromString,
                )


class GraphStoreServicer(object):
    """GraphStore represents a graph data structure. It provides functionality
    that you can expect to find on most graph structures, but over a distributed
    protocol.
    """

    def Put(self, request, context):
        """Used to insert data into the store.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Used to delete data from the store.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """Used to list data within the store.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Neighbors(self, request, context):
        """Used to query data within the store.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Traverse(self, request_iterator, context):
        """Used to navigate the graph.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GraphStoreServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Put': grpc.unary_unary_rpc_method_handler(
                    servicer.Put,
                    request_deserializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.PutRequest.FromString,
                    response_serializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.PutResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.DeleteRequest.FromString,
                    response_serializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.DeleteResponse.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.ListRequest.FromString,
                    response_serializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.ListResponse.SerializeToString,
            ),
            'Neighbors': grpc.unary_unary_rpc_method_handler(
                    servicer.Neighbors,
                    request_deserializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.NeighborsRequest.FromString,
                    response_serializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.NeighborsResponse.SerializeToString,
            ),
            'Traverse': grpc.stream_stream_rpc_method_handler(
                    servicer.Traverse,
                    request_deserializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.TraverseRequest.FromString,
                    response_serializer=graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.TraverseResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'graphstore.api.v1beta.GraphStore', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GraphStore(object):
    """GraphStore represents a graph data structure. It provides functionality
    that you can expect to find on most graph structures, but over a distributed
    protocol.
    """

    @staticmethod
    def Put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/graphstore.api.v1beta.GraphStore/Put',
            graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.PutRequest.SerializeToString,
            graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.PutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/graphstore.api.v1beta.GraphStore/Delete',
            graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.DeleteRequest.SerializeToString,
            graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/graphstore.api.v1beta.GraphStore/List',
            graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.ListRequest.SerializeToString,
            graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.ListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Neighbors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/graphstore.api.v1beta.GraphStore/Neighbors',
            graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.NeighborsRequest.SerializeToString,
            graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.NeighborsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Traverse(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/graphstore.api.v1beta.GraphStore/Traverse',
            graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.TraverseRequest.SerializeToString,
            graphstore_dot_api_dot_v1beta_dot_graphstore__pb2.TraverseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
