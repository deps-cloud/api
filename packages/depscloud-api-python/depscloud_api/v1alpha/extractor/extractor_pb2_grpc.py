# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from depscloud_api.v1alpha.extractor import extractor_pb2 as depscloud__api_dot_v1alpha_dot_extractor_dot_extractor__pb2


class DependencyExtractorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Match = channel.unary_unary(
                '/cloud.deps.api.v1alpha.extractor.DependencyExtractor/Match',
                request_serializer=depscloud__api_dot_v1alpha_dot_extractor_dot_extractor__pb2.MatchRequest.SerializeToString,
                response_deserializer=depscloud__api_dot_v1alpha_dot_extractor_dot_extractor__pb2.MatchResponse.FromString,
                )
        self.Extract = channel.unary_unary(
                '/cloud.deps.api.v1alpha.extractor.DependencyExtractor/Extract',
                request_serializer=depscloud__api_dot_v1alpha_dot_extractor_dot_extractor__pb2.ExtractRequest.SerializeToString,
                response_deserializer=depscloud__api_dot_v1alpha_dot_extractor_dot_extractor__pb2.ExtractResponse.FromString,
                )


class DependencyExtractorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Match(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Extract(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DependencyExtractorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Match': grpc.unary_unary_rpc_method_handler(
                    servicer.Match,
                    request_deserializer=depscloud__api_dot_v1alpha_dot_extractor_dot_extractor__pb2.MatchRequest.FromString,
                    response_serializer=depscloud__api_dot_v1alpha_dot_extractor_dot_extractor__pb2.MatchResponse.SerializeToString,
            ),
            'Extract': grpc.unary_unary_rpc_method_handler(
                    servicer.Extract,
                    request_deserializer=depscloud__api_dot_v1alpha_dot_extractor_dot_extractor__pb2.ExtractRequest.FromString,
                    response_serializer=depscloud__api_dot_v1alpha_dot_extractor_dot_extractor__pb2.ExtractResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.deps.api.v1alpha.extractor.DependencyExtractor', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DependencyExtractor(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Match(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloud.deps.api.v1alpha.extractor.DependencyExtractor/Match',
            depscloud__api_dot_v1alpha_dot_extractor_dot_extractor__pb2.MatchRequest.SerializeToString,
            depscloud__api_dot_v1alpha_dot_extractor_dot_extractor__pb2.MatchResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Extract(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloud.deps.api.v1alpha.extractor.DependencyExtractor/Extract',
            depscloud__api_dot_v1alpha_dot_extractor_dot_extractor__pb2.ExtractRequest.SerializeToString,
            depscloud__api_dot_v1alpha_dot_extractor_dot_extractor__pb2.ExtractResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
