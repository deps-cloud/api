# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from depscloud_api.v1alpha.schema import schema_pb2 as depscloud__api_dot_v1alpha_dot_schema_dot_schema__pb2
from depscloud_api.v1alpha.tracker import tracker_pb2 as depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2


class SourceServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.List = channel.unary_unary(
                '/cloud.deps.api.v1alpha.tracker.SourceService/List',
                request_serializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListRequest.SerializeToString,
                response_deserializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListSourceResponse.FromString,
                )
        self.Track = channel.unary_unary(
                '/cloud.deps.api.v1alpha.tracker.SourceService/Track',
                request_serializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.SourceRequest.SerializeToString,
                response_deserializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.TrackResponse.FromString,
                )


class SourceServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Track(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SourceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListRequest.FromString,
                    response_serializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListSourceResponse.SerializeToString,
            ),
            'Track': grpc.unary_unary_rpc_method_handler(
                    servicer.Track,
                    request_deserializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.SourceRequest.FromString,
                    response_serializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.TrackResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.deps.api.v1alpha.tracker.SourceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SourceService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloud.deps.api.v1alpha.tracker.SourceService/List',
            depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListRequest.SerializeToString,
            depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListSourceResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Track(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloud.deps.api.v1alpha.tracker.SourceService/Track',
            depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.SourceRequest.SerializeToString,
            depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.TrackResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class ModuleServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.List = channel.unary_unary(
                '/cloud.deps.api.v1alpha.tracker.ModuleService/List',
                request_serializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListRequest.SerializeToString,
                response_deserializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListModuleResponse.FromString,
                )
        self.ListSources = channel.unary_unary(
                '/cloud.deps.api.v1alpha.tracker.ModuleService/ListSources',
                request_serializer=depscloud__api_dot_v1alpha_dot_schema_dot_schema__pb2.Module.SerializeToString,
                response_deserializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListSourcesResponse.FromString,
                )
        self.ListManaged = channel.unary_unary(
                '/cloud.deps.api.v1alpha.tracker.ModuleService/ListManaged',
                request_serializer=depscloud__api_dot_v1alpha_dot_schema_dot_schema__pb2.Source.SerializeToString,
                response_deserializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListManagedResponse.FromString,
                )


class ModuleServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSources(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListManaged(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ModuleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListRequest.FromString,
                    response_serializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListModuleResponse.SerializeToString,
            ),
            'ListSources': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSources,
                    request_deserializer=depscloud__api_dot_v1alpha_dot_schema_dot_schema__pb2.Module.FromString,
                    response_serializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListSourcesResponse.SerializeToString,
            ),
            'ListManaged': grpc.unary_unary_rpc_method_handler(
                    servicer.ListManaged,
                    request_deserializer=depscloud__api_dot_v1alpha_dot_schema_dot_schema__pb2.Source.FromString,
                    response_serializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListManagedResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.deps.api.v1alpha.tracker.ModuleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ModuleService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloud.deps.api.v1alpha.tracker.ModuleService/List',
            depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListRequest.SerializeToString,
            depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListModuleResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloud.deps.api.v1alpha.tracker.ModuleService/ListSources',
            depscloud__api_dot_v1alpha_dot_schema_dot_schema__pb2.Module.SerializeToString,
            depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListSourcesResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListManaged(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloud.deps.api.v1alpha.tracker.ModuleService/ListManaged',
            depscloud__api_dot_v1alpha_dot_schema_dot_schema__pb2.Source.SerializeToString,
            depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListManagedResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class DependencyServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListDependents = channel.unary_unary(
                '/cloud.deps.api.v1alpha.tracker.DependencyService/ListDependents',
                request_serializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.DependencyRequest.SerializeToString,
                response_deserializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListDependentsResponse.FromString,
                )
        self.ListDependencies = channel.unary_unary(
                '/cloud.deps.api.v1alpha.tracker.DependencyService/ListDependencies',
                request_serializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.DependencyRequest.SerializeToString,
                response_deserializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListDependenciesResponse.FromString,
                )


class DependencyServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListDependents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDependencies(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DependencyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListDependents': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDependents,
                    request_deserializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.DependencyRequest.FromString,
                    response_serializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListDependentsResponse.SerializeToString,
            ),
            'ListDependencies': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDependencies,
                    request_deserializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.DependencyRequest.FromString,
                    response_serializer=depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListDependenciesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.deps.api.v1alpha.tracker.DependencyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DependencyService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListDependents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloud.deps.api.v1alpha.tracker.DependencyService/ListDependents',
            depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.DependencyRequest.SerializeToString,
            depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListDependentsResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDependencies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloud.deps.api.v1alpha.tracker.DependencyService/ListDependencies',
            depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.DependencyRequest.SerializeToString,
            depscloud__api_dot_v1alpha_dot_tracker_dot_tracker__pb2.ListDependenciesResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
