// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: depscloud/api/v1beta/core.proto

package v1beta

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// ProviderURL is a specifically formatted URI to create standard a standard
// representation for a source. The following shows example ProviderURL:
//  # General Format
//  - {provider}://{host}{path}#{reference}
//  # VCS Integrations
//  - github:///depscloud/tracker#main
//  - github://github.deps.cloud/oss/tracker#main
//  - gitlab:///depscloud/terraform#main
//  - gitlab://gitlab.deps.cloud/infra/terraform#main
//  - bitbucket:///depscloud/test#main
//  # Artifactory Integrations
//  - jfrog://jfrog.deps.cloud/oss/tracker#0.2.19
//  - nexus3://nexus3.deps.cloud/oss/tracker#0.2.19
type ProviderURL struct {
	Provider             string   `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Reference            string   `protobuf:"bytes,4,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProviderURL) Reset()         { *m = ProviderURL{} }
func (m *ProviderURL) String() string { return proto.CompactTextString(m) }
func (*ProviderURL) ProtoMessage()    {}
func (*ProviderURL) Descriptor() ([]byte, []int) {
	return fileDescriptor_34d5c495575bab3a, []int{0}
}
func (m *ProviderURL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProviderURL.Unmarshal(m, b)
}
func (m *ProviderURL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProviderURL.Marshal(b, m, deterministic)
}
func (m *ProviderURL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProviderURL.Merge(m, src)
}
func (m *ProviderURL) XXX_Size() int {
	return xxx_messageInfo_ProviderURL.Size(m)
}
func (m *ProviderURL) XXX_DiscardUnknown() {
	xxx_messageInfo_ProviderURL.DiscardUnknown(m)
}

var xxx_messageInfo_ProviderURL proto.InternalMessageInfo

func (m *ProviderURL) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *ProviderURL) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ProviderURL) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ProviderURL) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

// A source in depscloud represents an origin for information. This includes,
// but is not limited to, repositories and artifactories.
type Source struct {
	// The kind of source, typically repository or artifactory. This was kept
	// separate from the URL as systems like GitHub and GitLab offer some
	// artifact support.
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// A string formatted ProviderURL
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// Labels contain additional metadata about the entity
	Labels               map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Source) Reset()         { *m = Source{} }
func (m *Source) String() string { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()    {}
func (*Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_34d5c495575bab3a, []int{1}
}
func (m *Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Source.Unmarshal(m, b)
}
func (m *Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Source.Marshal(b, m, deterministic)
}
func (m *Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Source.Merge(m, src)
}
func (m *Source) XXX_Size() int {
	return xxx_messageInfo_Source.Size(m)
}
func (m *Source) XXX_DiscardUnknown() {
	xxx_messageInfo_Source.DiscardUnknown(m)
}

var xxx_messageInfo_Source proto.InternalMessageInfo

func (m *Source) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Source) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Source) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// A module in depscloud is a generic representation of an application or library.
type Module struct {
	// The language associated with the module.
	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	// The name of the application or library.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Labels contain additional metadata about the entity
	Labels               map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Module) Reset()         { *m = Module{} }
func (m *Module) String() string { return proto.CompactTextString(m) }
func (*Module) ProtoMessage()    {}
func (*Module) Descriptor() ([]byte, []int) {
	return fileDescriptor_34d5c495575bab3a, []int{2}
}
func (m *Module) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Module.Unmarshal(m, b)
}
func (m *Module) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Module.Marshal(b, m, deterministic)
}
func (m *Module) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Module.Merge(m, src)
}
func (m *Module) XXX_Size() int {
	return xxx_messageInfo_Module.Size(m)
}
func (m *Module) XXX_DiscardUnknown() {
	xxx_messageInfo_Module.DiscardUnknown(m)
}

var xxx_messageInfo_Module proto.InternalMessageInfo

func (m *Module) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *Module) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Module) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// SourceModule describes the relationship between a project and a module.
type SourceModule struct {
	// The version associated with the module.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// The system used to manage dependencies for the target module.
	System string `protobuf:"bytes,2,opt,name=system,proto3" json:"system,omitempty"`
	// Labels contain additional metadata about the association
	Labels               map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SourceModule) Reset()         { *m = SourceModule{} }
func (m *SourceModule) String() string { return proto.CompactTextString(m) }
func (*SourceModule) ProtoMessage()    {}
func (*SourceModule) Descriptor() ([]byte, []int) {
	return fileDescriptor_34d5c495575bab3a, []int{3}
}
func (m *SourceModule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceModule.Unmarshal(m, b)
}
func (m *SourceModule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceModule.Marshal(b, m, deterministic)
}
func (m *SourceModule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceModule.Merge(m, src)
}
func (m *SourceModule) XXX_Size() int {
	return xxx_messageInfo_SourceModule.Size(m)
}
func (m *SourceModule) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceModule.DiscardUnknown(m)
}

var xxx_messageInfo_SourceModule proto.InternalMessageInfo

func (m *SourceModule) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *SourceModule) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

func (m *SourceModule) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// ModuleDependency describes the relationship between two modules. Because
// of this circular relationship, traditional database modeling is difficult.
type ModuleDependency struct {
	// A reference to the associated dependent module (version or branch).
	Ref string `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	// The version constraint defined by the project.
	VersionConstraint string `protobuf:"bytes,2,opt,name=version_constraint,json=versionConstraint,proto3" json:"version_constraint,omitempty"`
	// The scopes at which the requested module is needed.
	Scopes []string `protobuf:"bytes,3,rep,name=scopes,proto3" json:"scopes,omitempty"`
	// Labels contain additional metadata about the entity
	Labels               map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ModuleDependency) Reset()         { *m = ModuleDependency{} }
func (m *ModuleDependency) String() string { return proto.CompactTextString(m) }
func (*ModuleDependency) ProtoMessage()    {}
func (*ModuleDependency) Descriptor() ([]byte, []int) {
	return fileDescriptor_34d5c495575bab3a, []int{4}
}
func (m *ModuleDependency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModuleDependency.Unmarshal(m, b)
}
func (m *ModuleDependency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModuleDependency.Marshal(b, m, deterministic)
}
func (m *ModuleDependency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleDependency.Merge(m, src)
}
func (m *ModuleDependency) XXX_Size() int {
	return xxx_messageInfo_ModuleDependency.Size(m)
}
func (m *ModuleDependency) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleDependency.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleDependency proto.InternalMessageInfo

func (m *ModuleDependency) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

func (m *ModuleDependency) GetVersionConstraint() string {
	if m != nil {
		return m.VersionConstraint
	}
	return ""
}

func (m *ModuleDependency) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *ModuleDependency) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func init() {
	proto.RegisterType((*ProviderURL)(nil), "depscloud.api.v1beta.ProviderURL")
	proto.RegisterType((*Source)(nil), "depscloud.api.v1beta.Source")
	proto.RegisterMapType((map[string]string)(nil), "depscloud.api.v1beta.Source.LabelsEntry")
	proto.RegisterType((*Module)(nil), "depscloud.api.v1beta.Module")
	proto.RegisterMapType((map[string]string)(nil), "depscloud.api.v1beta.Module.LabelsEntry")
	proto.RegisterType((*SourceModule)(nil), "depscloud.api.v1beta.SourceModule")
	proto.RegisterMapType((map[string]string)(nil), "depscloud.api.v1beta.SourceModule.LabelsEntry")
	proto.RegisterType((*ModuleDependency)(nil), "depscloud.api.v1beta.ModuleDependency")
	proto.RegisterMapType((map[string]string)(nil), "depscloud.api.v1beta.ModuleDependency.LabelsEntry")
}

func init() { proto.RegisterFile("depscloud/api/v1beta/core.proto", fileDescriptor_34d5c495575bab3a) }

var fileDescriptor_34d5c495575bab3a = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x53, 0xcd, 0xca, 0xd3, 0x40,
	0x14, 0x25, 0x5f, 0xbe, 0x2f, 0xda, 0x5b, 0x17, 0x75, 0x28, 0x12, 0x8a, 0xd0, 0xda, 0x55, 0x37,
	0x4e, 0xb0, 0x6e, 0xd4, 0x95, 0xf8, 0xb7, 0x90, 0x0a, 0x52, 0x71, 0xe3, 0x46, 0x26, 0x93, 0xdb,
	0x36, 0x34, 0x9d, 0x19, 0x66, 0x26, 0x81, 0x3e, 0x93, 0x6b, 0x9f, 0xc0, 0x37, 0xf2, 0x09, 0x64,
	0x26, 0x93, 0x56, 0x4a, 0x29, 0x2e, 0xea, 0xee, 0x9c, 0xfb, 0x73, 0xee, 0x3d, 0x37, 0x19, 0x18,
	0x17, 0xa8, 0x0c, 0xaf, 0x64, 0x5d, 0x64, 0x4c, 0x95, 0x59, 0xf3, 0x2c, 0x47, 0xcb, 0x32, 0x2e,
	0x35, 0x52, 0xa5, 0xa5, 0x95, 0x64, 0x78, 0x28, 0xa0, 0x4c, 0x95, 0xb4, 0x2d, 0x98, 0x4a, 0xe8,
	0x7f, 0xd6, 0xb2, 0x29, 0x0b, 0xd4, 0x5f, 0x97, 0x0b, 0x32, 0x82, 0xfb, 0x2a, 0xd0, 0x34, 0x9a,
	0x44, 0xb3, 0xde, 0xf2, 0xc0, 0x09, 0x81, 0xdb, 0x8d, 0x34, 0x36, 0xbd, 0xf1, 0x71, 0x8f, 0x5d,
	0x4c, 0x31, 0xbb, 0x49, 0xe3, 0x36, 0xe6, 0x30, 0x79, 0x0c, 0x3d, 0x8d, 0x2b, 0xd4, 0x28, 0x38,
	0xa6, 0xb7, 0x3e, 0x71, 0x0c, 0x4c, 0x7f, 0x44, 0x90, 0x7c, 0x91, 0xb5, 0xe6, 0xe8, 0x9a, 0xb7,
	0xa5, 0x28, 0xc2, 0x20, 0x8f, 0xc9, 0x00, 0xe2, 0x5a, 0x57, 0x61, 0x86, 0x83, 0xe4, 0x35, 0x24,
	0x15, 0xcb, 0xb1, 0x32, 0xe9, 0xdd, 0x24, 0x9e, 0xf5, 0xe7, 0x33, 0x7a, 0xce, 0x08, 0x6d, 0x35,
	0xe9, 0xc2, 0x97, 0xbe, 0x17, 0x56, 0xef, 0x97, 0xa1, 0x6f, 0xf4, 0x12, 0xfa, 0x7f, 0x85, 0xdd,
	0x88, 0x2d, 0xee, 0xc3, 0x54, 0x07, 0xc9, 0x10, 0xee, 0x1a, 0x56, 0xd5, 0x18, 0xc6, 0xb6, 0xe4,
	0xd5, 0xcd, 0x8b, 0x68, 0xfa, 0x33, 0x82, 0xe4, 0x93, 0x2c, 0xea, 0x0a, 0xdd, 0x69, 0x2a, 0x26,
	0xd6, 0x35, 0x5b, 0x63, 0x77, 0x9a, 0x8e, 0x3b, 0x27, 0x82, 0xed, 0xba, 0x7e, 0x8f, 0xff, 0x75,
	0xef, 0x56, 0xfd, 0xda, 0x7b, 0xff, 0x8a, 0xe0, 0x41, 0x7b, 0x91, 0xb0, 0x7d, 0x0a, 0xf7, 0x1a,
	0xd4, 0xa6, 0x94, 0x22, 0x08, 0x74, 0x94, 0x3c, 0x82, 0xc4, 0xec, 0x8d, 0xc5, 0x5d, 0x50, 0x09,
	0x8c, 0x7c, 0x38, 0xd9, 0x9f, 0x5e, 0xba, 0xfb, 0xff, 0x71, 0xf1, 0x3b, 0x82, 0x41, 0xab, 0xfc,
	0x0e, 0x15, 0x8a, 0x02, 0x05, 0xf7, 0x02, 0x1a, 0x57, 0x9d, 0x80, 0xc6, 0x15, 0x79, 0x0a, 0x24,
	0x98, 0xf9, 0xce, 0xa5, 0x30, 0x56, 0xb3, 0x52, 0x74, 0xbf, 0xe9, 0xc3, 0x90, 0x79, 0x7b, 0x48,
	0x78, 0xc3, 0x5c, 0x2a, 0x34, 0x69, 0x3c, 0x89, 0xbd, 0x61, 0xcf, 0xc8, 0xc7, 0x13, 0xc3, 0xf3,
	0x4b, 0x1f, 0xec, 0xb8, 0xd0, 0x95, 0x4d, 0xbf, 0x79, 0xf2, 0x6d, 0xbc, 0x2e, 0xed, 0xa6, 0xce,
	0x29, 0x97, 0xbb, 0xec, 0xdc, 0xab, 0xce, 0x13, 0xff, 0xa2, 0x9f, 0xff, 0x09, 0x00, 0x00, 0xff,
	0xff, 0x34, 0xd6, 0x5f, 0x50, 0xf4, 0x03, 0x00, 0x00,
}
