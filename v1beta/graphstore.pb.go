// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: graphstore/api/v1beta/graphstore.proto

package v1beta

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Encoding int32

const (
	// Data format not specified, defaults to JSON.
	Encoding_UNSPECIFIED Encoding = 0
	// Data is stored as JSON for human readability.
	Encoding_JSON Encoding = 1
	// Data is stored as serialized protocol buffers for efficiency.
	Encoding_PROTOCOL_BUFFERS Encoding = 2
)

var Encoding_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "JSON",
	2: "PROTOCOL_BUFFERS",
}

var Encoding_value = map[string]int32{
	"UNSPECIFIED":      0,
	"JSON":             1,
	"PROTOCOL_BUFFERS": 2,
}

func (x Encoding) String() string {
	return proto.EnumName(Encoding_name, int32(x))
}

func (Encoding) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0f0ac65aedfca40e, []int{0}
}

// GraphItem represents an element of a graph, serialized to a database row.
type GraphItem struct {
	// The kind represents the type of data stored
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// k1 is the first part of the key
	K1 []byte `protobuf:"bytes,2,opt,name=k1,proto3" json:"k1,omitempty"`
	// k2 is the second part of the key
	K2 []byte `protobuf:"bytes,3,opt,name=k2,proto3" json:"k2,omitempty"`
	// k3 is the third part of the key
	K3 []byte `protobuf:"bytes,4,opt,name=k3,proto3" json:"k3,omitempty"`
	// Encoding represents how data is serialized.
	Encoding Encoding `protobuf:"varint,5,opt,name=encoding,proto3,enum=graphstore.api.v1beta.Encoding" json:"encoding,omitempty"`
	// The encoded data.
	Data                 []byte   `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GraphItem) Reset()         { *m = GraphItem{} }
func (m *GraphItem) String() string { return proto.CompactTextString(m) }
func (*GraphItem) ProtoMessage()    {}
func (*GraphItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0ac65aedfca40e, []int{0}
}
func (m *GraphItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphItem.Unmarshal(m, b)
}
func (m *GraphItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphItem.Marshal(b, m, deterministic)
}
func (m *GraphItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphItem.Merge(m, src)
}
func (m *GraphItem) XXX_Size() int {
	return xxx_messageInfo_GraphItem.Size(m)
}
func (m *GraphItem) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphItem.DiscardUnknown(m)
}

var xxx_messageInfo_GraphItem proto.InternalMessageInfo

func (m *GraphItem) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *GraphItem) GetK1() []byte {
	if m != nil {
		return m.K1
	}
	return nil
}

func (m *GraphItem) GetK2() []byte {
	if m != nil {
		return m.K2
	}
	return nil
}

func (m *GraphItem) GetK3() []byte {
	if m != nil {
		return m.K3
	}
	return nil
}

func (m *GraphItem) GetEncoding() Encoding {
	if m != nil {
		return m.Encoding
	}
	return Encoding_UNSPECIFIED
}

func (m *GraphItem) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Nodes represent entities in a graph.
type Node struct {
	Kind                 string   `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Body                 *any.Any `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0ac65aedfca40e, []int{1}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Node) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Node) GetBody() *any.Any {
	if m != nil {
		return m.Body
	}
	return nil
}

// Edges represent associations between nodes.
type Edge struct {
	Kind                 string   `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	FromKey              []byte   `protobuf:"bytes,2,opt,name=from_key,json=fromKey,proto3" json:"from_key,omitempty"`
	ToKey                []byte   `protobuf:"bytes,3,opt,name=to_key,json=toKey,proto3" json:"to_key,omitempty"`
	Key                  []byte   `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Body                 *any.Any `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Edge) Reset()         { *m = Edge{} }
func (m *Edge) String() string { return proto.CompactTextString(m) }
func (*Edge) ProtoMessage()    {}
func (*Edge) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0ac65aedfca40e, []int{2}
}
func (m *Edge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Edge.Unmarshal(m, b)
}
func (m *Edge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Edge.Marshal(b, m, deterministic)
}
func (m *Edge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Edge.Merge(m, src)
}
func (m *Edge) XXX_Size() int {
	return xxx_messageInfo_Edge.Size(m)
}
func (m *Edge) XXX_DiscardUnknown() {
	xxx_messageInfo_Edge.DiscardUnknown(m)
}

var xxx_messageInfo_Edge proto.InternalMessageInfo

func (m *Edge) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Edge) GetFromKey() []byte {
	if m != nil {
		return m.FromKey
	}
	return nil
}

func (m *Edge) GetToKey() []byte {
	if m != nil {
		return m.ToKey
	}
	return nil
}

func (m *Edge) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Edge) GetBody() *any.Any {
	if m != nil {
		return m.Body
	}
	return nil
}

// PutRequest encapsulates elements we are inserting into the database.
type PutRequest struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Edges                []*Edge  `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutRequest) Reset()         { *m = PutRequest{} }
func (m *PutRequest) String() string { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()    {}
func (*PutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0ac65aedfca40e, []int{3}
}
func (m *PutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRequest.Unmarshal(m, b)
}
func (m *PutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRequest.Marshal(b, m, deterministic)
}
func (m *PutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRequest.Merge(m, src)
}
func (m *PutRequest) XXX_Size() int {
	return xxx_messageInfo_PutRequest.Size(m)
}
func (m *PutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutRequest proto.InternalMessageInfo

func (m *PutRequest) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *PutRequest) GetEdges() []*Edge {
	if m != nil {
		return m.Edges
	}
	return nil
}

type PutResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutResponse) Reset()         { *m = PutResponse{} }
func (m *PutResponse) String() string { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()    {}
func (*PutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0ac65aedfca40e, []int{4}
}
func (m *PutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutResponse.Unmarshal(m, b)
}
func (m *PutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutResponse.Marshal(b, m, deterministic)
}
func (m *PutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutResponse.Merge(m, src)
}
func (m *PutResponse) XXX_Size() int {
	return xxx_messageInfo_PutResponse.Size(m)
}
func (m *PutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutResponse proto.InternalMessageInfo

// DeleteRequest encapsulates elements we are removing from the database.
type DeleteRequest struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Edges                []*Edge  `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0ac65aedfca40e, []int{5}
}
func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *DeleteRequest) GetEdges() []*Edge {
	if m != nil {
		return m.Edges
	}
	return nil
}

type DeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0ac65aedfca40e, []int{6}
}
func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

// ListRequest encapsulates requirements for listing data from the database.
type ListRequest struct {
	Parent               string   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Kind                 string   `protobuf:"bytes,4,opt,name=kind,proto3" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0ac65aedfca40e, []int{7}
}
func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

// ListResponse encapsulates listed response data.
type ListResponse struct {
	NextPageToken        string   `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	Nodes                []*Node  `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Edges                []*Edge  `protobuf:"bytes,3,rep,name=edges,proto3" json:"edges,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0ac65aedfca40e, []int{8}
}
func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *ListResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *ListResponse) GetEdges() []*Edge {
	if m != nil {
		return m.Edges
	}
	return nil
}

// Neighbor represents a node and all the edges pointing to it.
type Neighbor struct {
	Node                 *Node    `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Edges                []*Edge  `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Neighbor) Reset()         { *m = Neighbor{} }
func (m *Neighbor) String() string { return proto.CompactTextString(m) }
func (*Neighbor) ProtoMessage()    {}
func (*Neighbor) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0ac65aedfca40e, []int{9}
}
func (m *Neighbor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Neighbor.Unmarshal(m, b)
}
func (m *Neighbor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Neighbor.Marshal(b, m, deterministic)
}
func (m *Neighbor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Neighbor.Merge(m, src)
}
func (m *Neighbor) XXX_Size() int {
	return xxx_messageInfo_Neighbor.Size(m)
}
func (m *Neighbor) XXX_DiscardUnknown() {
	xxx_messageInfo_Neighbor.DiscardUnknown(m)
}

var xxx_messageInfo_Neighbor proto.InternalMessageInfo

func (m *Neighbor) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *Neighbor) GetEdges() []*Edge {
	if m != nil {
		return m.Edges
	}
	return nil
}

// EdgeFilter is used to reduce the considered edges
type EdgeFilter struct {
	Kind                 string   `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Body                 *any.Any `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EdgeFilter) Reset()         { *m = EdgeFilter{} }
func (m *EdgeFilter) String() string { return proto.CompactTextString(m) }
func (*EdgeFilter) ProtoMessage()    {}
func (*EdgeFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0ac65aedfca40e, []int{10}
}
func (m *EdgeFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdgeFilter.Unmarshal(m, b)
}
func (m *EdgeFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdgeFilter.Marshal(b, m, deterministic)
}
func (m *EdgeFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdgeFilter.Merge(m, src)
}
func (m *EdgeFilter) XXX_Size() int {
	return xxx_messageInfo_EdgeFilter.Size(m)
}
func (m *EdgeFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_EdgeFilter.DiscardUnknown(m)
}

var xxx_messageInfo_EdgeFilter proto.InternalMessageInfo

func (m *EdgeFilter) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *EdgeFilter) GetBody() *any.Any {
	if m != nil {
		return m.Body
	}
	return nil
}

// NeighborsRequest encapsulates the variety of ways neighbors can be looked up.
type NeighborsRequest struct {
	// Used to fetch all neighbors of a node, regardless of directionality.
	Node *Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	// Used to fetch all neighbors on the receiving end of edges.
	From *Node `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	// Used to fetch all neighbors on the initiating end of edges.
	To *Node `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	// Used to reduce the edges considered when finding neighbors.
	Filter               []*EdgeFilter `protobuf:"bytes,4,rep,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NeighborsRequest) Reset()         { *m = NeighborsRequest{} }
func (m *NeighborsRequest) String() string { return proto.CompactTextString(m) }
func (*NeighborsRequest) ProtoMessage()    {}
func (*NeighborsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0ac65aedfca40e, []int{11}
}
func (m *NeighborsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NeighborsRequest.Unmarshal(m, b)
}
func (m *NeighborsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NeighborsRequest.Marshal(b, m, deterministic)
}
func (m *NeighborsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NeighborsRequest.Merge(m, src)
}
func (m *NeighborsRequest) XXX_Size() int {
	return xxx_messageInfo_NeighborsRequest.Size(m)
}
func (m *NeighborsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NeighborsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NeighborsRequest proto.InternalMessageInfo

func (m *NeighborsRequest) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *NeighborsRequest) GetFrom() *Node {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *NeighborsRequest) GetTo() *Node {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *NeighborsRequest) GetFilter() []*EdgeFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

// NeighborsResponse returns all neighbors from the query.
type NeighborsResponse struct {
	Neighbors            []*Neighbor `protobuf:"bytes,1,rep,name=neighbors,proto3" json:"neighbors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NeighborsResponse) Reset()         { *m = NeighborsResponse{} }
func (m *NeighborsResponse) String() string { return proto.CompactTextString(m) }
func (*NeighborsResponse) ProtoMessage()    {}
func (*NeighborsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0ac65aedfca40e, []int{12}
}
func (m *NeighborsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NeighborsResponse.Unmarshal(m, b)
}
func (m *NeighborsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NeighborsResponse.Marshal(b, m, deterministic)
}
func (m *NeighborsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NeighborsResponse.Merge(m, src)
}
func (m *NeighborsResponse) XXX_Size() int {
	return xxx_messageInfo_NeighborsResponse.Size(m)
}
func (m *NeighborsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NeighborsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NeighborsResponse proto.InternalMessageInfo

func (m *NeighborsResponse) GetNeighbors() []*Neighbor {
	if m != nil {
		return m.Neighbors
	}
	return nil
}

// TraverseRequest is used to navigate the graph, optionally halting once the
// desired node is found.
type TraverseRequest struct {
	Cancel               bool              `protobuf:"varint,1,opt,name=cancel,proto3" json:"cancel,omitempty"`
	Request              *NeighborsRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TraverseRequest) Reset()         { *m = TraverseRequest{} }
func (m *TraverseRequest) String() string { return proto.CompactTextString(m) }
func (*TraverseRequest) ProtoMessage()    {}
func (*TraverseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0ac65aedfca40e, []int{13}
}
func (m *TraverseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraverseRequest.Unmarshal(m, b)
}
func (m *TraverseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraverseRequest.Marshal(b, m, deterministic)
}
func (m *TraverseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraverseRequest.Merge(m, src)
}
func (m *TraverseRequest) XXX_Size() int {
	return xxx_messageInfo_TraverseRequest.Size(m)
}
func (m *TraverseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TraverseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TraverseRequest proto.InternalMessageInfo

func (m *TraverseRequest) GetCancel() bool {
	if m != nil {
		return m.Cancel
	}
	return false
}

func (m *TraverseRequest) GetRequest() *NeighborsRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

// TraverseResponse is used to encapsulate a traversal request and its
// associated response data.
type TraverseResponse struct {
	Request              *NeighborsRequest  `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Response             *NeighborsResponse `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TraverseResponse) Reset()         { *m = TraverseResponse{} }
func (m *TraverseResponse) String() string { return proto.CompactTextString(m) }
func (*TraverseResponse) ProtoMessage()    {}
func (*TraverseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f0ac65aedfca40e, []int{14}
}
func (m *TraverseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraverseResponse.Unmarshal(m, b)
}
func (m *TraverseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraverseResponse.Marshal(b, m, deterministic)
}
func (m *TraverseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraverseResponse.Merge(m, src)
}
func (m *TraverseResponse) XXX_Size() int {
	return xxx_messageInfo_TraverseResponse.Size(m)
}
func (m *TraverseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TraverseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TraverseResponse proto.InternalMessageInfo

func (m *TraverseResponse) GetRequest() *NeighborsRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *TraverseResponse) GetResponse() *NeighborsResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func init() {
	proto.RegisterEnum("graphstore.api.v1beta.Encoding", Encoding_name, Encoding_value)
	proto.RegisterType((*GraphItem)(nil), "graphstore.api.v1beta.GraphItem")
	proto.RegisterType((*Node)(nil), "graphstore.api.v1beta.Node")
	proto.RegisterType((*Edge)(nil), "graphstore.api.v1beta.Edge")
	proto.RegisterType((*PutRequest)(nil), "graphstore.api.v1beta.PutRequest")
	proto.RegisterType((*PutResponse)(nil), "graphstore.api.v1beta.PutResponse")
	proto.RegisterType((*DeleteRequest)(nil), "graphstore.api.v1beta.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "graphstore.api.v1beta.DeleteResponse")
	proto.RegisterType((*ListRequest)(nil), "graphstore.api.v1beta.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "graphstore.api.v1beta.ListResponse")
	proto.RegisterType((*Neighbor)(nil), "graphstore.api.v1beta.Neighbor")
	proto.RegisterType((*EdgeFilter)(nil), "graphstore.api.v1beta.EdgeFilter")
	proto.RegisterType((*NeighborsRequest)(nil), "graphstore.api.v1beta.NeighborsRequest")
	proto.RegisterType((*NeighborsResponse)(nil), "graphstore.api.v1beta.NeighborsResponse")
	proto.RegisterType((*TraverseRequest)(nil), "graphstore.api.v1beta.TraverseRequest")
	proto.RegisterType((*TraverseResponse)(nil), "graphstore.api.v1beta.TraverseResponse")
}

func init() {
	proto.RegisterFile("graphstore/api/v1beta/graphstore.proto", fileDescriptor_0f0ac65aedfca40e)
}

var fileDescriptor_0f0ac65aedfca40e = []byte{
	// 809 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xdd, 0x6e, 0xeb, 0x44,
	0x10, 0xc6, 0x8e, 0x93, 0xe3, 0x4c, 0x4e, 0x5b, 0xb3, 0x3a, 0x45, 0x6e, 0x2a, 0xd4, 0xd4, 0x40,
	0x1b, 0x81, 0x64, 0x93, 0xf4, 0x0a, 0x55, 0x5c, 0xf4, 0x27, 0x41, 0x2d, 0x55, 0x12, 0x6d, 0x5a,
	0x2e, 0xb8, 0x20, 0x72, 0xe2, 0xad, 0x6b, 0x25, 0xf5, 0x1a, 0x7b, 0x53, 0x91, 0x3e, 0x01, 0xef,
	0x00, 0x17, 0xbc, 0x0b, 0xaf, 0xc1, 0xc3, 0xa0, 0x5d, 0xaf, 0x9d, 0x00, 0xf9, 0x69, 0x7b, 0xc1,
	0xdd, 0xce, 0xe4, 0x9b, 0x99, 0x6f, 0xbe, 0xd9, 0x1d, 0x07, 0x8e, 0xfc, 0xd8, 0x8d, 0x1e, 0x12,
	0x46, 0x63, 0xe2, 0xb8, 0x51, 0xe0, 0x3c, 0x35, 0x86, 0x84, 0xb9, 0xce, 0xdc, 0x6b, 0x47, 0x31,
	0x65, 0x14, 0xed, 0x2e, 0x78, 0xdc, 0x28, 0xb0, 0x53, 0x5c, 0x75, 0xcf, 0xa7, 0xd4, 0x9f, 0x10,
	0x47, 0x80, 0x86, 0xd3, 0x7b, 0xc7, 0x0d, 0x67, 0x69, 0x84, 0xf5, 0x87, 0x02, 0xe5, 0xef, 0x78,
	0xd0, 0x15, 0x23, 0x8f, 0x08, 0x81, 0x36, 0x0e, 0x42, 0xcf, 0x54, 0x6a, 0x4a, 0xbd, 0x8c, 0xc5,
	0x19, 0x6d, 0x83, 0x3a, 0x6e, 0x98, 0x6a, 0x4d, 0xa9, 0xbf, 0xc7, 0xea, 0xb8, 0x21, 0xec, 0xa6,
	0x59, 0x90, 0x76, 0x53, 0xd8, 0x27, 0xa6, 0x26, 0xed, 0x13, 0x74, 0x0a, 0x3a, 0x09, 0x47, 0xd4,
	0x0b, 0x42, 0xdf, 0x2c, 0xd6, 0x94, 0xfa, 0x76, 0xf3, 0xc0, 0x5e, 0x4a, 0xcb, 0x6e, 0x49, 0x18,
	0xce, 0x03, 0x38, 0x01, 0xcf, 0x65, 0xae, 0x59, 0x12, 0xe9, 0xc4, 0xd9, 0xfa, 0x01, 0xb4, 0x0e,
	0xf5, 0xc8, 0x52, 0x72, 0x06, 0x14, 0xc6, 0x64, 0x26, 0xd9, 0xf1, 0x23, 0xaa, 0x83, 0x36, 0xa4,
	0xde, 0x4c, 0x10, 0xac, 0x34, 0x3f, 0xd8, 0x69, 0xeb, 0x76, 0xd6, 0xba, 0x7d, 0x16, 0xce, 0xb0,
	0x40, 0x58, 0xbf, 0x2a, 0xa0, 0xb5, 0x3c, 0x7f, 0x79, 0xe2, 0x3d, 0xd0, 0xef, 0x63, 0xfa, 0x38,
	0x98, 0x67, 0x7f, 0xc7, 0xed, 0xef, 0xc9, 0x0c, 0xed, 0x42, 0x89, 0x51, 0xf1, 0x43, 0x2a, 0x42,
	0x91, 0x51, 0xee, 0x96, 0x54, 0xb4, 0xff, 0x52, 0x29, 0x6e, 0xa4, 0x12, 0x03, 0xf4, 0xa6, 0x0c,
	0x93, 0x9f, 0xa7, 0x24, 0x61, 0xa8, 0x01, 0xc5, 0x90, 0x7a, 0x24, 0x31, 0x95, 0x5a, 0xa1, 0x5e,
	0x69, 0xee, 0xaf, 0x90, 0x8f, 0x8b, 0x82, 0x53, 0x24, 0x0f, 0x21, 0x9e, 0x4f, 0x12, 0x53, 0x5d,
	0x1b, 0xc2, 0xdb, 0xc5, 0x29, 0xd2, 0xda, 0x82, 0x8a, 0xa8, 0x99, 0x44, 0x34, 0x4c, 0x88, 0x35,
	0x85, 0xad, 0x4b, 0x32, 0x21, 0x8c, 0xfc, 0xbf, 0x2c, 0x0c, 0xd8, 0xce, 0xca, 0xe6, 0x44, 0x2a,
	0x37, 0x41, 0x92, 0x8b, 0xf1, 0x09, 0x94, 0x22, 0x37, 0x26, 0x21, 0x93, 0xe3, 0x91, 0x16, 0xda,
	0x87, 0x72, 0xe4, 0xfa, 0x64, 0x90, 0x04, 0xcf, 0x44, 0x4c, 0xa8, 0x88, 0x75, 0xee, 0xe8, 0x07,
	0xcf, 0x04, 0x7d, 0x0a, 0x20, 0x7e, 0x64, 0x74, 0x4c, 0x42, 0x31, 0xa6, 0x32, 0x16, 0xf0, 0x5b,
	0xee, 0xc8, 0x07, 0xae, 0xcd, 0x07, 0x6e, 0xfd, 0xae, 0xc0, 0xfb, 0xb4, 0x6e, 0xca, 0x03, 0x1d,
	0xc1, 0x4e, 0x48, 0x7e, 0x61, 0x83, 0x85, 0x44, 0x29, 0x83, 0x2d, 0xee, 0xee, 0xe5, 0xc9, 0x72,
	0x9d, 0xd4, 0xd7, 0xeb, 0x54, 0x78, 0xb1, 0x4e, 0x21, 0xe8, 0x1d, 0x12, 0xf8, 0x0f, 0x43, 0x1a,
	0x23, 0x07, 0x34, 0x9e, 0x47, 0xd0, 0xd9, 0x50, 0x50, 0x00, 0xdf, 0x32, 0x97, 0x6b, 0x00, 0x6e,
	0xb6, 0x83, 0x09, 0x23, 0xf1, 0xd2, 0x17, 0x92, 0xdd, 0x6e, 0x75, 0xe3, 0xed, 0xfe, 0x4b, 0x01,
	0x23, 0x23, 0x9f, 0x64, 0x73, 0x7d, 0x75, 0x13, 0x0e, 0x68, 0xfc, 0x05, 0xca, 0x7a, 0xeb, 0x03,
	0x38, 0x10, 0x7d, 0x05, 0x2a, 0xa3, 0x72, 0x0f, 0xac, 0x85, 0xab, 0x8c, 0xa2, 0x6f, 0xa0, 0x74,
	0x2f, 0x7a, 0x35, 0x35, 0xa1, 0xd1, 0xe1, 0x1a, 0x8d, 0x52, 0x51, 0xb0, 0x0c, 0xb0, 0x30, 0x7c,
	0xbc, 0xd0, 0x9d, 0xbc, 0x3d, 0xdf, 0x42, 0x39, 0xcc, 0x9c, 0xf2, 0x05, 0xad, 0x5a, 0x83, 0x59,
	0x30, 0x9e, 0x47, 0x58, 0x13, 0xd8, 0xb9, 0x8d, 0xdd, 0x27, 0x12, 0x27, 0x64, 0xe1, 0x21, 0x8c,
	0xdc, 0x70, 0x44, 0x26, 0x42, 0x32, 0x1d, 0x4b, 0x0b, 0x9d, 0xc1, 0xbb, 0x38, 0x85, 0x48, 0x69,
	0x8e, 0x37, 0xd4, 0xc9, 0x46, 0x80, 0xb3, 0x38, 0xeb, 0x37, 0x05, 0x8c, 0x79, 0x39, 0xd9, 0xc1,
	0x42, 0x5e, 0xe5, 0x6d, 0x79, 0xd1, 0x25, 0xe8, 0xb1, 0x4c, 0x27, 0xb9, 0xd5, 0x37, 0xe7, 0x48,
	0xf1, 0x38, 0x8f, 0xfc, 0xf2, 0x14, 0xf4, 0xec, 0x4b, 0x81, 0x76, 0xa0, 0x72, 0xd7, 0xe9, 0xf7,
	0x5a, 0x17, 0x57, 0xed, 0xab, 0xd6, 0xa5, 0xf1, 0x11, 0xd2, 0x41, 0xbb, 0xee, 0x77, 0x3b, 0x86,
	0x82, 0x3e, 0x80, 0xd1, 0xc3, 0xdd, 0xdb, 0xee, 0x45, 0xf7, 0x66, 0x70, 0x7e, 0xd7, 0x6e, 0xb7,
	0x70, 0xdf, 0x50, 0x9b, 0x7f, 0x16, 0x00, 0xc4, 0xf7, 0xad, 0xcf, 0x4b, 0xa2, 0x1b, 0x28, 0xf4,
	0xa6, 0x0c, 0xad, 0x9a, 0xee, 0x7c, 0x09, 0x57, 0xad, 0x75, 0x10, 0x29, 0xd1, 0x1d, 0x94, 0xd2,
	0xe5, 0x85, 0x3e, 0x5f, 0x81, 0xfe, 0xc7, 0x4a, 0xad, 0x7e, 0xb1, 0x01, 0x25, 0xd3, 0x76, 0x41,
	0xe3, 0x9b, 0x08, 0xad, 0xa2, 0xb0, 0xb0, 0x1e, 0xab, 0x9f, 0xad, 0xc5, 0xc8, 0x84, 0x3f, 0x41,
	0x39, 0x17, 0x18, 0xbd, 0x74, 0x8c, 0xd5, 0x17, 0xcf, 0x0a, 0x0d, 0x40, 0xcf, 0xae, 0x0f, 0x3a,
	0x5a, 0x11, 0xf5, 0xaf, 0xeb, 0x5c, 0x3d, 0xde, 0x88, 0x4b, 0x93, 0xd7, 0x95, 0xaf, 0x95, 0xf3,
	0xc3, 0x1f, 0x0f, 0xfc, 0x80, 0x3d, 0x4c, 0x87, 0xf6, 0x88, 0x3e, 0x3a, 0x1e, 0x89, 0x92, 0xd1,
	0x84, 0x4e, 0xbd, 0x85, 0xff, 0x42, 0xc3, 0x92, 0x58, 0x3c, 0x27, 0x7f, 0x07, 0x00, 0x00, 0xff,
	0xff, 0x4d, 0x0e, 0x26, 0x28, 0x2b, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GraphStoreClient is the client API for GraphStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GraphStoreClient interface {
	// Used to insert data into the store.
	Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error)
	// Used to delete data from the store.
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	// Used to list data within the store.
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	// Used to query data within the store.
	Neighbors(ctx context.Context, in *NeighborsRequest, opts ...grpc.CallOption) (*NeighborsResponse, error)
	// Used to navigate the graph.
	Traverse(ctx context.Context, opts ...grpc.CallOption) (GraphStore_TraverseClient, error)
}

type graphStoreClient struct {
	cc *grpc.ClientConn
}

func NewGraphStoreClient(cc *grpc.ClientConn) GraphStoreClient {
	return &graphStoreClient{cc}
}

func (c *graphStoreClient) Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error) {
	out := new(PutResponse)
	err := c.cc.Invoke(ctx, "/graphstore.api.v1beta.GraphStore/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphStoreClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/graphstore.api.v1beta.GraphStore/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphStoreClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/graphstore.api.v1beta.GraphStore/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphStoreClient) Neighbors(ctx context.Context, in *NeighborsRequest, opts ...grpc.CallOption) (*NeighborsResponse, error) {
	out := new(NeighborsResponse)
	err := c.cc.Invoke(ctx, "/graphstore.api.v1beta.GraphStore/Neighbors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *graphStoreClient) Traverse(ctx context.Context, opts ...grpc.CallOption) (GraphStore_TraverseClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GraphStore_serviceDesc.Streams[0], "/graphstore.api.v1beta.GraphStore/Traverse", opts...)
	if err != nil {
		return nil, err
	}
	x := &graphStoreTraverseClient{stream}
	return x, nil
}

type GraphStore_TraverseClient interface {
	Send(*TraverseRequest) error
	Recv() (*TraverseResponse, error)
	grpc.ClientStream
}

type graphStoreTraverseClient struct {
	grpc.ClientStream
}

func (x *graphStoreTraverseClient) Send(m *TraverseRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *graphStoreTraverseClient) Recv() (*TraverseResponse, error) {
	m := new(TraverseResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GraphStoreServer is the server API for GraphStore service.
type GraphStoreServer interface {
	// Used to insert data into the store.
	Put(context.Context, *PutRequest) (*PutResponse, error)
	// Used to delete data from the store.
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
	// Used to list data within the store.
	List(context.Context, *ListRequest) (*ListResponse, error)
	// Used to query data within the store.
	Neighbors(context.Context, *NeighborsRequest) (*NeighborsResponse, error)
	// Used to navigate the graph.
	Traverse(GraphStore_TraverseServer) error
}

// UnimplementedGraphStoreServer can be embedded to have forward compatible implementations.
type UnimplementedGraphStoreServer struct {
}

func (*UnimplementedGraphStoreServer) Put(ctx context.Context, req *PutRequest) (*PutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Put not implemented")
}
func (*UnimplementedGraphStoreServer) Delete(ctx context.Context, req *DeleteRequest) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedGraphStoreServer) List(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedGraphStoreServer) Neighbors(ctx context.Context, req *NeighborsRequest) (*NeighborsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Neighbors not implemented")
}
func (*UnimplementedGraphStoreServer) Traverse(srv GraphStore_TraverseServer) error {
	return status.Errorf(codes.Unimplemented, "method Traverse not implemented")
}

func RegisterGraphStoreServer(s *grpc.Server, srv GraphStoreServer) {
	s.RegisterService(&_GraphStore_serviceDesc, srv)
}

func _GraphStore_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphStoreServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/graphstore.api.v1beta.GraphStore/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphStoreServer).Put(ctx, req.(*PutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphStore_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphStoreServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/graphstore.api.v1beta.GraphStore/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphStoreServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphStore_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphStoreServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/graphstore.api.v1beta.GraphStore/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphStoreServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphStore_Neighbors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NeighborsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GraphStoreServer).Neighbors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/graphstore.api.v1beta.GraphStore/Neighbors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GraphStoreServer).Neighbors(ctx, req.(*NeighborsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GraphStore_Traverse_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GraphStoreServer).Traverse(&graphStoreTraverseServer{stream})
}

type GraphStore_TraverseServer interface {
	Send(*TraverseResponse) error
	Recv() (*TraverseRequest, error)
	grpc.ServerStream
}

type graphStoreTraverseServer struct {
	grpc.ServerStream
}

func (x *graphStoreTraverseServer) Send(m *TraverseResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *graphStoreTraverseServer) Recv() (*TraverseRequest, error) {
	m := new(TraverseRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GraphStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "graphstore.api.v1beta.GraphStore",
	HandlerType: (*GraphStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Put",
			Handler:    _GraphStore_Put_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _GraphStore_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _GraphStore_List_Handler,
		},
		{
			MethodName: "Neighbors",
			Handler:    _GraphStore_Neighbors_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Traverse",
			Handler:       _GraphStore_Traverse_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "graphstore/api/v1beta/graphstore.proto",
}
